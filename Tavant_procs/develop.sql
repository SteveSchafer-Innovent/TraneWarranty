SELECT
CLAIM_NUMBER,
COST_CATEGORY AS STEP_NUMBER,
SEGMENT1 AS BUSINESS_UNIT,
-- X.PRODUCT_CATEGORY AS RESERVE_GROUP,
COMMERCIAL_POLICY,
TAVANT_CLAIM_TYPE,
CLAIM_TYPE,
COST_CATEGORY,
GL_EXPENSE_AMT AS EXPENSE_AMOUNT,
100 * (GL_EXPENSE_AMT - TRUNC(GL_EXPENSE_AMT)) AS EXPENSE_AMOUNT_DEC,
MATERIAL_LABOR,
SEGMENT4 AS GL_ACCOUNT,
EXPENSE_TYPE_DESCR,
'????' AS OFFICE_NAME,
SEGMENT5 AS GL_PROD_CODE,
MANF_PROD_CODE,
'????' AS CUSTOMER_NUMBER,
'????' AS CUSTOMER_NAME,
'????' AS INTERNAL_EXTERNAL,
'????' AS TRX_DATE,
'????' AS TRX_YEAR,
'????' AS TRX_MONTH,
'????' AS INTMONTHS_TRX_TO_BASE,
'????' AS INTMONTHS_SHIP_TO_BASE,
SHIP_DATE,
'????' AS SHIP_YEAR_MONTH,
'????' AS INTMONTHS_SHIP_TO_TRX,
START_DATE,
'????' AS INTMONTHS_START_TO_TRX,
FAILURE_DATE AS FAIL_DATE,
'????' AS INTMONTHS_FAIL_TO_TRX,
WARRANTY_TYPE,
WARRANTY_DURATION,
GL_EXPENSE_CURR AS CURRENCY,
'????' AS COUNTRY_INDICATOR,
'????' AS RETROFIT_ID,
'NA' AS GL_DEPT,
'????' AS IN_RESERVE_PERCENT,
'????' AS IN_RESERVE_PERCENT_25,
'????' AS TRX_LAG,
'????' AS START_LAG_25,
'????' AS TRXYEARMONTH,
'????' AS EXPENSE_AMT_IN_RES,
'????' AS EXPENSE_AMT_NOT_IN_RES
FROM (

SELECT 
EXTRACT.*,
-- CLAIM_TYPE
CASE COMMERCIAL_POLICY
	WHEN 0 THEN CASE TAVANT_CLAIM_TYPE
		WHEN 'MACHINE' THEN CASE WARRANTY_TYPE
			WHEN 'EXTENDED' THEN 'NA'
			WHEN 'GOODWILL' THEN 'CONCESSION'
			WHEN 'STANDARD' THEN 'MATERIAL'
			ELSE 'UNKNOWN WARRANTY_TYPE'
			END
		WHEN 'CAMPAIGN' THEN CASE
			-- NOT SURE ABOUT THIS - LOCAL PURCHASE?
			WHEN (UPPER(COST_CATEGORY) IN ('LABOR') OR UPPER(COST_CATEGORY) LIKE 'TRAVEL%') THEN 'RETROFIT LABOR'
			ELSE 'RETROFIT MATERIAL'
			END
		ELSE 'UNKNOWN TAVANT_CLAIM_TYPE'
		END
	WHEN 1 THEN CASE TAVANT_CLAIM_TYPE
		WHEN 'MACHINE' THEN 'CONCESSION'
		WHEN 'CAMPAIGN' THEN 'NA'
		ELSE 'UNKNOWN TAVANT_CLAIM_TYPE'
		END
	ELSE 'UNKNOWN COMMERCIAL_POLICY'
	END AS CLAIM_TYPE,
CASE COST_CATEGORY
	WHEN 'Additional Travel Hours' THEN 'LABOR'
	WHEN 'Freight' THEN 'MATERIAL'
	WHEN 'Labor' THEN 'LABOR'
	WHEN 'Local Purchase' THEN 'MATERIAL'
	WHEN 'Non Oem Parts' THEN 'MATERIAL'
	WHEN 'Oem Parts' THEN 'MATERIAL'
	WHEN 'Others' THEN 'LABOR'
	WHEN 'Rebate' THEN 'MATERIAL'
	WHEN 'Travel by Hours' THEN 'LABOR'
	WHEN 'Travel by Perdiem' THEN 'LABOR'
	ELSE 'unknown'
	END AS MATERIAL_LABOR,
CASE COST_CATEGORY
	WHEN 'Additional Travel Hours' THEN 'LABOR'
	WHEN 'Freight' THEN 'FREIGHT'
	WHEN 'Item Freight And Duty' THEN 'FREIGHT'
	WHEN 'Labor' THEN 'LABOR'
	WHEN 'Local Purchase' THEN 'MATERIAL'
	WHEN 'Meals' THEN 'OTHER'
	WHEN 'Miscellaneous Parts' THEN 'OTHER'
	WHEN 'Non Oem Parts' THEN 'MATERIAL'
	WHEN 'Oem Parts' THEN 'MATERIAL'
	WHEN 'Other Freight And Duty' THEN 'OTHER'
	WHEN 'Others' THEN 'LABOR'
	WHEN 'Parking' THEN 'OTHER'
	WHEN 'Per Diem' THEN 'OTHER'
	WHEN 'Rebate' THEN 'REBATE'
	WHEN 'Rental Charges' THEN 'OTHER'
	WHEN 'Tolls' THEN 'OTHER'
	WHEN 'Travel By Distance' THEN 'OTHER'
	WHEN 'Travel By Trip' THEN 'OTHER'
	WHEN 'Travel by Hours' THEN 'LABOR'
	WHEN 'Travel by Perdiem' THEN 'LABOR'
	ELSE CASE
		WHEN REBATES_GL_AMT IS NOT NULL THEN 'REBATE'
		ELSE 'unknown'
		END
	END AS EXPENSE_TYPE_DESCR,
MONTHS_BETWEEN(FAILURE_DATE, SHIP_DATE) AS SHIP2FAIL,
MONTHS_BETWEEN(FAILURE_DATE, START_DATE) AS START2FAIL,
-- WARRANTY_DURATION
CASE WARRANTY_TYPE
	WHEN 'EXTENDED' THEN 'NA'
	WHEN 'GOODWILL' THEN '548 day rule?'
	ELSE CASE
		WHEN MONTHS_BETWEEN(FAILURE_DATE, SHIP_DATE) <= 18 OR MONTHS_BETWEEN(FAILURE_DATE, START_DATE) <= 12 THEN '1ST-YEAR'
		WHEN MONTHS_BETWEEN(FAILURE_DATE, SHIP_DATE) <= 66 OR MONTHS_BETWEEN(FAILURE_DATE, START_DATE) <= 60 THEN '2-5-YEAR'
		WHEN MONTHS_BETWEEN(FAILURE_DATE, SHIP_DATE) <= 66 AND MONTHS_BETWEEN(FAILURE_DATE, START_DATE) <= 60 THEN '>2-5-YEAR'
		ELSE '>5-YEAR'
		END
	END AS WARRANTY_DURATION
FROM (

-- Extract
SELECT DISTINCT
		CLAIM.CLAIM_NUMBER,
		CLAIM.TYPE as TAVANT_CLAIM_TYPE, -- used for claim_type
		CLAIM.COMMERCIAL_POLICY, -- used for claim_type
		EXPENSES.QUERY_SOURCE,
		EXPENSES.WARRANTY_TYPE,
		EXPENSES.PRIORITY,
		EXPENSES.PART_NBR,
		EXPENSES.COST_CATEGORY,
		EXPENSES.GL_EXPENSE_STRING,
		-- 9258.115614.00000.511705.41125.0000.00000.00000
		REGEXP_SUBSTR(EXPENSES.GL_EXPENSE_STRING,'[^.]+', 1, 1) AS SEGMENT1,
		REGEXP_SUBSTR(EXPENSES.GL_EXPENSE_STRING,'[^.]+', 1, 2) AS SEGMENT2,
		REGEXP_SUBSTR(EXPENSES.GL_EXPENSE_STRING,'[^.]+', 1, 3) AS SEGMENT3,
		REGEXP_SUBSTR(EXPENSES.GL_EXPENSE_STRING,'[^.]+', 1, 4) AS SEGMENT4,
		REGEXP_SUBSTR(EXPENSES.GL_EXPENSE_STRING,'[^.]+', 1, 5) AS SEGMENT5,
		REGEXP_SUBSTR(EXPENSES.GL_EXPENSE_STRING,'[^.]+', 1, 6) AS SEGMENT6,
		REGEXP_SUBSTR(EXPENSES.GL_EXPENSE_STRING,'[^.]+', 1, 7) AS SEGMENT7,
		REGEXP_SUBSTR(EXPENSES.GL_EXPENSE_STRING,'[^.]+', 1, 8) AS SEGMENT8,
		EXPENSES.GL_EXPENSE_AMT,
		EXPENSES.GL_EXPENSE_CURR,
		REBATES.GL_NAME AS REBATES_GL_NAME,
		REBATES.GL_CODE_WNTY_EXPENSE_REV AS REBATES_GL_CODE_WNTY_EXP_REV,
		REBATES.GL_AMT AS REBATES_GL_AMT,
		REBATES.GL_CURR AS REBATES_GL_CURR,
		CLAIM.FAILURE_DATE,
		ITEMS.ITEM_COUNT,
		ITEMS.MIN_SHIP_DATE AS SHIP_DATE,
		ITEMS.COUNT_OF_SHIP_DATE,
		ITEMS.MIN_START_DATE AS START_DATE,
		ITEMS.COUNT_OF_START_DATE,
		ITEMS.MIN_SALES_ORDER_NUMBER,
		ITEMS.COUNT_OF_SALES_ORDER_NUMBER,
		ITEMS.MIN_MFG,
		ITEMS.COUNT_OF_MFG,
		ITEMS.MIN_ORIGINAL_SOURCE_ID,
		ITEMS.COUNT_OF_ORIGINAL_SOURCE_ID,
		ITEMS.MIN_MANF_PROD_CODE AS MANF_PROD_CODE,
		ITEMS.COUNT_OF_MANF_PROD_CODE,
		ITEMS.PD_CODES
	FROM
		CLAIM
	INNER JOIN (
		SELECT
		CLAIMED_ITEM.CLAIM,
		COUNT(DISTINCT CLAIMED_ITEM.ID) AS ITEM_COUNT,
		MIN(CLAIMED_ITEM.ITEM_REF_INV_ITEM) AS MIN_ITEM_REF_INV_ITEM,
		COUNT(DISTINCT CLAIMED_ITEM.ITEM_REF_INV_ITEM) AS COUNT_OF_ITEM_REF_INV_ITEM,
		MIN(INVENTORY_ITEM.SHIPMENT_DATE) AS MIN_SHIP_DATE,
		COUNT(DISTINCT INVENTORY_ITEM.SHIPMENT_DATE) AS COUNT_OF_SHIP_DATE,
		MIN(INVENTORY_ITEM.DELIVERY_DATE) AS MIN_START_DATE,
		COUNT(DISTINCT INVENTORY_ITEM.DELIVERY_DATE) AS COUNT_OF_START_DATE,
		MIN(SALES_ORDER.SALES_ORDER_NUMBER) AS MIN_SALES_ORDER_NUMBER,
		COUNT(DISTINCT SALES_ORDER.SALES_ORDER_NUMBER) AS COUNT_OF_SALES_ORDER_NUMBER,
		MIN(SALES_ORDER.MFG) AS MIN_MFG,
		COUNT(DISTINCT SALES_ORDER.MFG) AS COUNT_OF_MFG,
		MIN(SALES_ORDER.ORIGINAL_SOURCE_ID) AS MIN_ORIGINAL_SOURCE_ID,
		COUNT(DISTINCT SALES_ORDER.ORIGINAL_SOURCE_ID) AS COUNT_OF_ORIGINAL_SOURCE_ID,
		MIN(ITEM.SIOP_SEGMENT6) AS MIN_MANF_PROD_CODE,
		COUNT(DISTINCT ITEM.SIOP_SEGMENT6) AS COUNT_OF_MANF_PROD_CODE,
		LISTAGG(PD.CODE, ', ') WITHIN GROUP (ORDER BY PD.CODE) AS PD_CODES
		FROM
			CLAIMED_ITEM
		INNER JOIN INVENTORY_ITEM
			ON CLAIMED_ITEM.ITEM_REF_INV_ITEM = INVENTORY_ITEM.ID
		INNER JOIN ITEM
			ON ITEM.ID = INVENTORY_ITEM.OF_TYPE
		INNER JOIN SALES_ORDER
			ON INVENTORY_ITEM.FOR_SALES_ORDER = SALES_ORDER.ID
		INNER JOIN WARRANTY
			ON WARRANTY.FOR_ITEM = INVENTORY_ITEM.ID
		INNER JOIN POLICY
			ON WARRANTY.ID = POLICY.WARRANTY
		LEFT OUTER JOIN POLICY_DEFINITION PD
			ON POLICY.POLICY_DEFINITION = PD.ID
		GROUP BY
		CLAIMED_ITEM.CLAIM
	) ITEMS
		ON ITEMS.CLAIM = CLAIM.ID
	INNER JOIN (
		--Expense Query For Parts:
		--r12 GL String Parts: ENTITY.LOCATION.COSTCENTER.ACCOUNT.R12PRODUCTCODE.INTERCOMPANY
		SELECT
				C.CLAIM_NUMBER,
				'OEM' AS QUERY_SOURCE,
				I.ITEM_NUMBER AS PART_NBR,
				LIG.NAME AS COST_CATEGORY, --formerly expense type
				PPI.GL_CODE_COGS_REVERSAL AS GL_COGS_REVERSAL_STRING,
				PPI.GL_CODE_REVENUE_REVERSAL AS GL_REV_REVERSAL_STRING,
				PPI.GL_CODE_WNTY_EXPENSE_REV AS GL_EXPENSE_STRING,
				-- GL_ACCOUNT is Segment4 of the GL_EXPENSE_STRING
				PPI.GL_COGS_AMT,
				PPI.GL_COGS_CURR AS GL_COGS_CURRENCY,
				PPI.GL_REVENUE_AMT,
				PPI.GL_REVENUE_CURR,
				PPI.GL_EXPENSE_AMT,
				PPI.GL_EXPENSE_CURR,
				AP.ID AS AP_ID,
				PD.ID AS PD_ID,
				PD.WARRANTY_TYPE,
				PD.PRIORITY
			FROM
				CLAIM C
			INNER JOIN PAYMENT P             ON C.PAYMENT = P.ID
			INNER JOIN LINE_ITEM_GROUPS LIGS ON P.ID = LIGS.FOR_PAYMENT
			INNER JOIN LINE_ITEM_GROUP LIG   ON LIGS.LINE_ITEM_GROUPS = LIG.ID
			INNER JOIN CURRENT_PART_INFO CPI ON LIG.ID = CPI.LINE_ITEM_GROUP
			INNER JOIN PART_PAYMENT_INFO PPI ON CPI.CURRENT_PART_PAYMENT_INFO = PPI.ID --NOTE: If modifier is not picked, PART_PAYMENT_INFO_MODIFIER table will be empty.
			INNER JOIN ITEM I                ON I.ID = PPI.ITEM 
			LEFT OUTER JOIN APPLICABLE_POLICY AP ON PPI.APPLICABLE_POLICY = AP.ID -- LINE_ITEM_GROUP.APPLICABLE_POLICY can be null
			LEFT OUTER JOIN POLICY_DEFINITION PD ON AP.POLICY_DEFINITION = PD.ID
		
		UNION ALL
		
		--Expense Query  for Cost Categories labor, non oem parts, travel, etc, everything but OEM parts
		SELECT DISTINCT
				C.CLAIM_NUMBER,
				'NON-OEM' AS QUERY_SOURCE,
				NULL AS ITEM_NUMBER,
				LIG.NAME AS COST_CATEGORY, --formerly expense type
				NULL AS GL_COGS_REVERSAL_STRING,
				NULL AS GL_REV_REVERSAL_STRING,
				LIG.GL_CODE_WNTY_EXPENSE_REV AS GL_EXPENSE_STRING,
				-- GL_ACCOUNT is Segment4 of the GL_EXPENSE_STRING
				NULL AS GL_COGS_AMT,
				NULL AS GL_COGS_CURRENCY,
				NULL AS GL_REVENUE_AMT,
				NULL AS GL_REVENUE_CURR,
				LIG.GL_AMT AS EXPENSE_AMOUNT,
				LIG.GL_CURR AS EXPENSE_CURRENCY,
				AP.ID AS AP_ID,
				PD.ID AS PD_ID,
				PD.WARRANTY_TYPE,
				PD.PRIORITY
			FROM
				CLAIM C
			INNER JOIN PAYMENT P             ON C.PAYMENT = P.ID
			INNER JOIN LINE_ITEM_GROUPS LIGS ON P.ID = LIGS.FOR_PAYMENT
			INNER JOIN LINE_ITEM_GROUP LIG   ON LIGS.LINE_ITEM_GROUPS = LIG.ID
			LEFT OUTER JOIN APPLICABLE_POLICY AP ON LIG.APPLICABLE_POLICY = AP.ID -- LINE_ITEM_GROUP.APPLICABLE_POLICY can be null
			LEFT OUTER JOIN POLICY_DEFINITION PD ON AP.POLICY_DEFINITION = PD.ID
			WHERE
				0 = 0
				AND LIG.NAME NOT IN('Oem Parts', 'Claim Amount')
				AND LIG.GL_CODE_WNTY_EXPENSE_REV IS NOT NULL 

	) EXPENSES
		ON EXPENSES.CLAIM_NUMBER = CLAIM.CLAIM_NUMBER
	LEFT OUTER JOIN (
		--Expense Query For OEM Parts Modifiers:
		SELECT
				C.CLAIM_NUMBER,
				I.ITEM_NUMBER AS PART_NBR,
				MI.MODIFIER_NAME AS GL_NAME,
				PPI.GL_CODE_WNTY_EXPENSE_REV,
				MI.GL_AMT,
				MI.GL_CURR,
				LIG.name,
				LIG.accepted_amt
			FROM
				CLAIM C
			INNER JOIN PAYMENT P                            ON C.PAYMENT = P.ID
			INNER JOIN LINE_ITEM_GROUPS LIGS                ON P.ID = LIGS.FOR_PAYMENT
			INNER JOIN LINE_ITEM_GROUP LIG                  ON LIGS.LINE_ITEM_GROUPS = LIG.ID
			INNER JOIN CURRENT_PART_INFO CPI                ON LIG.ID = CPI.LINE_ITEM_GROUP
			INNER JOIN PART_PAYMENT_INFO PPI                ON CPI.CURRENT_PART_PAYMENT_INFO = PPI.ID --NOTE: If modifier is not picked, PART_PAYMENT_INFO_MODIFIER table will be empty.
			LEFT OUTER JOIN PART_PAYMENT_INFO_MODIFIER PPIM ON PPI.ID = PPIM.PART_PAYMENT_INFO
			INNER JOIN MODIFIER_INFO MI                     ON MI.ID = PPIM.MODIFIER_INFO
			INNER JOIN ITEM I                               ON I.ID = PPI.ITEM
			WHERE
				0 = 0
				and mi.modifier_name like 'Rebate%'
	) REBATES
		ON REBATES.CLAIM_NUMBER = CLAIM.CLAIM_NUMBER AND REBATES.PART_NBR = EXPENSES.PART_NBR
	WHERE
		0 = 0
		-- AND CLAIM.FILED_ON_DATE > '13-NOV-2016'
		--AND claim.business_unit_info = 'HVAC TCP' --Jean Skemp recommends using original source id insteal
		AND STATE = 'ACCEPTED_AND_CLOSED'
		-- AND SALES_ORDER.ORIGINAL_SOURCE_ID IN('CS', 'GP')
		-- and claim.claim_number = 'C-10764292'
		-- and inventory_item.serial_number like '11492KBA3R'
		--ORDER BY claim, serial_number, priority
-- AND CLAIM.CLAIM_NUMBER = 'C-10764292'
/**/
AND CLAIM.CLAIM_NUMBER IN (
'C-10763992',
'C-10764004',
'C-10764005',
'C-10764006',
'C-10764013',
'C-10764014',
'C-10764015',
'C-10764019',
'C-10764022',
'C-10764023',
'C-10764024',
'C-10764025',
'C-10764028',
'C-10764038',
'C-10764041',
'C-10764048',
'C-10764066',
'C-10764067',
'C-10764073',
'C-10764079',
'C-10764106',
'C-10764106_I',
'C-10764198',
'C-10764218',
'C-10764224',
'C-10764227',
'C-10764275',
'C-10764284',
'C-10764285',
'C-10764288',
'C-10764292',
'C-10764323_D',
'C-10764338',
'C-10764534')
/**/
order by 1, 2, 3, 4, 5

) EXTRACT
) EXTRACT_EXTENDED
-- LEFT OUTER JOIN OTR_PROD_CODE_XREF_RCPO X
-- 	ON EXTRACT.MANF_PROD_CODE = X.MANF_PROD_CODE AND 'CSD' = X.GL_LEDGER
-- INNER JOIN DM_WAR_CSN_RSV_PCT_REF RES_PCT
--	ON EXTRACT_EXTENDED.EXPENSE_TYPE_DESCR = RES_PCT.EXPENSE_TYPE_DESCR AND ????.COMPANY_OWNED_IND = RES_PCT.COMPANY_OWNED_IND
WHERE 0=0
AND GL_EXPENSE_AMT <> 0;