/* $Workfile: MAP_SALES_DATA_68.sql $
*  $Revision: 1 $
*  $Archive: /DRTRNT_or_P/ORACLE R12/Warranty and Reserve/Tables/MAP_SALES_DATA_68/MAP_SALES_DATA_68.sql $
*  $Author: Laiqi $
*  $Date: 12/10/16 4:04p $
*
* Description: Loads MAP_SALES_DATA_68 table that is used by the
*           Actuate IOBs for the Warranty and Reserve reports. This table improves IOB caching performance.
*
*           Target:     DRTRNP.DBO.MAP_SALES_DATA_68
*           Source:     DRTRNP.DBO.
*
* Revisions: 
* 
*   change Date    Description 
*   -----------         ----------- 
*   12/10/2016      Pam Nelson, laiqi, IR - Initial creation for SMART P4 project - TTP 14939
*                           SQL Development done by Innovent Solutions
***********************************************************************************/ 
set timing on
set pause OFF
set feedback on
set echo on

spool MAP_SALES_DATA_68.log
whenever SQLERROR exit failure;

prompt User and DATABASE Connected To:
select user, NAME from v$database;

prompt Truncating MAP_SALES_DATA_68
exec p_truncate_listed_table ('DBO', 'MAP_SALES_DATA_68');

prompt Inserting DATA into MAP_SALES_DATA_68
INSERT /*+ APPEND */  INTO MAP_SALES_DATA_68
(
QUERY_SOURCE,
BU,
REVENUE_AMOUNT,
REVENUE_AMOUNT_DEC,
GL_ACCOUNT,
DEPT_ID,
DEPT_DESCR,
MANF_PROD_ID,
MANF_PROD_DESCR,
DIST_GL_PRODUCT,
RESERVE_GROUP,
JRNL_DATE,
JRNL_YEAR,
JRNL_MONTH,
JRNL_YEAR_MONTH,
JRNL_ID,
CURRENCY,
COUNTRY_INDICATOR
)
SELECT
	/*+ NO_CPU_COSTING */
	'RCPO' AS QUERY_SOURCE,
	NVL(PS.GL_BU_ID, CASE
	    WHEN PS.CURRENCY_CODE = 'USD' THEN 'GS303'
	    WHEN PS.CURRENCY_CODE = 'CAD' THEN 'GS315'
		ELSE NULL -- INVALID CODE
		END) AS BU,
	SUM(PS.ORDER_AMOUNT) AS REVENUE_AMOUNT,
	SUM(100 *(PS.ORDER_AMOUNT - TRUNC(PS.ORDER_AMOUNT))) AS REVENUE_AMOUNT_DEC,
	PS.R12_ACCOUNT AS GL_ACCOUNT,
	NVL(PS.R12_LOCATION, CASE
	    WHEN PS.CURRENCY_CODE = 'USD' THEN 97001
	    WHEN PS.CURRENCY_CODE = 'CAD' THEN 97011
		ELSE -10
		END) AS DEPT_ID,
	COALESCE(/* DP.DESCR */ DP.R12_LOCATION_DESCR, CASE
	    WHEN PS.CURRENCY_CODE = 'USD' THEN 'OTHER EQUIPMENT GROUP'
	    WHEN PS.CURRENCY_CODE = 'CAD' THEN 'CAN OTHER EQUIPMENT GROUP'
		ELSE 'INVALID CURRENCY-' || PS.CURRENCY_CODE
	END) AS DEPT_DESCR,
	PS.PLNT_GL_PROD AS MANF_PROD_ID,
	PX.MANF_PROD_CODE_DESCR AS MANF_PROD_DESCR,
	CASE
		WHEN PS.PART_TYPE = 'Y' AND PS.PARTS_PROD_CODE_IND = 'PCR'
			THEN '41204'
		ELSE PS.R12_PRODUCT
		END AS DIST_GL_PRODUCT,
	NVL(PX.PRODUCT_CATEGORY, 'INVALID PROD CODE - ' || PS.PLNT_GL_PROD) AS RESERVE_GROUP,
	PS.JRNL_DATE AS JRNL_DATE,
	CAST(TO_CHAR(JRNL_DATE, 'YYYY') AS INTEGER) AS JRNL_YEAR,
	CAST(TO_CHAR(JRNL_DATE, 'MM') AS   INTEGER) AS JRNL_MONTH,
	CAST(TO_CHAR(JRNL_DATE, 'YYYY') AS INTEGER) * 100 + CAST(TO_CHAR(JRNL_DATE, 'MM') AS INTEGER) AS JRNL_YEAR_MONTH,
	PS.ORGN_JRNL_ID AS JRNL_ID,
	PS.CURRENCY_CODE AS CURRENCY,
	CASE
		WHEN PS.R12_ENTITY IN('5773', '5588') THEN 'CAD'
		ELSE 'USD'
		END AS COUNTRY_INDICATOR
FROM
	R12_ORACLE_PS_REV_RCPO PS
INNER JOIN OTR_PROD_CODE_XREF_RCPO PX
	ON PS.PLNT_GL_PROD = PX.MANF_PROD_CODE
	AND PS.PLNT_GL_BU = PX.GL_LEDGER
LEFT OUTER JOIN /* R12_TRANE_LOCATIONS */ R12_LOCATION_STG DP
	ON DP.R12_LOCATION = PS.R12_LOCATION
WHERE
	PS.JRNL_DATE BETWEEN TO_DATE('01/01/2005', 'MM/DD/YYYY') AND LAST_DAY(ADD_MONTHS(SYSDATE, - 1))
	AND PX.TWO_FIVE = 'Y'
GROUP BY
	PS.GL_BU_ID,
	PS.R12_ACCOUNT,
	PS.R12_LOCATION,
	/* DP.DESCR */ DP.R12_LOCATION_DESCR,
	PS.PLNT_GL_PROD,
	PX.MANF_PROD_CODE_DESCR,
	CASE
		WHEN PS.PART_TYPE = 'Y' AND PS.PARTS_PROD_CODE_IND = 'PCR'
			THEN '41204'
		ELSE PS.R12_PRODUCT
		END,
	PS.R12_PRODUCT,
	PX.PRODUCT_CATEGORY,
	PS.JRNL_DATE,
	CAST(TO_CHAR(PS.JRNL_DATE, 'YYYY') AS INTEGER),
	CAST(TO_CHAR(PS.JRNL_DATE, 'MM') AS   INTEGER),
	CAST(TO_CHAR(PS.JRNL_DATE, 'YYYY') AS INTEGER) * 100 + CAST(TO_CHAR(PS.JRNL_DATE, 'MM') AS INTEGER),
	PS.ORGN_JRNL_ID,
	PS.CURRENCY_CODE,
	CASE
		WHEN PS.R12_ENTITY IN('5773', '5588') THEN 'CAD'
		ELSE 'USD'
    END;

COMMIT;

INSERT /*+ APPEND */  INTO MAP_SALES_DATA_68
(
QUERY_SOURCE,
BU,
REVENUE_AMOUNT,
REVENUE_AMOUNT_DEC,
GL_ACCOUNT,
DEPT_ID,
DEPT_DESCR,
MANF_PROD_ID,
MANF_PROD_DESCR,
DIST_GL_PRODUCT,
RESERVE_GROUP,
JRNL_DATE,
JRNL_YEAR,
JRNL_MONTH,
JRNL_YEAR_MONTH,
JRNL_ID,
CURRENCY,
COUNTRY_INDICATOR
)
SELECT
		/*+ NO_CPU_COSTING */
		'P/S GL' AS QUERY_SOURCE,
		GA.BUSINESS_UNIT AS BU,
		SUM(L.MONETARY_AMOUNT) AS REVENUE_AMOUNT,
		SUM(100 *(L.MONETARY_AMOUNT - TRUNC(L.MONETARY_AMOUNT))) AS REVENUE_AMOUNT_DEC,
		L.R12_ACCOUNT AS GL_ACCOUNT,
		L.R12_LOCATION AS DEPT_ID,
		/* DP.DESCR */ DP.R12_LOCATION_DESCR AS DEPT_DESCR,
		L.PS_PRODUCT AS MANF_PROD_ID,
		/* PR.DESCR */ PR.R12_PRODUCT_DESCR AS MANF_PROD_DESCR,
		L.R12_PRODUCT AS DIST_GL_PRODUCT,
		NVL(PX.PRODUCT_CATEGORY, 'INVALID PROD CODE - ' || L.R12_PRODUCT) AS RESERVE_GROUP,
		GA.JOURNAL_DATE AS JRNL_DATE,
		TO_NUMBER(TO_CHAR(GA.JOURNAL_DATE, 'YYYY')) AS JRNL_YEAR,
		TO_NUMBER(TO_CHAR(GA.JOURNAL_DATE, 'MM')) AS JRNL_MONTH,
		TO_NUMBER(TO_CHAR(GA.JOURNAL_DATE, 'YYYY')) * 100 + TO_NUMBER(TO_CHAR(GA.JOURNAL_DATE, 'MM')) AS JRNL_YEAR_MONTH,
		GA.JOURNAL_ID AS JRNL_ID,
		L.CURRENCY_CD AS CURRENCY,
		CASE
			WHEN L.R12_ENTITY IN('5773', '5588') THEN 'CAD'
			ELSE 'USD'
			END AS COUNTRY_INDICATOR
	FROM
		R12_JRNL_LN_PS L
	INNER JOIN R12_JRNL_HEADER_PS GA
		ON GA.BUSINESS_UNIT = L.BUSINESS_UNIT
		AND GA.JOURNAL_ID = L.JOURNAL_ID
		AND GA.JOURNAL_DATE = L.JOURNAL_DATE
		AND GA.UNPOST_SEQ = L.UNPOST_SEQ
	INNER JOIN R12_ACCOUNT_FILTER_UPD AFU
		ON AFU.R12_ACCOUNT = L.R12_ACCOUNT
	LEFT OUTER JOIN /* R12_TRANE_PRODUCTS_PS */ R12_PRODUCT_STG PR
		ON L.R12_PRODUCT = PR.R12_PRODUCT
	LEFT OUTER JOIN /* R12_TRANE_LOCATIONS */ R12_LOCATION_STG DP
		ON L.R12_LOCATION = DP.R12_LOCATION 
	INNER JOIN OTR_PROD_CODE_XREF_RCPO PX
		ON L.PS_PRODUCT = PX.MANF_PROD_CODE
		AND L.BUSINESS_UNIT = PX.GL_LEDGER
	WHERE
		GA.JRNL_HDR_STATUS IN('P', 'U')
		AND GA.FISCAL_YEAR IN('2003', '2004')
		AND L.LEDGER = 'ACTUALS'
		AND((L.PS_ACCOUNT = 'NA'
		AND AFU.EQUAL_700000 = 'Y')
		OR(L.PS_ACCOUNT <> 'NA'
		AND L.PS_ACCOUNT = '700000'))
		AND GA.BUSINESS_UNIT IN('CAN', 'CSD')
		AND PX.TWO_FIVE = 'Y'
	GROUP BY
		GA.BUSINESS_UNIT,
		L.R12_ACCOUNT,
		L.R12_LOCATION,
		/* DP.DESCR */ DP.R12_LOCATION_DESCR,
		L.PS_PRODUCT,
		L.R12_PRODUCT,
		/* PR.DESCR */ PR.R12_PRODUCT_DESCR,
		PX.PRODUCT_CATEGORY,
		GA.JOURNAL_DATE,
		TO_NUMBER(TO_CHAR(GA.JOURNAL_DATE, 'YYYY')),
		TO_NUMBER(TO_CHAR(GA.JOURNAL_DATE, 'MM')),
		TO_NUMBER(TO_CHAR(GA.JOURNAL_DATE, 'YYYY')) * 100 + TO_NUMBER(TO_CHAR(GA.JOURNAL_DATE, 'MM')),
		GA.JOURNAL_ID,
		L.CURRENCY_CD,
		CASE
			WHEN L.R12_ENTITY IN('5773', '5588') THEN 'CAD'
			ELSE 'USD'
			END;

COMMIT;

INSERT /*+ APPEND */  INTO MAP_SALES_DATA_68
(
QUERY_SOURCE,
BU,
REVENUE_AMOUNT,
REVENUE_AMOUNT_DEC,
GL_ACCOUNT,
DEPT_ID,
DEPT_DESCR,
MANF_PROD_ID,
MANF_PROD_DESCR,
DIST_GL_PRODUCT,
RESERVE_GROUP,
JRNL_DATE,
JRNL_YEAR,
JRNL_MONTH,
JRNL_YEAR_MONTH,
JRNL_ID,
CURRENCY,
COUNTRY_INDICATOR
)
SELECT
		/*+ NO_CPU_COSTING */
		'P/S LEDGER' AS QUERY_SOURCE,
		PS.BUSINESS_UNIT AS BU,
		SUM(PS.POSTED_TOTAL_AMT) AS REVENUE_AMOUNT,
		SUM(100 *(PS.POSTED_TOTAL_AMT - TRUNC(PS.POSTED_TOTAL_AMT))) AS REVENUE_AMOUNT_DEC,
		PS.R12_ACCOUNT AS GL_ACCOUNT,
		PS.R12_LOCATION AS DEPT_ID,
		/* DP.DESCR */ DP.R12_LOCATION_DESCR AS DEPT_DESCR,
		PS.PS_PRODUCT AS MANF_PROD_ID,
		/* PR.DESCR */ PR.R12_PRODUCT_DESCR AS MANF_PROD_DESCR,
		PS.R12_PRODUCT AS DIST_GL_PRODUCT,
		NVL(PX.PRODUCT_CATEGORY, 'INVALID PROD CODE - '|| PS.R12_PRODUCT) AS RESERVE_GROUP,
		TO_DATE('15-' || PS.ACCOUNTING_PERIOD || '-' || PS.FISCAL_YEAR, 'DD-MM-YYYY') AS JRNL_DATE,
		PS.FISCAL_YEAR AS JRNL_YEAR,
		PS.ACCOUNTING_PERIOD AS JRNL_MONTH,
		PS.FISCAL_YEAR * 100 + PS.ACCOUNTING_PERIOD AS JRNL_YEAR_MONTH,
		'ZZZZZZ' AS JRNL_ID,
		PS.CURRENCY_CD AS CURRENCY,
		CASE
			WHEN PS.BUSINESS_UNIT = 'CSD' THEN 'USD'
			WHEN PS.BUSINESS_UNIT = 'CAN' THEN 'CAD'
			ELSE ''
			END AS COUNTRY_INDICATOR
	FROM
		R12_LEDGER2_PS PS
	INNER JOIN R12_ACCOUNT_FILTER_UPD AFU
		ON AFU.R12_ACCOUNT = PS.R12_ACCOUNT
	LEFT OUTER JOIN /* R12_TRANE_PRODUCTS_PS */ R12_PRODUCT_STG PR
		ON PS.R12_PRODUCT = PR.R12_PRODUCT
	LEFT OUTER JOIN /* R12_TRANE_LOCATIONS */ R12_LOCATION_STG DP
		ON PS.R12_LOCATION = DP.R12_LOCATION
	INNER JOIN OTR_PROD_CODE_XREF_RCPO PX
		ON PS.PS_PRODUCT = PX.MANF_PROD_CODE
		AND PS.BUSINESS_UNIT = PX.GL_LEDGER
	WHERE
		PS.FISCAL_YEAR IN('2000', '2001', '2002')
		AND PS.ACCOUNTING_PERIOD <= '12'
		AND((PS.PS_ACCOUNT = 'NA'
		AND AFU.EQUAL_700000 = 'Y')
		OR(PS.PS_ACCOUNT <> 'NA'
		AND PS.PS_ACCOUNT = '700000'))
		AND PS.LEDGER = 'ACTUALS'
		/* 2-5 year Warranty Project Rule */
		AND PX.TWO_FIVE = 'Y'
	GROUP BY
		PS.BUSINESS_UNIT,
		PS.R12_ACCOUNT,
		PS.R12_LOCATION,
		/* DP.DESCR */ DP.R12_LOCATION_DESCR,
		PS.PS_PRODUCT,
		PS.R12_PRODUCT,
		/* PR.DESCR */ PR.R12_PRODUCT_DESCR,
		PX.PRODUCT_CATEGORY,
		TO_DATE('15-' || PS.ACCOUNTING_PERIOD || '-' || PS.FISCAL_YEAR, 'DD-MM-YYYY'),
		PS.FISCAL_YEAR,
		PS.ACCOUNTING_PERIOD,
		PS.FISCAL_YEAR * 100 + PS.ACCOUNTING_PERIOD,
		PS.CURRENCY_CD,
		CASE
			WHEN PS.BUSINESS_UNIT = 'CSD' THEN 'USD'
			WHEN PS.BUSINESS_UNIT = 'CAN' THEN 'CAD'
			ELSE ''
			END;

COMMIT;

INSERT /*+ APPEND */  INTO MAP_SALES_DATA_68
(
QUERY_SOURCE,
BU,
REVENUE_AMOUNT,
REVENUE_AMOUNT_DEC,
GL_ACCOUNT,
DEPT_ID,
DEPT_DESCR,
MANF_PROD_ID,
MANF_PROD_DESCR,
DIST_GL_PRODUCT,
RESERVE_GROUP,
JRNL_DATE,
JRNL_YEAR,
JRNL_MONTH,
JRNL_YEAR_MONTH,
JRNL_ID,
CURRENCY,
COUNTRY_INDICATOR
)
SELECT
		/*+ NO_CPU_COSTING */
		DISTINCT
		'CS_LD' AS QUERY_SOURCE,
		RS_LEDGER.BUSINESS_UNIT AS BU,
		SUM(RS_LEDGER.SALES_TOTAL) AS REVENUE_AMOUNT,
		SUM(100 *(RS_LEDGER.SALES_TOTAL - TRUNC(RS_LEDGER.SALES_TOTAL))) AS REVENUE_AMOUNT_DEC,
		RS_LEDGER.R12_ACCOUNT
		AS GL_ACCOUNT,
		RS_LEDGER.R12_LOCATION
		AS DEPT_ID,
		/* DP.DESCR */ DP.R12_LOCATION_DESCR AS DEPT_DESCR,
		RS_LEDGER.PS_PRODUCT_ID
		AS MANF_PROD_ID,
		/* PR.DESCR */ PR.R12_PRODUCT_DESCR AS MANF_PROD_DESCR,
		RS_LEDGER.R12_PRODUCT
		AS DIST_GL_PRODUCT,
		NVL(PX.PRODUCT_CATEGORY, 'INVALID PROD CODE - ' || RS_LEDGER.R12_PRODUCT) AS RESERVE_GROUP,
		TO_DATE('15-' || RS_LEDGER.ACCOUNTING_PERIOD || '-' || RS_LEDGER.ACCOUNTING_YEAR, 'DD-MM-YYYY') AS JRNL_DATE,
		RS_LEDGER.ACCOUNTING_YEAR AS JRNL_YEAR,
		RS_LEDGER.ACCOUNTING_PERIOD AS JRNL_MONTH,
		RS_LEDGER.ACCOUNTING_YEAR * 100 + RS_LEDGER.ACCOUNTING_PERIOD AS JRNL_YEAR_MONTH,
		'ZZZZZZ' AS JRNL_ID,
		SUBSTR('', 3) AS CURRENCY,
		CASE
			WHEN RS_LEDGER.R12_ENTITY IN('5773', '5588') THEN 'CAD'
			ELSE 'USD'
			END AS COUNTRY_INDICATOR
	FROM
		R12_COM_SALES_RS_LEDGER RS_LEDGER
	INNER JOIN R12_ACCOUNT_FILTER_UPD AFU
		ON AFU.R12_ACCOUNT = RS_LEDGER.R12_ACCOUNT
	LEFT OUTER JOIN /* R12_TRANE_PRODUCTS_PS */ R12_PRODUCT_STG PR
		ON RS_LEDGER.R12_PRODUCT = PR.R12_PRODUCT 
	LEFT OUTER JOIN /* R12_TRANE_LOCATIONS */ R12_LOCATION_STG DP
		ON RS_LEDGER.R12_LOCATION = DP.R12_LOCATION
	INNER JOIN OTR_PROD_CODE_XREF_RCPO PX
		ON RS_LEDGER.PS_PRODUCT_ID = PX.MANF_PROD_CODE
		AND RS_LEDGER.BUSINESS_UNIT = PX.GL_LEDGER
	WHERE
		PX.TWO_FIVE = 'Y'
		AND((RS_LEDGER.PS_ACCOUNT = 'NA'
		AND AFU.EQUAL_700000 = 'Y')
		OR(RS_LEDGER.PS_ACCOUNT <> 'NA'
		AND RS_LEDGER.PS_ACCOUNT = '700000'))
		AND RS_LEDGER.LEDGER = 'ACTUALS'
		AND RS_LEDGER.ACCOUNTING_PERIOD <= '12'
		AND RS_LEDGER.ACCOUNTING_YEAR IN('2000', '2001')
	GROUP BY
		RS_LEDGER.BUSINESS_UNIT,
		RS_LEDGER.R12_ACCOUNT,
		RS_LEDGER.R12_LOCATION,
		/* DP.DESCR */ DP.R12_LOCATION_DESCR,
		RS_LEDGER.PS_PRODUCT_ID,
		RS_LEDGER.R12_PRODUCT,
		/* PR.DESCR */ PR.R12_PRODUCT_DESCR,
		RS_LEDGER.R12_PRODUCT,
		PX.PRODUCT_CATEGORY,
		TO_DATE('15-' || RS_LEDGER.ACCOUNTING_PERIOD || '-' || RS_LEDGER.ACCOUNTING_YEAR, 'DD-MM-YYYY'),
		RS_LEDGER.ACCOUNTING_YEAR,
		RS_LEDGER.ACCOUNTING_PERIOD,
		RS_LEDGER.ACCOUNTING_YEAR * 100 + RS_LEDGER.ACCOUNTING_PERIOD,
		CASE
			WHEN RS_LEDGER.R12_ENTITY IN('5773', '5588') THEN 'CAD'
			ELSE 'USD'
			END;

COMMIT;

INSERT /*+ APPEND */  INTO MAP_SALES_DATA_68
(
QUERY_SOURCE,
BU,
REVENUE_AMOUNT,
REVENUE_AMOUNT_DEC,
GL_ACCOUNT,
DEPT_ID,
DEPT_DESCR,
MANF_PROD_ID,
MANF_PROD_DESCR,
DIST_GL_PRODUCT,
RESERVE_GROUP,
JRNL_DATE,
JRNL_YEAR,
JRNL_MONTH,
JRNL_YEAR_MONTH,
JRNL_ID,
CURRENCY,
COUNTRY_INDICATOR
)
SELECT
		/*+ NO_CPU_COSTING */
		'PBS' AS QUERY_SOURCE,
		BUSINESS_UNIT AS BU,
		SUM(P7_TOTAL) AS REVENUE_AMOUNT,
		SUM(100 *(P7_TOTAL - TRUNC(P7_TOTAL))) AS REVENUE_AMOUNT_DEC,
		GL_ACCOUNT AS GL_ACCOUNT,
		DEPTID AS DEPT_ID,
		DEPT_DESCR,
		PRODCODE AS MANF_PROD_ID,
		PROD_DESCR AS MANF_PROD_DESCR,
		GL_PRODCODE AS DIST_GL_PRODUCT,
		NVL(RESERVE_GROUP, 'LARGE') AS RESERVE_GROUP,
		JRNL_DATE AS JRNL_DATE,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')) AS JRNL_YEAR,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')) AS JRNL_MONTH,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')) * 100 + TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')) AS JRNL_YEAR_MONTH,
		JRNL_ID AS JRNL_ID,
		CURRENCY AS CURRENCY,
		NATION_CURR AS COUNTRY_INDICATOR
	FROM
		(
			SELECT
					/*+ NO_CPU_COSTING */
					D.R12_ENTITY AS BUSINESS_UNIT,
					D.INVOICE AS INVOICE,
					D.LINE_SEQ_NUM AS SEQ_NUM,
					D.ACCT_ENTRY_TYPE AS ENTRY_TYPE,
					D.JOURNAL_ID AS JRNL_ID,
					D.JOURNAL_DATE AS JRNL_DATE,
					D.R12_ACCOUNT AS GL_ACCOUNT,
					D.MONETARY_AMOUNT AS P7_TOTAL,
					D.R12_LOCATION AS DEPTID,
					/* DP.DESCR */ DP.R12_LOCATION_DESCR AS DEPT_DESCR,
					/* PR.DESCR */ PR.R12_PRODUCT_DESCR AS PROD_DESCR,
					X.PRODUCT_CATEGORY AS RESERVE_GROUP,
					A.MANF_PROD_ID AS PRODCODE,
					CASE
						WHEN D.R12_PRODUCT IN('41204', '41198') THEN '41204'
						ELSE D.R12_PRODUCT
						END AS GL_PRODCODE,
					D.CURRENCY_CD AS CURRENCY,
					CASE
						WHEN D.R12_ENTITY IN('5773', '5588') THEN 'CAD'
						ELSE 'USD'
						END AS NATION_CURR
				FROM
					R12_BI_LINE_PSB A
				INNER JOIN R12_BI_ACCT_ENTRY_PSB D
					ON D.LINE_SEQ_NUM = A.LINE_SEQ_NUM
					AND D.INVOICE = A.INVOICE AND D.BUSINESS_UNIT = A.BUSINESS_UNIT
				INNER JOIN R12_BI_HDR_PSB B
					ON D.INVOICE = B.INVOICE AND D.BUSINESS_UNIT = B.PS_BUSINESS_UNIT
				INNER JOIN R12_TRNBI_BI_HDR_PSB C
					ON D.INVOICE = C.INVOICE AND D.BUSINESS_UNIT = C.BUSINESS_UNIT
				INNER JOIN R12_ACCOUNT_FILTER_UPD AFU 
					ON AFU.R12_ACCOUNT = D.R12_ACCOUNT
				INNER JOIN OTR_PROD_CODE_XREF_RCPO X
					ON A.MANF_PROD_ID = X.MANF_PROD_CODE
				LEFT OUTER JOIN /* R12_TRANE_PRODUCTS_PS */ R12_PRODUCT_STG PR
					ON D.R12_PRODUCT = PR.R12_PRODUCT
				LEFT OUTER JOIN /* R12_TRANE_LOCATIONS */ R12_LOCATION_STG DP
					ON D.R12_LOCATION = DP.R12_LOCATION
				WHERE
					D.JOURNAL_DATE BETWEEN TO_DATE('03/01/2006', 'MM/DD/YYYY') AND LAST_DAY(ADD_MONTHS(SYSDATE, - 1))
					AND D.PS_ACCOUNT = '700000'
					AND B.BILL_SOURCE_ID = 'PBS'
					AND C.TRNBI_PROJECT_TYPE = '7'
					AND X.GL_LEDGER = 'CSD'
					AND X.TWO_FIVE = 'Y'
					AND D.LEDGER = 'ACTUALS' 
					AND D.PS_PRODUCT <> '804180'
					AND D.PS_PRODUCT <> '804120'
					AND D.PS_PRODUCT <> '804190'
		)
	GROUP BY
		BUSINESS_UNIT,
		GL_ACCOUNT,
		DEPTID,
		DEPT_DESCR,
		PROD_DESCR,
		PRODCODE,
		GL_PRODCODE,
		NVL(RESERVE_GROUP, 'LARGE'),
		JRNL_DATE,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')),
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')),
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')) * 100 + TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')),
		JRNL_ID,
		CURRENCY,
		NATION_CURR;

COMMIT;

INSERT /*+ APPEND */  INTO MAP_SALES_DATA_68
(
QUERY_SOURCE,
BU,
REVENUE_AMOUNT,
REVENUE_AMOUNT_DEC,
GL_ACCOUNT,
DEPT_ID,
DEPT_DESCR,
MANF_PROD_ID,
MANF_PROD_DESCR,
DIST_GL_PRODUCT,
RESERVE_GROUP,
JRNL_DATE,
JRNL_YEAR,
JRNL_MONTH,
JRNL_YEAR_MONTH,
JRNL_ID,
CURRENCY,
COUNTRY_INDICATOR
)
SELECT
		/*+ NO_CPU_COSTING */
		'P21' AS QUERY_SOURCE,
		BUSINESS_UNIT AS BU,
		SUM(P7_TOTAL) AS REVENUE_AMOUNT,
		SUM(100 *(P7_TOTAL - TRUNC(P7_TOTAL))) AS REVENUE_AMOUNT_DEC,
		GL_ACCOUNT AS GL_ACCOUNT,
		DEPTID AS DEPT_ID,
		DEPT_DESCR AS DEPT_DESCR,
		PRODCODE AS MANF_PROD_ID,
		PROD_DESCR AS MANF_PROD_DESCR,
		GL_PRODCODE AS DIST_GL_PRODUCT,
		NVL(RESERVE_GROUP, 'LARGE') AS RESERVE_GROUP,
		JRNL_DATE AS JRNL_DATE,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')) AS JRNL_YEAR,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')) AS JRNL_MONTH,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')) * 100 + TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')) AS JRNL_YEAR_MONTH,
		JRNL_ID AS JRNL_ID,
		CURRENCY AS CURRENCY,
		NATION_CURR AS COUNTRY_INDICATOR
	FROM
		(
			SELECT
					/*+ NO_CPU_COSTING */
					D.R12_ENTITY AS BUSINESS_UNIT,
					D.INVOICE AS INVOICE,
					D.LINE_SEQ_NUM AS SEQ_NUM,
					D.ACCT_ENTRY_TYPE AS ENTRY_TYPE,
					D.JOURNAL_ID AS JRNL_ID,
					D.JOURNAL_DATE AS JRNL_DATE,
					D.R12_ACCOUNT AS GL_ACCOUNT,
					D.MONETARY_AMOUNT AS P7_TOTAL,
					D.R12_LOCATION AS DEPTID,
					DP.R12_LOCATION_DESCR AS DEPT_DESCR,
					PR.R12_PRODUCT_DESCR AS PROD_DESCR,
					X.PRODUCT_CATEGORY AS RESERVE_GROUP,
					A.MANF_PROD_ID AS PRODCODE,
					CASE
						WHEN D.R12_PRODUCT IN('41204', '41198') THEN '41204'
						ELSE D.R12_PRODUCT
						END AS GL_PRODCODE,
					D.CURRENCY_CD AS CURRENCY,
					CASE
						WHEN D.R12_ENTITY IN('5773', '5588') THEN 'CAD'
						ELSE 'USD'
						END AS NATION_CURR
				FROM
					R12_BI_LINE_PSB A
				INNER JOIN R12_BI_ACCT_ENTRY_PSB D
					ON D.LINE_SEQ_NUM = A.LINE_SEQ_NUM
					AND D.INVOICE = A.INVOICE
					AND D.BUSINESS_UNIT = A.BUSINESS_UNIT
				INNER JOIN R12_BI_HDR_PSB B
					ON D.INVOICE = B.INVOICE
					AND D.BUSINESS_UNIT = B.PS_BUSINESS_UNIT
				INNER JOIN R12_TRNBI_BI_HDR_PSB C
					ON D.INVOICE = C.INVOICE
					AND D.BUSINESS_UNIT = C.BUSINESS_UNIT
				INNER JOIN R12_ACCOUNT_FILTER_UPD AFU
					ON AFU.R12_ACCOUNT = D.R12_ACCOUNT
				INNER JOIN OTR_PROD_CODE_XREF_RCPO X
					ON A.MANF_PROD_ID = X.MANF_PROD_CODE
				LEFT OUTER JOIN R12_PRODUCT_STG PR
					ON D.R12_PRODUCT = PR.R12_PRODUCT
				LEFT OUTER JOIN R12_LOCATION_STG DP
					ON DP.R12_LOCATION = D.R12_LOCATION
				WHERE
					D.JOURNAL_DATE BETWEEN TO_DATE('03/01/2006', 'MM/DD/YYYY') AND LAST_DAY(ADD_MONTHS(SYSDATE, - 1))
					AND B.BILL_SOURCE_ID = 'P21'
					AND C.TRNBI_PROJECT_TYPE = '7'
					AND D.PS_DEPTID != 'NA'
					AND D.LEDGER = 'ACTUALS'
					AND X.TWO_FIVE = 'Y'
					AND X.GL_LEDGER = 'CSD'
					AND D.PS_ACCOUNT = '700000'
					AND D.PS_PRODUCT NOT IN ('NA', '805100', '802921', '801270', '803270', '804140')
		)
	GROUP BY
		BUSINESS_UNIT,
		GL_ACCOUNT,
		DEPTID,
		DEPT_DESCR,
		PROD_DESCR,
		PRODCODE,
		GL_PRODCODE,
		NVL(RESERVE_GROUP, 'LARGE'),
		JRNL_DATE,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')),
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')),
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')) * 100 + TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')),
		JRNL_ID,
		CURRENCY,
		NATION_CURR;

COMMIT;

INSERT /*+ APPEND */  INTO MAP_SALES_DATA_68
(
QUERY_SOURCE,
BU,
REVENUE_AMOUNT,
REVENUE_AMOUNT_DEC,
GL_ACCOUNT,
DEPT_ID,
DEPT_DESCR,
MANF_PROD_ID,
MANF_PROD_DESCR,
DIST_GL_PRODUCT,
RESERVE_GROUP,
JRNL_DATE,
JRNL_YEAR,
JRNL_MONTH,
JRNL_YEAR_MONTH,
JRNL_ID,
CURRENCY,
COUNTRY_INDICATOR
)
SELECT
		/*+ NO_CPU_COSTING */
		'P21R12' AS QUERY_SOURCE,
		BUSINESS_UNIT AS BU,
		SUM(P7_TOTAL) AS REVENUE_AMOUNT,
		SUM(100 *(P7_TOTAL - TRUNC(P7_TOTAL))) AS REVENUE_AMOUNT_DEC,
		GL_ACCOUNT AS GL_ACCOUNT,
		DEPTID AS DEPT_ID,
		DEPT_DESCR AS DEPT_DESCR,
		PRODCODE AS MANF_PROD_ID,
		PROD_DESCR AS MANF_PROD_DESCR,
		GL_PRODCODE AS DIST_GL_PRODUCT,
		NVL(RESERVE_GROUP, 'LARGE') AS RESERVE_GROUP,
		JRNL_DATE AS JRNL_DATE,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')) AS JRNL_YEAR,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')) AS JRNL_MONTH,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')) * 100 + TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')) AS JRNL_YEAR_MONTH,
		JRNL_ID AS JRNL_ID,
		CURRENCY AS CURRENCY,
		NATION_CURR AS COUNTRY_INDICATOR
	FROM
		(
			SELECT
					/*+ NO_CPU_COSTING */
					D.R12_ENTITY AS BUSINESS_UNIT,
					D.INVOICE AS INVOICE,
					D.LINE_SEQ_NUM AS SEQ_NUM,
					D.ACCT_ENTRY_TYPE AS ENTRY_TYPE,
					D.JOURNAL_ID AS JRNL_ID,
					D.JOURNAL_DATE AS JRNL_DATE,
					D.R12_ACCOUNT AS GL_ACCOUNT,
					D.MONETARY_AMOUNT * -1 AS P7_TOTAL,
					D.R12_LOCATION AS DEPTID,
					DP.R12_LOCATION_DESCR AS DEPT_DESCR,
					PR.R12_PRODUCT_DESCR AS PROD_DESCR,
					X.PRODUCT_CATEGORY AS RESERVE_GROUP,
					A.MANF_PROD_ID AS PRODCODE,
					CASE
						WHEN D.R12_PRODUCT IN('41204', '41198') THEN '41204'
						ELSE D.R12_PRODUCT
						END AS GL_PRODCODE,
					D.CURRENCY_CD AS CURRENCY,
					CASE
						WHEN D.R12_ENTITY IN('5773', '5588') THEN 'CAD'
						ELSE 'USD'
						END AS NATION_CURR
				FROM
					R12_BI_LINE_STG A
				INNER JOIN R12_BI_ACCT_ENTRY_STG D
					ON D.LINE_SEQ_NUM = A.LINE_SEQ_NUM
					AND D.INVOICE = A.INVOICE
					AND D.CUSTOMER_TRX_ID = A.CUSTOMER_TRX_ID
				INNER JOIN R12_BI_HDR_STG B
					ON D.INVOICE = B.INVOICE
					AND D.CUSTOMER_TRX_ID = B.CUSTOMER_TRX_ID
				INNER JOIN R12_TRNBI_BI_HDR_STG C
					ON D.INVOICE = C.INVOICE
					AND D.CUSTOMER_TRX_ID = C.CUSTOMER_TRX_ID
				INNER JOIN R12_ACCOUNT_FILTER_UPD AFU
					ON AFU.R12_ACCOUNT = D.R12_ACCOUNT
				INNER JOIN OTR_PROD_CODE_XREF_RCPO X
					ON A.MANF_PROD_ID = X.MANF_PROD_CODE
				LEFT OUTER JOIN R12_PRODUCT_STG PR
					ON D.R12_PRODUCT = PR.R12_PRODUCT
				LEFT OUTER JOIN R12_LOCATION_STG DP
					ON DP.R12_LOCATION = D.R12_LOCATION
				WHERE
					D.JOURNAL_DATE BETWEEN TO_DATE('03/01/2006', 'MM/DD/YYYY') AND LAST_DAY(ADD_MONTHS(SYSDATE, - 1))
					-- AND B.BILL_SOURCE_ID = 'P21'
					AND C.TRNBI_PROJECT_TYPE = '7'
					AND D.LEDGER = 'ACTUALS'
					AND X.TWO_FIVE = 'Y'
					AND X.GL_LEDGER = 'CSD'
					AND AFU.EQUAL_700000 = 'Y'
					AND D.R12_PRODUCT NOT IN ('41208', '41399', '41132', '41499', '41205')
		)
	GROUP BY
		BUSINESS_UNIT,
		GL_ACCOUNT,
		DEPTID,
		DEPT_DESCR,
		PROD_DESCR,
		PRODCODE,
		GL_PRODCODE,
		NVL(RESERVE_GROUP, 'LARGE'),
		JRNL_DATE,
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')),
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')),
		TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'YYYY')) * 100 + TO_NUMBER(TO_CHAR(TO_DATE(JRNL_DATE), 'MM')),
		JRNL_ID,
		CURRENCY,
		NATION_CURR;

COMMIT;

EXIT