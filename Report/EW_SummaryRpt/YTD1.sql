/* YTD1 */
SELECT
  TRUNC(TO_DATE(TO_DATE('1-' ||:RunDate, 'dd-mon-yy')), 'YEAR') - 1 AS GL_BEGINDATE, 
  LAST_DAY(TO_DATE('1-' ||:RunDate, 'dd-mon-yy')) GL_END_DATE,
  CASE
    WHEN SALES.COUNTRY_INDICATOR IS NULL THEN BEGBALANCES.COUNTRY_INDICATOR
    ELSE SALES.COUNTRY_INDICATOR
    END AS COUNTRY_INDICATOR, 
  CAST(ALL_ACCTS.ACCOUNT AS NUMBER) ACCOUNT,
  ALL_ACCTS.GL_ACCOUNT_DESCR AS GL_ACC_DESCR, 
  NVL(BEGBALANCES.BEGBAL_BASE, 0) * -1 AS BEGNING_BALANCE, 
  NVL(PERIODDATA.ENDBAL_BASE, 0) * -1 AS END_BLANCE,
  CASE
    WHEN SALES.REVENUE_AMOUNT IS NULL THEN 0
    ELSE SALES.REVENUE_AMOUNT
    END AS REVENUE_AMOUNT, 
  NVL(REV.DEFERRED_REVENUE, 0) AS DEFERRED_REVENUE, 
  NVL(REV.SHORT_TERM_BALA, 0) AS SHORT_TERM_BALA, 
  NVL(REV.LONG_TERM_BALA, 0) AS LONG_TERM_BALA

FROM
-- ALL ACCOUNTS
(
  SELECT
    CAST(AFU.R12_ACCOUNT AS NUMBER) AS ACCOUNT, 
    AFU.DESCR AS GL_ACCOUNT_DESCR
    
  FROM
  R12_ACCOUNT_FILTER_UPD AFU

  WHERE 1=1
  AND AFU.LIKE_5 = 'Y'

) ALL_ACCTS

LEFT OUTER JOIN
-- BEGBALANCES
(
  SELECT
    AFU.R12_ACCOUNT AS ACCOUNT,
    GL_LEDGERS.LEDGER_ID AS LEDGER,
    GL_BALANCES.PERIOD_NAME AS FISCAL_YEAR,
    CASE
      WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
      WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
      END AS COUNTRY_INDICATOR,
    SUM(DECODE(UPPER(GL_BALANCES.PERIOD_NAME), 'JAN' || SUBSTR(:RunDate, 4, 3), GL_BALANCES.BEGIN_BALANCE_DR - GL_BALANCES.BEGIN_BALANCE_CR, 0)) AS BEGBAL_BASE,
    AFU.DESCR || ' - (R12 A/C : ' || GL_CODE_COMBINATIONS.SEGMENT4 || '-' || GL_LEDGERS.NAME || ')' AS DESCR
    
  FROM SY_120_GL_LEDGERS_EW GL_LEDGERS
  INNER JOIN SY_120_GL_BALANCES_EW GL_BALANCES
    ON GL_LEDGERS.LEDGER_ID = GL_BALANCES.LEDGER_ID
  INNER JOIN SY_120_GL_CODE_COMBO_EW GL_CODE_COMBINATIONS
    ON GL_CODE_COMBINATIONS.CODE_COMBINATION_ID = GL_BALANCES.CODE_COMBINATION_ID
  RIGHT OUTER JOIN R12_ACCOUNT_FILTER_UPD AFU
    ON AFU.R12_ACCOUNT = GL_CODE_COMBINATIONS.SEGMENT4
    
  WHERE UPPER(GL_BALANCES.PERIOD_NAME) = 'JAN' || SUBSTR(:RunDate, 4, 3)
  AND CASE
    WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
    ELSE 'CAN'
    END = UPPER(:COUNTRY)
  AND GL_LEDGERS.LEDGER_ID IN('2022', '2041')
  AND GL_BALANCES.ACTUAL_FLAG = 'A'
  AND AFU.LIKE_52_53_54 = 'Y'
  AND GL_CODE_COMBINATIONS.SEGMENT1 IN ('5773', '5588', '5575', '5612', '5743', '9256', '9258', '9298', '9299', '9984')
  AND GL_CODE_COMBINATIONS.SEGMENT2 IN ('113602', '115615' /* USA */, '129003' /* CANADA */) -- R12_LOCATION (DEPT LIKE 'SL00%' AND BU IN ('CAN', 'CSD'))
    
  GROUP BY
    AFU.R12_ACCOUNT, 
    GL_LEDGERS.LEDGER_ID,
    GL_BALANCES.PERIOD_NAME,
    CASE
      WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
      WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
      END,
    AFU.DESCR || ' - (R12 A/C : ' || GL_CODE_COMBINATIONS.SEGMENT4 || '-' || GL_LEDGERS.NAME || ')'
    
) BEGBALANCES
  ON BEGBALANCES.ACCOUNT = ALL_ACCTS.ACCOUNT

LEFT OUTER JOIN
-- PERIODDATA
(
  SELECT
    AFU.R12_ACCOUNT AS ACCOUNT, 
    GL_LEDGERS.LEDGER_ID AS LEDGER,
    GL_BALANCES.PERIOD_NAME AS FISCAL_YEAR,
    CASE
      WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
      WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
      END AS COUNTRY_INDICATOR, 
    NVL(SUM(GL_BALANCES.BEGIN_BALANCE_DR + GL_BALANCES.PERIOD_NET_DR - GL_BALANCES.BEGIN_BALANCE_CR - GL_BALANCES.PERIOD_NET_CR), 0) AS ENDBAL_BASE,
    AFU.DESCR ||' - (R12 A/C : ' || GL_CODE_COMBINATIONS.SEGMENT4 ||'-' || GL_LEDGERS.NAME || ')' AS DESCR
    
  FROM SY_120_GL_LEDGERS_EW GL_LEDGERS
  INNER JOIN SY_120_GL_BALANCES_EW GL_BALANCES
    ON GL_BALANCES.LEDGER_ID = GL_LEDGERS.LEDGER_ID
  INNER JOIN SY_120_GL_CODE_COMBO_EW GL_CODE_COMBINATIONS
    ON GL_BALANCES.CODE_COMBINATION_ID = GL_CODE_COMBINATIONS.CODE_COMBINATION_ID
  RIGHT OUTER JOIN R12_ACCOUNT_FILTER_UPD AFU
    ON AFU.R12_ACCOUNT = GL_CODE_COMBINATIONS.SEGMENT4

  WHERE UPPER(GL_BALANCES.PERIOD_NAME) = UPPER(:RunDate)
  AND CASE
    WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
    ELSE 'CAN'
    END = UPPER(:COUNTRY)
  AND GL_LEDGERS.LEDGER_ID IN('2022', '2041')
  AND GL_BALANCES.ACTUAL_FLAG = 'A'
  AND AFU.LIKE_52_53_54 = 'Y' 
  AND GL_CODE_COMBINATIONS.SEGMENT1 IN ('5773', '5588', '5575', '5612', '5743', '9256', '9258', '9298', '9299', '9984')
  AND GL_CODE_COMBINATIONS.SEGMENT2 IN ('113602', '115615' /* USA */, '129003' /* CANADA */) -- R12_LOCATION (DEPT LIKE 'SL00%' AND BU IN ('CAN', 'CSD'))
    
  GROUP BY 
    AFU.R12_ACCOUNT, 
    GL_LEDGERS.LEDGER_ID,
    GL_BALANCES.PERIOD_NAME,
    CASE
      WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
      WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
      END, 
    AFU.DESCR || ' - (R12 A/C : ' || GL_CODE_COMBINATIONS.SEGMENT4 ||'-' || GL_LEDGERS.NAME || ')'
    
) PERIODDATA
  ON ALL_ACCTS.ACCOUNT = PERIODDATA.ACCOUNT

LEFT OUTER JOIN
-- SALES
(
	SELECT
		COUNTRY_INDICATOR,
		ACCOUNT,
		DESCR,
		SUM(REVENUE_AMOUNT) AS REVENUE_AMOUNT
		
	FROM (
		SELECT
			CASE
				WHEN A.R12_ENTITY IN('5773', '5588') THEN 'CAN'
				ELSE 'USA'
				END AS COUNTRY_INDICATOR,
			A.R12_ACCOUNT Account, 
			AFU.DESCR, 
			A.MONETARY_AMOUNT * - 1 AS REVENUE_AMOUNT
			
		FROM R12_BI_ACCT_ENTRY_PSB A
		INNER JOIN R12_TRNBI_BI_HDR_PSB B
			ON A.BUSINESS_UNIT = B.BUSINESS_UNIT
		AND A.INVOICE = B.INVOICE
		INNER JOIN R12_BI_HDR_PSB C
			ON B.BUSINESS_UNIT = C.PS_BUSINESS_UNIT
		AND B.INVOICE = C.INVOICE
		INNER JOIN R12_ACCOUNT_FILTER_UPD AFU
			ON AFU.R12_ACCOUNT = A.R12_ACCOUNT
		
		WHERE A.JOURNAL_DATE >= TRUNC(TO_DATE(TO_DATE('1-'||:RunDate, 'dd-mon-yy')), 'YEAR')
		AND A.JOURNAL_DATE <= LAST_DAY(TO_DATE('1-'||:RunDate, 'dd-mon-yy'))
		AND A.R12_ENTITY IN ('5773', '5588', '5575', '5612', '5743', '9256', '9258', '9298', '9299', '9984')
		AND CASE
			WHEN A.R12_ENTITY IN('5773', '5588') THEN 'CAN'
			ELSE 'USA'
			END = UPPER(:COUNTRY)
		AND C.ENTRY_TYPE = 'IN'
		AND AFU.LIKE_5 = 'Y'
	
		UNION ALL
	
		SELECT
			CASE
				WHEN A.R12_ENTITY IN('5773', '5588') THEN 'CAN'
				ELSE 'USA'
				END AS COUNTRY_INDICATOR,
			A.R12_ACCOUNT Account, 
			AFU.DESCR, 
			A.MONETARY_AMOUNT * - 1 AS REVENUE_AMOUNT
			
		FROM R12_BI_ACCT_ENTRY_STG A
		INNER JOIN R12_TRNBI_BI_HDR_STG B
			ON A.INVOICE = B.INVOICE AND A.CUSTOMER_TRX_ID = B.CUSTOMER_TRX_ID
		INNER JOIN R12_BI_HDR_STG C
			ON B.INVOICE = C.INVOICE AND B.CUSTOMER_TRX_ID = C.CUSTOMER_TRX_ID
		INNER JOIN R12_ACCOUNT_FILTER_UPD AFU
			ON AFU.R12_ACCOUNT = A.R12_ACCOUNT
		
		WHERE A.JOURNAL_DATE >= TRUNC(TO_DATE(TO_DATE('1-'||:RunDate, 'dd-mon-yy')), 'YEAR')
		AND A.JOURNAL_DATE <= LAST_DAY(TO_DATE('1-'||:RunDate, 'dd-mon-yy'))
		AND A.R12_ENTITY IN ('5773', '5588', '5575', '5612', '5743', '9256', '9258', '9298', '9299', '9984')
		AND CASE
			WHEN A.R12_ENTITY IN('5773', '5588') THEN 'CAN'
			ELSE 'USA'
			END = UPPER(:COUNTRY)
		AND C.ENTRY_TYPE = 'INV'
		AND AFU.LIKE_5 = 'Y'
	)

	GROUP BY
		COUNTRY_INDICATOR,
		ACCOUNT,
		DESCR

) SALES
  ON ALL_ACCTS.ACCOUNT = SALES.ACCOUNT

LEFT OUTER JOIN
-- REV
(
  SELECT B.gl_account AS account,
    B.GL_ACCOUNT_DESCR AS DESCRIPTION,
    SUM(B.DEFERRED_REVENUE) AS DEFERRED_REVENUE,
    SUM(B.SHORT_TERM_REVENUE) AS SHORT_TERM_BALA,
    SUM(LONG_TERM_REVENUE) AS LONG_TERM_BALA

  FROM (
    SELECT A.GL_ACCOUNT,
      A.GL_ACCOUNT_DESCR,
      TO_DATE('1-'||:RunDate, 'dd-mon-yy'),
      CASE
        WHEN TRUNC(TO_DATE(TO_DATE('1-'||:RunDate, 'dd-mon-yy')), 'YEAR') = TO_DATE('1-'||:RunDate, 'dd-mon-yy') THEN CASE
          WHEN A.FORECAST_PERIOD = TO_DATE('1-'||:RunDate, 'dd-mon-yy') THEN MAX(A.DEFERRED_REVENUE)
          ELSE 0
          END
        ELSE(MAX(A.REC_REV_MNTHLY) + CASE
          WHEN A.FORECAST_PERIOD = TO_DATE('1-'||:RunDate, 'dd-mon-yy') THEN MAX(A.DEFERRED_REVENUE)
          ELSE 0
          END)
        END AS DEFERRED_REVENUE,
      MAX(a.SHORT_TERM_DR) AS SHORT_TERM_REVENUE,
      MAX(a.LONG_TERM_DR) AS LONG_TERM_REVENUE,
      A.FORECAST_PERIOD
      
    FROM DW_DM_030_REV_RELEASE a
    INNER JOIN R12_ACCOUNT_FILTER_UPD AFU
      ON AFU.R12_ACCOUNT = A.GL_ACCOUNT 

    WHERE 1=1
    AND A.COUNTRY_INDICATOR = UPPER(:COUNTRY)
    AND A.RUN_PERIOD >= TO_DATE('1-'||:RunDate, 'dd-mon-yy')
    AND A.RUN_PERIOD < ADD_MONTHS(TO_DATE('1-'||:RunDate, 'dd-mon-yy'), 1)
    AND AFU.LIKE_5 = 'Y'
    AND A.SHIP_PERIOD >= CASE
      WHEN TO_DATE('1-'||:RunDate, 'dd-mon-yy') = TRUNC(TO_DATE(TO_DATE('1-'||:RunDate, 'dd-mon-yy')), 'YEAR')
        THEN TRUNC(TRUNC(TO_DATE('1-'||:RunDate, 'dd-mon-yy'), 'YEAR') - 1) - 30
      ELSE TRUNC(TO_DATE(TO_DATE('1-'||:RunDate, 'dd-mon-yy')), 'YEAR')
      END
    AND A.SHIP_PERIOD <(TO_DATE('1-'||:RunDate, 'dd-mon-yy'))

    GROUP BY A.GL_ACCOUNT, 
      A.GL_ACCOUNT_DESCR, 
      A.FORECAST_PERIOD

  ) B

  GROUP BY B.GL_ACCOUNT,
    B.GL_ACCOUNT_DESCR

) REV 
  ON ALL_ACCTS.ACCOUNT = REV.ACCOUNT

ORDER BY ACCOUNT