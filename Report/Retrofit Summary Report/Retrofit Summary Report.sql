/* Retrofit Summary Qry */
SELECT
		/* NO_CPU_COSTING */
		AA.SPACE,
		AA.COUNTRY_INDICATOR,
		AA.GL_ACCOUNT,
		AA.MATERIAL_LABOR,
		AA.MTD_MATERIL_EXP,
		AA.MTD_LABOR_EXP,
		AA."MTD TOTAL_EXP",
		AA.LTD_MATERIAL_EXP,
		AA.LTD_LABOR_EXP,
		AA.LTD_TOTAL_EXP,
		--,aa.RETROFIT_ID
		BB.RETROFIT_ID,
		BB.RETROFIT_ID AS RETROFIT_ID1,
		--,case when count (distinct aa.GL_DEPT ) > 1 AND aa.RETROFIT_ID =bb.RETROFIT_ID then  aa.RETROFIT_ID || ' (Multiple Departments)' else aa.RETROFIT_ID end
		AA.GL_DEPT,
		AA.RETRO_NOTES,
		AA."RS PERCENT",
		CASE
			WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
			THEN LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 7))
			ELSE TO_DATE(:PRMBRETROFIT_END_DATE, 'mm/dd/yyyy')
			END
			AS PRMBRETROFIT_END_DATE,
		CASE
			WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
			THEN TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), - 1), 'yyyy')
			ELSE :TRX_YEAR
			END
			AS TRX_YEAR,
		CASE
			WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
			THEN TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), - 1), 'mm')
			ELSE :TRX_MONTH
			END
			AS TRX_MONTH,
		AA.TCS_OR_RS,
		AA.PRODUCT_CODE,
		AA.GL_PROD_CODE,
		AA.RETRO_START_DATE,
		AA.RETRO_END_DATE,
		AA.SCR_IND,
		AA."TOTAL ESTIMATE",
		BB.TOTAL_SUM AS "TOTAL_EXPENSE",
		(AA."TOTAL ESTIMATE" - BB.TOTAL_SUM) "EXPENSE_VARIANCE",
		AA."TOTAL UNITS ESTIMATE" AS "TOTAL UNITS ESTIMATE",
		AA."TOTAL UNITS EXP" AS "TOTAL UNITS EXP",
		AA."UNIT VARIANCE" AS "UNIT VARIANCE",
		AA."TOTAL ESTIMATE $ PER UNIT" AS "TOTAL ESTIMATE $ PER UNIT",
		BB.TOTAL_SUM / AA."TOTAL UNITS EXP" AS "TOTAL EXPENSE $ PER UNIT",
		(AA."TOTAL ESTIMATE $ PER UNIT") -(BB.TOTAL_SUM / AA."TOTAL UNITS EXP") AS "TOTAL $ PER UNIT VARIENCE",
		AA."TOTAL_EXPENSE" AS TOTAL_EXPENSE_BY_CLAIM_NO,
		AA.NEW_RESOLVED_IND,
		AA.TRX_MONTH,
		AA.CLAIM_NUMBER,
		AA.STEP_NUMBER,
		AA.BUSINESS_UNIT,
		AA.CLAIM_TYPE,
		AA.EXPENSE_TYPE_DESCR,
		AA.OFFICE_NAME,
		AA.MANF_PROD_CODE,
		AA.COMPANY_OWNED,
		AA.CUSTOMER_NUMBER,
		AA.CUSTOMER_NAME,
		AA.INTERNAL_EXTERNAL,
		AA.INTMONTHS_TRX_TO_BASE,
		AA.INTMONTHS_SHIP_TO_BASE,
		AA.SHIP_DATE,
		AA.SHIP_YEAR_MONTH,
		AA.INTMONTHS_SHIP_TO_TRX,
		AA.START_DATE,
		AA.INTMONTHS_START_TO_TRX,
		AA.FAIL_DATE,
		AA.INTMONTHS_FAIL_TO_TRX,
		AA.WARRANTY_TYPE,
		AA.WARRANTY_DURATION,
		AA.CURRENCY,
		AA.IN_RESERVE_PERCENT,
		AA.TRX_LAG,
		AA.TRXYEARMONTH,
		AA.TRX_DATE
	FROM
		(
			SELECT
					/* NO_CPU_COSTING */
					'' AS SPACE,
					A.COUNTRY_INDICATOR,
					A.GL_ACCOUNT,
					CASE
						WHEN A.MATERIAL_LABOR LIKE'%M%'
						THEN 'MATERIAL' WHEN A.MATERIAL_LABOR LIKE 'LABOR%'
						THEN 'LABOR'
						END
						AS MATERIAL_LABOR,
					SUM (CASE
						WHEN A.MATERIAL_LABOR LIKE'%M%' AND TRX_YEAR = CASE
							WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
							THEN TO_CHAR((LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 1))), 'YYYY')
							ELSE :TRX_YEAR
							END
							AND TRX_MONTH = CASE
								WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
								THEN TO_NUMBER(TO_CHAR((LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 1))), 'MM'))
								ELSE TO_NUMBER(:TRX_MONTH)
								END
						THEN (A.EXPENSE_AMOUNT)
						ELSE 0
						END)
						AS MTD_MATERIL_EXP,
					SUM (CASE
						WHEN MATERIAL_LABOR LIKE 'LABOR%' AND TRX_YEAR = CASE
							WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
							THEN TO_CHAR((LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 1))), 'YYYY')
							ELSE :TRX_YEAR
							END
							AND TRX_MONTH = CASE
								WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
								THEN TO_NUMBER(TO_CHAR((LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 1))), 'MM'))
								ELSE TO_NUMBER(:TRX_MONTH)
								END
						THEN (A.EXPENSE_AMOUNT)
						ELSE 0
						END)
						AS MTD_LABOR_EXP,
					SUM (CASE
						WHEN TRX_YEAR =
							CASE
								WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
								THEN TO_CHAR((LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 1))), 'YYYY')
								ELSE :TRX_YEAR
								END
								AND TRX_MONTH = CASE
									WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
									THEN TO_NUMBER(TO_CHAR((LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 1))), 'MM'))
									ELSE TO_NUMBER(:TRX_MONTH)
									END
						THEN(A.EXPENSE_AMOUNT)
						ELSE 0
						END)
						AS "MTD TOTAL_EXP",
					SUM(
					CASE WHEN A.MATERIAL_LABOR LIKE'%M%'
						THEN(A.EXPENSE_AMOUNT)
						ELSE 0
					END) AS LTD_MATERIAL_EXP,
					SUM(
					CASE WHEN A.MATERIAL_LABOR LIKE'LABOR%'
						THEN(A.EXPENSE_AMOUNT)
						ELSE 0
					END) AS LTD_LABOR_EXP,
					SUM(A.EXPENSE_AMOUNT) AS LTD_TOTAL_EXP,
					CASE   WHEN TRX_YEAR =
							CASE WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
								THEN TO_CHAR((LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 1))), 'YYYY')
								ELSE :TRX_YEAR
							END
						THEN SUM(A.EXPENSE_AMOUNT)
					END AS TEST_TOTAL_EXP,
					A.RETROFIT_ID,
					A.GL_DEPT,
					RP.RETRO_NOTES,
					CASE        WHEN(A.BUSINESS_UNIT = 'CSD' OR A.BUSINESS_UNIT = 'CAN')
						THEN 'TCS' WHEN(A.BUSINESS_UNIT = 'GLUPG' OR A.BUSINESS_UNIT = 'RSCAN')
						THEN 'RS'
						ELSE NULL
					END AS TCS_OR_RS,
					NVL(RP.RS_PERCENT, 0) "RS PERCENT",
					RP.PRODUCT_CODE,
					A.GL_PROD_CODE,
					RP.RETRO_START_DATE,
					RP.RETRO_END_DATE,
					RP.SCR_IND,
					--nvl(rp.original_estimated_material,0) "Original Estimated Material",
					--nvl(rp.original_estimated_labor,0) "Original Estimated Labor",
					NVL(RP.ORIGINAL_ESTIMATED_LABOR, 0) + NVL(ORIGINAL_ESTIMATED_MATERIAL, 0) "TOTAL ESTIMATE",
					SUM(A.EXPENSE_AMOUNT) AS "TOTAL_EXPENSE",
					(NVL(RP.ORIGINAL_ESTIMATED_LABOR, 0) + NVL(ORIGINAL_ESTIMATED_MATERIAL, 0)) - SUM(A.EXPENSE_AMOUNT) AS "EXPENSE_VARIANCE",
					RP.RETRO_NBR_TO_DO AS "TOTAL UNITS ESTIMATE",
					B.UNITS_DONE AS "TOTAL UNITS EXP",
					RP.RETRO_NBR_TO_DO - B.UNITS_DONE "UNIT VARIANCE",
					(NVL(RP.ORIGINAL_ESTIMATED_LABOR, 0) + NVL(ORIGINAL_ESTIMATED_MATERIAL, 0)) /(
					CASE WHEN(RP.RETRO_NBR_TO_DO) = 0
						THEN 1
						ELSE(RP.RETRO_NBR_TO_DO)
					END) AS "TOTAL ESTIMATE $ PER UNIT",
					SUM(A.EXPENSE_AMOUNT) / B.UNITS_DONE AS "TOTAL EXPENSE $ PER UNIT",
					((NVL(RP.ORIGINAL_ESTIMATED_LABOR, 0) + NVL(ORIGINAL_ESTIMATED_MATERIAL, 0)) /
					CASE WHEN(RP.RETRO_NBR_TO_DO) = 0
						THEN 1
						ELSE(RP.RETRO_NBR_TO_DO)
					END) -(SUM(A.EXPENSE_AMOUNT) / B.UNITS_DONE) AS "TOTAL $ PER UNIT VARIENCE",
					--(nvl(rp.original_estimated_material,0)/rp.retro_nbr_to_do ) as "Orig_Mat/units",
					--(nvl(rp.original_estimated_labor,0)/rp.retro_nbr_to_do ) as "Orig_Lab/units",
					--(nvl(rp.original_estimated_labor + original_estimated_material,0)/rp.retro_nbr_to_do ) as "Orig_Tot/units",
					A.NEW_RESOLVED_IND,
					A.TRX_YEAR,
					A.TRX_MONTH,
					A.CLAIM_NUMBER,
					A.STEP_NUMBER,
					A.BUSINESS_UNIT,
					A.CLAIM_TYPE,
					A.EXPENSE_TYPE_DESCR,
					A.OFFICE_NAME,
					A.MANF_PROD_CODE,
					A.COMPANY_OWNED,
					A.CUSTOMER_NUMBER,
					A.CUSTOMER_NAME,
					A.INTERNAL_EXTERNAL,
					A.TRX_YEAR,
					A.INTMONTHS_TRX_TO_BASE,
					A.INTMONTHS_SHIP_TO_BASE,
					A.SHIP_DATE,
					A.SHIP_YEAR_MONTH,
					A.INTMONTHS_SHIP_TO_TRX,
					A.START_DATE,
					A.INTMONTHS_START_TO_TRX,
					A.FAIL_DATE,
					A.INTMONTHS_FAIL_TO_TRX,
					A.WARRANTY_TYPE,
					A.WARRANTY_DURATION,
					A.CURRENCY,
					A.IN_RESERVE_PERCENT,
					A.TRX_LAG,
					A.TRXYEARMONTH,
					A.TRX_DATE
				FROM
					FLN_RETROFIT_PROGRAM RP
					INNER JOIN
					(
						/* Retrofit Material */
						SELECT
								/* NO_CPU_COSTING */
								MLR.CLAIM_NBR AS CLAIM_NUMBER,
								MLR.STEP_NBR AS STEP_NUMBER,
								GLA.R12_ENTITY AS BUSINESS_UNIT,
								-- -SS- GLA.COMPANY AS BUSINESS_UNIT,
								PRODGRP.PRODUCT_CATEGORY AS RESERVE_GROUP,
								CTYPES.CLAIM_TYPE_DESCR AS CLAIM_TYPE,
								SUM(MLR.EXP_TYPE_AMOUNT * - 1) AS EXPENSE_AMOUNT,
								SUM(100 *(MLR.EXP_TYPE_AMOUNT * - 1 - TRUNC(MLR.EXP_TYPE_AMOUNT * - 1))) AS EXPENSE_AMOUNT_DEC,
								RES_PCT.EXPENSE_TYPE_CATG AS MATERIAL_LABOR,
								GLA.R12_ACCOUNT AS GL_ACCOUNT,
								-- -SS- GLA.ACCOUNT AS GL_ACCOUNT,
								ETS.EXPENSE_TYPE_DESCR AS EXPENSE_TYPE_DESCR,
								SOS.SUBMIT_OFFICE_NAME AS OFFICE_NAME,
								-- -SS- NEW
								CASE
									WHEN GLA.R12_PRODUCT IS NULL OR GLA.R12_PRODUCT = '' THEN PCS.PROD_CODE -- -SS- ????
									ELSE GLA.R12_PRODUCT
								END
								-- -SS- /NEW
								/* -SS-
								CASE WHEN GLA.PROD_CODE IS NULL OR GLA.PROD_CODE = ''
									THEN PCS.PROD_CODE
									ELSE GLA.PROD_CODE
								END
								*/
								 AS GL_PROD_CODE,
								PCS.PROD_CODE AS MANF_PROD_CODE,
								SOS.COMPANY_OWNED_IND AS COMPANY_OWNED,
								CACCT.ACCOUNT_NUMBER AS CUSTOMER_NUMBER,
								CACCT.CUST_ACCT_NAME AS CUSTOMER_NAME,
								CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
									THEN 'Y'
									ELSE 'N'
								END
								AS INTERNAL_EXTERNAL,
								TD3.FULL_DATE AS TRX_DATE,
								TO_CHAR(TD3.YEAR) AS TRX_YEAR,
								TO_CHAR(TD3.MONTH) AS TRX_MONTH,
								CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_TRX_TO_BASE,
								CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_SHIP_TO_BASE,
								TD2.FULL_DATE AS SHIP_DATE,
								(TD2.YEAR * 100 + TD2.MONTH) AS SHIP_YEAR_MONTH,
								CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1 AS INTMONTHS_SHIP_TO_TRX,
								TD.FULL_DATE AS START_DATE,
								((TD3.TIME_KEY - TD.TIME_KEY) / 30.42) AS INTMONTHS_START_TO_TRX,
								TD1.FULL_DATE AS FAIL_DATE,
								((TD3.TIME_KEY - TD1.TIME_KEY) / 30.42) AS INTMONTHS_FAIL_TO_TRX,
								CASE WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL
									THEN 'NO'
									ELSE FCW.WA_POLICY_TYPE
								END
								AS WARRANTY_TYPE,
								CASE
									WHEN FCW.WA_RANGE = '1' THEN '1st Year Standard Warranty'
									WHEN FCW.WA_RANGE = '2' THEN '2nd-5th Year Standard Warranty'
									WHEN FCW.WA_RANGE = '5' THEN '> 5th Year Standard Warranty'
									ELSE 'Out of Standard Warranty'
								END
								AS WARRANTY_DURATION,
								MLR.TRX_CURRENCY AS CURRENCY,
								-- -SS- NEW
								CASE WHEN GLA.R12_ENTITY IN('5773', '5588')
									THEN 'CAN'
									ELSE 'USA'
								END
								-- -SS- /NEW
								/* -SS-
								CASE
									WHEN ASX.NATION_CURR = 'USD' THEN 'USA'
									WHEN ASX.NATION_CURR = 'CAD' THEN 'CAN'
									ELSE 'CURRENCY: ' || ASX.NATION_CURR
								END
								*/
								AS COUNTRY_INDICATOR,
								MLR.RETRO_ID AS RETROFIT_ID,
								GLA.R12_COST_CENTER AS GL_DEPT,
								-- -SS- GLA.COST_CENTER AS GL_DEPT
								--, 10000*(CASE WHEN PCS.PROD_CODE='0061'  or FCW.WA_RANGE<>'1' THEN 0 ELSE RES_PCT.RESERVE_PCT  END) AS IN_RESERVE_PERCENT
								-- 10000* (CASE WHEN     rd.new_resolved_ind = 'R'AND rd.specific_reserve_ind = 'Y'OR rd.pct_100_recovery_ind = 'Y'THEN 0 ELSE res_pct.reserve_pct END) AS in_reserve_percent,
								CASE WHEN A.CLAIM_NUMBER IS NULL
									THEN 10000 *(
										CASE WHEN((PCS.PROD_CODE IN('0054', '0197')) OR(MLR.SIOP_PRODUCT_CODE IS NOT NULL)) OR(RD.NEW_RESOLVED_IND = 'R' AND RD.SPECIFIC_RESERVE_IND = 'Y' OR RD.PCT_100_RECOVERY_IND = 'Y')
											THEN 0
											ELSE RES_PCT.RESERVE_PCT
										END)
									ELSE RES_PCT.RESERVE_PCT
								END
								AS IN_RESERVE_PERCENT,
								RD.NEW_RESOLVED_IND,
								ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42) AS TRX_LAG,
								100 * TD3.YEAR + TD3.MONTH AS TRXYEARMONTH,
								0 AS EXPENSE_AMT_IN_RES,
								0 AS EXPENSE_AMT_NOT_IN_RES
							FROM
								WC_MAT_LBR_ROLLUP MLR
								INNER JOIN
								EXPENSE_TYPE_SCD ET
								ON 1=1
								AND MLR.EXPENSE_TYPE_SCD_KEY = ET.EXPENSE_TYPE_SCD_KEY
								LEFT OUTER JOIN
								DM_FAL_CLAIMS_WARRANTY_XRF FCW
								ON 1=1
								AND MLR.CLAIM_NBR = FCW.CLAIM_NBR -- -SS- (+)
								AND MLR.DETAIL_NBR = FCW.DETAIL_NBR -- -SS- (+)
								AND MLR.STEP_NBR = FCW.STEP_NBR -- -SS- (+)
								INNER JOIN
								TIME_DAY TD3
								ON 1=1
								AND MLR.CCN_TRX_DATE_KEY = TD3.TIME_KEY
								INNER JOIN
								TIME_DAY TD2
								ON 1=1
								AND MLR.ORIGINAL_SHIP_DATE_KEY = TD2.TIME_KEY
								INNER JOIN
								TIME_DAY TD1
								ON 1=1
								AND MLR.FAIL_DATE_KEY = TD1.TIME_KEY
								INNER JOIN
								TIME_DAY TD
								ON 1=1
								AND MLR.START_DATE_KEY = TD.TIME_KEY
								INNER JOIN
								CLAIM_TASK_SCD CTASKS
								ON 1=1
								AND MLR.CLAIM_TASK_SCD_KEY = CTASKS.CLAIM_TASK_SCD_KEY
								INNER JOIN
								CLAIM_TYPE_SCD CTYPES
								ON 1=1
								AND MLR.CLAIM_TYPE_SCD_KEY = CTYPES.CLAIM_TYPE_SCD_KEY
								INNER JOIN
								R12_GL_ACCOUNT_SCD GLA
								-- -SS- GL_ACCOUNT_SCD GLA
								ON 1=1
								AND MLR.GL_ACCOUNT_SCD_KEY = GLA.GL_ACCOUNT_SCD_KEY
								INNER JOIN
								EXPENSE_TYPE_SCD ETS
								ON 1=1
								AND MLR.EXPENSE_TYPE_SCD_KEY = ETS.EXPENSE_TYPE_SCD_KEY
								INNER JOIN
								PROD_CODE_SCD PCS
								ON 1=1
								AND MLR.PROD_CODE_SCD_KEY = PCS.PROD_CODE_SCD_KEY
								INNER JOIN
								CUST_ACCOUNT_SCD CACCT
								ON 1=1
								AND MLR.CUST_ACCOUNT_SCD_KEY = CACCT.CUST_ACCOUNT_SCD_KEY
								INNER JOIN
								SUBMIT_OFFICE_SCD SOS
								ON 1=1
								AND MLR.SUBMIT_OFFICE_SCD_KEY = SOS.SUBMIT_OFFICE_SCD_KEY
								INNER JOIN
								PROD_CODE_XREF_RCPO_DR PRODGRP
								ON 1=1
								AND GLA.COMPANY = PRODGRP.GL_LEDGER -- -SS- issue 22
								AND PCS.PROD_CODE = PRODGRP.MANF_PROD_CODE
								/* -SS-
								LEFT OUTER JOIN
								--,OTR_PROD_CODE_XREF_RCPO@DR_INTFC_DW.LAX.TRANE.COM PRODGRP
								ACTUATE_SEC_XREF ASX
								ON 1=1
								AND GLA.COMPANY = ASX.PSGL -- -SS- (+)
								*/
								INNER JOIN
								UD_031_RETROFIT_RULES RES_PCT
								ON 1=1
								AND CTYPES.CLAIM_TYPE_DESCR = RES_PCT.CLAIM_TYPE
								AND ETS.EXPENSE_TYPE_DESCR = RES_PCT.EXPENSE_TYPE_DESCR
								AND SOS.COMPANY_OWNED_IND = RES_PCT.COMPANY_OWNED_IND
								INNER JOIN
								--, DM_WAR_CSN_RSV_PCT_REF RES_PCT
								UD_031_RETROFIT_ID RD
								ON 1=1
								/* NEW_RETROFIT_ID */
								AND MLR.RETRO_ID = RD.RETROFIT_ID
								/* NEW_RETROFIT_ID */
								LEFT OUTER JOIN
								UD_031_STDWTY_RSV_CLM_ADJ A
								ON 1=1
								AND MLR.CLAIM_NBR = A.CLAIM_NUMBER -- -SS- (+)      --TTP#12554
								LEFT OUTER JOIN
								DM_WAR_CSN_RSV_PCT_REF RS_RES_PCT
								--TTP#12554
								ON 1=1
								AND A.CLAIM_TYPE = RS_RES_PCT.CLAIM_TYPE -- -SS- (+) --TTP#12554
							WHERE
								1 = 1
								AND MLR.CLAIM_TYPE_SCD_KEY = 3
								AND(MLR.CCN_TRX_NBR IS NOT NULL)
								AND
								CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
									THEN 'Y'
									ELSE 'N'
								END = RES_PCT.CUST_CREDIT_CATG_CODE
								AND PRODGRP.PRODUCT_CATEGORY IS NOT NULL
								AND TD3.FULL_DATE >= TO_DATE('1/1/1890', 'MM/DD/YYYY')
								AND TD3.FULL_DATE <= TO_DATE('12/31/2050', 'MM/DD/YYYY')
								--AND (gla.ACCOUNT LIKE '8062%' OR gla.ACCOUNT LIKE '0620%')
							GROUP BY
								MLR.CLAIM_NBR,
								MLR.STEP_NBR,
								GLA.R12_ENTITY,
								-- -SS- GLA.COMPANY,
								PRODGRP.PRODUCT_CATEGORY,
								CTYPES.CLAIM_TYPE_DESCR,
								RES_PCT.EXPENSE_TYPE_CATG,
								GLA.R12_ACCOUNT,
								-- -SS- GLA.ACCOUNT,
								ETS.EXPENSE_TYPE_DESCR,
								SOS.SUBMIT_OFFICE_NAME,
								GLA.R12_PRODUCT,
								-- -SS- GLA.PROD_CODE,
								PCS.PROD_CODE,
								SOS.COMPANY_OWNED_IND,
								CACCT.ACCOUNT_NUMBER,
								CACCT.CUST_ACCT_NAME,
								CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
									THEN 'Y'
									ELSE 'N'
								END,
								TD3.FULL_DATE,
								TO_CHAR(TD3.YEAR),
								TO_CHAR(TD3.MONTH),
								CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1,
								CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1,
								TD2.FULL_DATE,
								(TD2.YEAR * 100 + TD2.MONTH),
								CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1,
								TD.FULL_DATE,
								((TD3.TIME_KEY - TD.TIME_KEY) / 30.42),
								TD1.FULL_DATE,
								((TD3.TIME_KEY - TD1.TIME_KEY) / 30.42),
								CASE WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL
									THEN 'NO'
									ELSE FCW.WA_POLICY_TYPE
								END,
								CASE
									WHEN FCW.WA_RANGE = '1' THEN '1st Year Standard Warranty'
									WHEN FCW.WA_RANGE = '2' THEN '2nd-5th Year Standard Warranty'
									WHEN FCW.WA_RANGE = '5' THEN '> 5th Year Standard Warranty'
									ELSE 'Out of Standard Warranty'
								END,
								MLR.TRX_CURRENCY,
								-- -SS- NEW
								CASE WHEN GLA.R12_ENTITY IN('5773', '5588')
									THEN 'CAN'
									ELSE 'USA'
								END,
								-- -SS- /NEW
								/* -SS-
								CASE
									WHEN ASX.NATION_CURR = 'USD' THEN 'USA'
									WHEN ASX.NATION_CURR = 'CAD' THEN 'CAN'
									ELSE 'CURRENCY: ' || ASX.NATION_CURR
								END
								*/
								MLR.RETRO_ID,
								GLA.R12_COST_CENTER,
								-- -SS- GLA.COST_CENTER,
								--10000
								--* (CASE
								--WHEN     rd.new_resolved_ind = 'R'
								--AND rd.specific_reserve_ind = 'Y'
								--OR rd.pct_100_recovery_ind = 'Y'
								--THEN 0
								--ELSE res_pct.reserve_pct
								--END
								--),
								CASE WHEN A.CLAIM_NUMBER IS NULL
									THEN 10000 *(
										CASE WHEN((PCS.PROD_CODE IN('0054', '0197')) OR(MLR.SIOP_PRODUCT_CODE IS NOT NULL)) OR(RD.NEW_RESOLVED_IND = 'R' AND RD.SPECIFIC_RESERVE_IND = 'Y' OR RD.PCT_100_RECOVERY_IND = 'Y')
											THEN 0
											ELSE RES_PCT.RESERVE_PCT
										END)
									ELSE RES_PCT.RESERVE_PCT
								END,
								RD.NEW_RESOLVED_IND,
								ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42),
								100 * TD3.YEAR + TD3.MONTH
						UNION ALL

						/* Retrofit Labor */
						SELECT
								/* NO_CPU_COSTING */
								CCN_DATA.CLAIM_NBR AS CLAIM_NUMBER,
								CCN_DATA.STEP_NBR AS STEP_NUMBER,
								GLA.R12_ENTITY AS BUSINESS_UNIT,
								-- -SS- GLA.COMPANY AS BUSINESS_UNIT,
								PRODGRP.PRODUCT_CATEGORY AS RESERVE_GROUP,
								CCN_DATA.CLAIM_TYPE AS CLAIM_TYPE,
								CCN_DATA.DOLLAR_AMOUNT AS EXPENSE_AMOUNT,
								100 *(CCN_DATA.DOLLAR_AMOUNT - TRUNC(CCN_DATA.DOLLAR_AMOUNT)) AS EXPENSE_AMOUNT_DEC,
								(CCN_DATA.EXPENSE_TYPE_CATG) AS MATERIAL_LABOR,
								GLA.R12_ACCOUNT AS GL_ACCOUNT,
								-- -SS- GLA.ACCOUNT AS GL_ACCOUNT,
								CCN_DATA.EXPENSE_TYPE_DESCR AS EXPENSE_TYPE_DESCR,
								SOS.SUBMIT_OFFICE_NAME AS OFFICE_NAME,
								-- -SS- NEW
								CASE
									WHEN GLA.R12_PRODUCT IS NULL OR GLA.R12_PRODUCT = '' THEN PCS.PROD_CODE
									ELSE GLA.R12_PRODUCT
									END
									AS GL_PROD_CODE,
								-- -SS- /NEW
								/* -SS- 
								CASE
									WHEN GLA.PROD_CODE IS NULL OR GLA.PROD_CODE = '' THEN PCS.PROD_CODE
									ELSE GLA.PROD_CODE
									END AS GL_PROD_CODE,
								*/
								PCS.PROD_CODE AS MANF_PROD_CODE,
								SOS.COMPANY_OWNED_IND AS COMPANY_OWNED,
								CACCT.ACCOUNT_NUMBER AS CUSTOMER_NUMBER,
								CACCT.CUST_ACCT_NAME AS CUSTOMER_NAME,
								CASE
									WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1' THEN 'Y'
									ELSE 'N'
									END
									AS INTERNAL_EXTERNAL,
								TD3.FULL_DATE AS TRX_DATE,
								TO_CHAR(TD3.YEAR) AS TRX_YEAR,
								TO_CHAR(TD3.MONTH) AS TRX_MONTH,
								CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_TRX_TO_BASE,
								CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_SHIP_TO_BASE,
								TD2.FULL_DATE AS SHIP_DATE,
								(TD2.YEAR * 100 + TD2.MONTH) AS SHIP_YEAR_MONTH,
								CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1 AS INTMONTHS_SHIP_TO_TRX,
								TD.FULL_DATE AS START_DATE,
								((TD3.TIME_KEY - TD.TIME_KEY) / 30.42) AS INTMONTHS_START_TO_TRX,
								TD1.FULL_DATE AS FAIL_DATE,
								((TD3.TIME_KEY - TD1.TIME_KEY) / 30.42) AS INTMONTHS_FAIL_TO_TRX,
								CASE
									WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL
									THEN 'NO'
									ELSE FCW.WA_POLICY_TYPE
									END
									AS WARRANTY_TYPE,
								CASE WHEN CCN_DATA.CLAIM_TYPE = 'EXTD PURCHASED LABOR'
									THEN 'Out of Standard Warranty'
									ELSE CASE
										WHEN FCW.WA_RANGE = '1' THEN '1st Year Standard Warranty'
										WHEN FCW.WA_RANGE = '2' THEN '2nd-5th Year Standard Warranty'
										WHEN FCW.WA_RANGE = '5' THEN '> 5th Year Standard Warranty'
										ELSE 'Out of Standard Warranty'
										END
									END
									AS WARRANTY_DURATION,
								CCN_DATA.TRX_CURRENCY AS CURRENCY,
								-- -SS- NEW
								CASE WHEN GLA.R12_ENTITY IN('5773', '5588')
									THEN 'CAN'
									ELSE 'USA'
									END
								-- -SS- /NEW
								/* -SS-
								CASE
									WHEN ASX.NATION_CURR = 'USD' THEN 'USA'
									WHEN ASX.NATION_CURR = 'CAD' THEN 'CAN'
									ELSE 'CURRENCY: ' || ASX.NATION_CURR
								END
								*/
								AS COUNTRY_INDICATOR,
								CCN_DATA.RETRO_ID AS RETROFIT_ID,
								GLA.R12_COST_CENTER AS GL_DEPT,
								-- -SS- GLA.COST_CENTER AS GL_DEPT,
								--10000
								--* (CASE
								--WHEN     rd.new_resolved_ind = 'R'
								--AND rd.specific_reserve_ind = 'Y'
								--OR rd.pct_100_recovery_ind = 'Y'
								--THEN 0
								--ELSE res_pct.reserve_pct
								--END
								--) AS in_reserve_percent,
								CASE WHEN A.CLAIM_NUMBER IS NULL
									THEN 10000 *(
										CASE WHEN((PCS.PROD_CODE IN('0054', '0197')) OR(CCN_DATA.SIOP_PRODUCT_CODE IS NOT NULL)) OR(RD.NEW_RESOLVED_IND = 'R' AND RD.SPECIFIC_RESERVE_IND = 'Y' OR RD.PCT_100_RECOVERY_IND = 'Y')
											THEN 0
											ELSE RES_PCT.RESERVE_PCT
										END)
									ELSE RES_PCT.RESERVE_PCT
								END, -- -SS- no alias ????
								RD.NEW_RESOLVED_IND,
								ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42) AS TRX_LAG,
								100 * TD3.YEAR + TD3.MONTH AS TRXYEARMONTH,
								0 AS EXPENSE_AMT_IN_RES,
								0 AS EXPENSE_AMT_NOT_IN_RES
							FROM
								(
									/* THIS IS THE CORE PORTION FOR  CLAIM TYPE TO RETRIEVE EXPENSE RELATED INFORMATION */
									SELECT
											'SPD/Retrofit Labor/Extended Purchased Labor' AS TYPE,
											LR.CLAIM_NBR,
											LR.RETRO_ID,
											CT.CLAIM_TYPE_CODE AS CLAIM_TYPE,
											CASE
												WHEN EXPENSE_TYPE_SCD_KEY IN(58, 60, 61) THEN 'MATERIAL'
												ELSE 'LABOR'
												END
												AS EXPENSE_TYPE_DESCR,
											CASE
												WHEN EXPENSE_TYPE_SCD_KEY IN(58, 60, 61) THEN 'MATERIAL'
												ELSE 'LABOR'
												END
												AS EXPENSE_TYPE_CATG,
											LR.CHARGE_COMM_PCT,
											LR.CHARGE_COMPANY_PCT,
											LR.ALLOCATED_EXP_TYPE_AMOUNT * - 1 AS DOLLAR_AMOUNT,
											LR.STEP_NBR,
											LR.CCN_TRX_DATE_KEY,
											LR.ORIGINAL_SHIP_DATE_KEY,
											LR.FAIL_DATE_KEY,
											LR.START_DATE_KEY,
											LR.GL_ACCOUNT_SCD_KEY,
											LR.PROD_CODE_SCD_KEY,
											LR.CUST_ACCOUNT_SCD_KEY,
											LR.SUBMIT_OFFICE_SCD_KEY,
											LR.TRX_CURRENCY,
											LR.SIOP_PRODUCT_CODE
										FROM
											WC_LABOR_ROLLUP LR
											INNER JOIN
											TIME_DAY TD
											ON 1=1
											AND TD.TIME_KEY = LR.CCN_TRX_DATE_KEY
											INNER JOIN
											CLAIM_TYPE_SCD CT
											ON 1=1
											AND LR.CLAIM_TYPE_SCD_KEY = CT.CLAIM_TYPE_SCD_KEY
											INNER JOIN
											R12_GL_ACCOUNT_SCD GLA
											-- -SS- GL_ACCOUNT_SCD GLA
											ON 1=1
											AND GLA.GL_ACCOUNT_SCD_KEY = LR.GL_ACCOUNT_SCD_KEY
										WHERE
											1 = 1
											/* for 'RETROFIT LABOR' */
											AND LR.CLAIM_TYPE_SCD_KEY = 2
											--AND TD.FULL_DATE>=TO_DATE('6/1/2006','MM/DD/YYYY') AND TD.FULL_DATE<TO_DATE('7/1/2007','MM/DD/YYYY')
											--AND MONTHS_BETWEEN(last_day(SYSDATE), last_day(TD.full_date))<=12
											--AND MONTHS_BETWEEN(last_day(SYSDATE), last_day(TD.full_date))>=1
											AND TD.FULL_DATE >= TO_DATE('1/1/1890', 'MM/DD/YYYY')
											AND TD.FULL_DATE <= TO_DATE('12/31/2050', 'MM/DD/YYYY')
											--AND (gla.ACCOUNT LIKE '8062%' OR gla.ACCOUNT LIKE '0620%')
											AND(LR.CCN_TRX_NBR IS NOT NULL)
								)
								CCN_DATA
								LEFT OUTER JOIN
								(
									SELECT
											/* NO_CPU_COSTING */
											DISTINCT CLAIM_NBR,
											STEP_NBR,
											WA_POLICY_TYPE,
											WA_RANGE
										FROM
											DM_FAL_CLAIMS_WARRANTY_XRF
								) FCW
								ON 1=1
								AND CCN_DATA.CLAIM_NBR = FCW.CLAIM_NBR -- -SS- (+)
								AND CCN_DATA.STEP_NBR = FCW.STEP_NBR -- -SS- (+)
								INNER JOIN
								TIME_DAY TD3
								ON 1=1
								AND CCN_DATA.CCN_TRX_DATE_KEY = TD3.TIME_KEY
								INNER JOIN
								TIME_DAY TD2
								ON 1=1
								AND CCN_DATA.ORIGINAL_SHIP_DATE_KEY = TD2.TIME_KEY
								INNER JOIN
								TIME_DAY TD1
								ON 1=1
								AND CCN_DATA.FAIL_DATE_KEY = TD1.TIME_KEY
								INNER JOIN
								TIME_DAY TD
								ON 1=1
								AND CCN_DATA.START_DATE_KEY = TD.TIME_KEY
								INNER JOIN
								R12_GL_ACCOUNT_SCD GLA
								-- -SS- GL_ACCOUNT_SCD GLA
								ON 1=1
								AND CCN_DATA.GL_ACCOUNT_SCD_KEY = GLA.GL_ACCOUNT_SCD_KEY
								INNER JOIN
								PROD_CODE_SCD PCS
								ON 1=1
								AND CCN_DATA.PROD_CODE_SCD_KEY = PCS.PROD_CODE_SCD_KEY
								INNER JOIN
								CUST_ACCOUNT_SCD CACCT
								ON 1=1
								AND CCN_DATA.CUST_ACCOUNT_SCD_KEY = CACCT.CUST_ACCOUNT_SCD_KEY
								INNER JOIN
								SUBMIT_OFFICE_SCD SOS
								ON 1=1
								AND CCN_DATA.SUBMIT_OFFICE_SCD_KEY = SOS.SUBMIT_OFFICE_SCD_KEY
								INNER JOIN
								PROD_CODE_XREF_RCPO_DR PRODGRP
								ON 1=1
								AND GLA.COMPANY = PRODGRP.GL_LEDGER -- -SS- issue 22
								AND PCS.PROD_CODE = PRODGRP.MANF_PROD_CODE
								--,OTR_PROD_CODE_XREF_RCPO@DR_INTFC_DW.LAX.TRANE.COM PRODGRP
								/* -SS- 
								LEFT OUTER JOIN
								ACTUATE_SEC_XREF ASX
								ON 1=1
								AND GLA.COMPANY = ASX.PSGL -- -SS- (+)
								*/
								INNER JOIN
								UD_031_RETROFIT_RULES RES_PCT
								ON 1=1
								AND CCN_DATA.EXPENSE_TYPE_DESCR = RES_PCT.EXPENSE_TYPE_DESCR
								AND CCN_DATA.EXPENSE_TYPE_CATG = UPPER(RES_PCT.EXPENSE_TYPE_CATG)
								AND SOS.COMPANY_OWNED_IND = RES_PCT.COMPANY_OWNED_IND
								--, DM_WAR_CSN_RSV_PCT_REF RES_PCT
								INNER JOIN
								UD_031_RETROFIT_ID RD
								ON 1=1
								/* NEW_RETROFIT_ID */
								AND CCN_DATA.RETRO_ID = RD.RETROFIT_ID
								/* NEW_RETROFIT_ID */
								LEFT OUTER JOIN
								UD_031_STDWTY_RSV_CLM_ADJ A
								ON 1=1
								AND CCN_DATA.CLAIM_NBR = A.CLAIM_NUMBER -- -SS- (+) --TTP#12554
								LEFT OUTER JOIN
								DM_WAR_CSN_RSV_PCT_REF RS_RES_PCT --TTP#12554
								ON 1=1
								AND A.CLAIM_TYPE = RS_RES_PCT.CLAIM_TYPE -- -SS- (+) --TTP#12554
							WHERE
								1 = 1
								AND CASE
									WHEN CCN_DATA.CLAIM_TYPE = 'EXTD PURCHASED LABOR'
									THEN 'EXTENDED PURCHASED LABOR'
									ELSE CCN_DATA.CLAIM_TYPE
									END = RES_PCT.CLAIM_TYPE
								AND CASE
									WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1' THEN 'Y'
									ELSE 'N'
									END = RES_PCT.CUST_CREDIT_CATG_CODE
								AND PRODGRP.PRODUCT_CATEGORY IS NOT NULL
					) A
					ON 1=1
					AND A.RETROFIT_ID = RP.RETRO_ID
					LEFT OUTER JOIN
					--**********************
					(
						/* Retrofit And SCR - Distinct Serial number qry */
						SELECT
								/*+ NO_CPU_COSTING */
								RP.RETRO_ID AS RETRO_ID,
								COUNT(DISTINCT MLR.PARENT_SERIAL_NBR) AS UNITS_DONE
							FROM
								FLN_RETROFIT_PROGRAM RP
								INNER JOIN
								WC_MAT_LBR_ROLLUP MLR
								ON 1=1
								AND RP.RETRO_ID = MLR.RETRO_ID
								INNER JOIN
								SUBMIT_OFFICE_SCD SO
								ON 1=1
								AND MLR.SUBMIT_OFFICE_SCD_KEY = SO.SUBMIT_OFFICE_SCD_KEY
								INNER JOIN
								EXPENSE_TYPE_SCD ET
								ON 1=1
								AND MLR.EXPENSE_TYPE_SCD_KEY = ET.EXPENSE_TYPE_SCD_KEY
								LEFT OUTER JOIN
								TIME_DAY TD
								ON 1=1
								AND MLR.CCN_TRX_DATE_KEY = TD.TIME_KEY -- -SS- (+)
							WHERE
								TRUNC(TD.FULL_DATE) <
									CASE
										WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
										THEN (LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 1)) + 1)
										ELSE ADD_MONTHS(TO_DATE(:TRX_MONTH||'/1/'||:TRX_YEAR, 'MM/DD/YYYY'), 1)
										END
								AND 1 = 1
								AND MLR.RETRO_ID IS NOT NULL
								AND ET.EXPENSE_TYPE_DESCR NOT LIKE 'OFFSET%'
								--and rp.retro_id in    ('RTSVC010AEN','BCSVC02AEN')
							GROUP BY
								RP.RETRO_ID
						UNION ALL
						SELECT
								/*+ NO_CPU_COSTING */
								RP.RETRO_ID AS RETRO_ID,
								COUNT(DISTINCT MLR.PARENT_SERIAL_NBR) AS UNITS_DONE
							FROM
								WC_MAT_LBR_ROLLUP MLR
								INNER JOIN
								SUBMIT_OFFICE_SCD SO
								ON 1=1
								AND MLR.SUBMIT_OFFICE_SCD_KEY = SO.SUBMIT_OFFICE_SCD_KEY
								INNER JOIN
								EXPENSE_TYPE_SCD ET
								ON 1=1
								AND MLR.EXPENSE_TYPE_SCD_KEY = ET.EXPENSE_TYPE_SCD_KEY
								INNER JOIN
								CLAIM_TASK_SCD CK
								ON 1=1
								AND MLR.CLAIM_TASK_SCD_KEY = CK.CLAIM_TASK_SCD_KEY
								INNER JOIN
								FLN_RETROFIT_PROGRAM RP
								ON 1=1
								AND RP.RETRO_ID = CK.TASK_CODE
								LEFT OUTER JOIN
								TIME_DAY TD
								ON 1=1
								AND MLR.CCN_TRX_DATE_KEY = TD.TIME_KEY -- -SS- (+)
							WHERE
								TRUNC(TD.FULL_DATE) <
								CASE WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
									THEN(LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 1)) + 1)
									ELSE ADD_MONTHS(TO_DATE(:TRX_MONTH||'/1/'||:TRX_YEAR, 'MM/DD/YYYY'), 1)
								END
								AND 1 = 1
								AND MLR.RETRO_ID IS NOT NULL
								AND ET.EXPENSE_TYPE_DESCR NOT LIKE 'OFFSET%'
								--and rp.retro_id in   ('RTSVC010AEN','BCSVC02AEN')
							GROUP BY
								RP.RETRO_ID
					) B
					ON 1=1
					AND B.RETRO_ID -- -SS- (+)
					= RP.RETRO_ID
					--***
				WHERE
					COUNTRY_INDICATOR IN('USA', 'CAN')
					--AND retrofit_id in   ('RTSVC010AEN','BCSVC02AEN')
					AND TRUNC(RP.RETRO_END_DATE) >=
						CASE
							WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
							THEN (LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 7)))
							ELSE TO_DATE(:PRMBRETROFIT_END_DATE, 'mm/dd/yyyy')
							END
					AND TRUNC(A.TRX_DATE) <
						CASE
							WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
							THEN (LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 1)) + 1)
							ELSE ADD_MONTHS(TO_DATE(:TRX_MONTH||'/1/'||:TRX_YEAR, 'MM/DD/YYYY'), 1)
							END
					AND CASE
						WHEN (A.BUSINESS_UNIT = 'CSD' OR A.BUSINESS_UNIT = 'CAN') THEN 'TCS'
						WHEN (A.BUSINESS_UNIT = 'GLUPG' OR A.BUSINESS_UNIT = 'RSCAN') THEN 'RS'
						ELSE NULL
						END = :SYSTEM
				GROUP BY
					A.COUNTRY_INDICATOR,
					A.GL_ACCOUNT,
					CASE
						WHEN A.MATERIAL_LABOR LIKE'%M%'
						THEN 'MATERIAL' WHEN A.MATERIAL_LABOR LIKE 'LABOR%'
						THEN 'LABOR'
						END,
					A.RETROFIT_ID,
					RP.RETRO_NOTES,
					NVL(RP.RS_PERCENT, 0),
					RP.PRODUCT_CODE,
					RP.RETRO_START_DATE,
					RP.RETRO_END_DATE,
					RP.SCR_IND,
					NVL(RP.ORIGINAL_ESTIMATED_MATERIAL, 0),
					NVL(RP.ORIGINAL_ESTIMATED_LABOR, 0),
					--nvl(rp.original_estimated_labor + original_estimated_material,0) ,
					RP.RETRO_NBR_TO_DO,
					B.UNITS_DONE,
					A.CLAIM_NUMBER,
					A.NEW_RESOLVED_IND,
					A.TRX_YEAR,
					A.TRX_MONTH,
					GL_DEPT,
					A.STEP_NUMBER,
					A.BUSINESS_UNIT,
					A.CLAIM_TYPE,
					A.EXPENSE_TYPE_DESCR,
					A.OFFICE_NAME,
					A.GL_PROD_CODE,
					A.MANF_PROD_CODE,
					A.COMPANY_OWNED,
					A.CUSTOMER_NUMBER,
					A.CUSTOMER_NAME,
					A.INTERNAL_EXTERNAL,
					A.TRX_YEAR,
					A.INTMONTHS_TRX_TO_BASE,
					A.INTMONTHS_SHIP_TO_BASE,
					A.SHIP_DATE,
					A.SHIP_YEAR_MONTH,
					A.INTMONTHS_SHIP_TO_TRX,
					A.START_DATE,
					A.INTMONTHS_START_TO_TRX,
					A.FAIL_DATE,
					A.INTMONTHS_FAIL_TO_TRX,
					A.WARRANTY_TYPE,
					A.WARRANTY_DURATION,
					A.CURRENCY,
					A.IN_RESERVE_PERCENT,
					A.TRX_LAG,
					A.TRXYEARMONTH,
					A.TRX_DATE
					--ORDER BY  gl_account, country_indicator, trx_year, trx_month
		) AA,
		(
			SELECT
					/* Retrofit Summary Qry for sum of Expense (Summary Level Sum)*/
					SUM(A.EXPENSE_AMOUNT) AS TOTAL_SUM,
					A.RETROFIT_ID AS RETRO_ID,
					CASE
						WHEN COUNT(DISTINCT A. GL_DEPT) > 1
						THEN A.RETROFIT_ID || ' (Multiple Departments) , (Multiple Columns)'
						ELSE A.RETROFIT_ID
						END AS RETROFIT_ID
				FROM
					(
						/* Retrofit Material */
						SELECT
								/* NO_CPU_COSTING */
								MLR.CLAIM_NBR AS CLAIM_NUMBER,
								MLR.STEP_NBR AS STEP_NUMBER,
								GLA.R12_ENTITY AS BUSINESS_UNIT,
								-- -SS- GLA.COMPANY AS BUSINESS_UNIT,
								PRODGRP.PRODUCT_CATEGORY AS RESERVE_GROUP,
								CTYPES.CLAIM_TYPE_DESCR AS CLAIM_TYPE,
								SUM(MLR.EXP_TYPE_AMOUNT * - 1) AS EXPENSE_AMOUNT,
								SUM(100 *(MLR.EXP_TYPE_AMOUNT * - 1 - TRUNC(MLR.EXP_TYPE_AMOUNT * - 1))) AS EXPENSE_AMOUNT_DEC,
								RES_PCT.EXPENSE_TYPE_CATG AS MATERIAL_LABOR,
								GLA.R12_ACCOUNT AS GL_ACCOUNT,
								-- -SS- GLA.ACCOUNT AS GL_ACCOUNT,
								ETS.EXPENSE_TYPE_DESCR AS EXPENSE_TYPE_DESCR,
								SOS.SUBMIT_OFFICE_NAME AS OFFICE_NAME,
								-- -SS- NEW
								CASE
									WHEN GLA.R12_PRODUCT IS NULL OR GLA.R12_PRODUCT = '' THEN PCS.PROD_CODE
									ELSE GLA.R12_PRODUCT
									END AS GL_PROD_CODE,
								-- -SS- /NEW
								/* -SS-
								CASE
									WHEN GLA.PROD_CODE IS NULL OR GLA.PROD_CODE = '' THEN PCS.PROD_CODE
									ELSE GLA.PROD_CODE
									END AS GL_PROD_CODE,
								*/
								PCS.PROD_CODE AS MANF_PROD_CODE,
								SOS.COMPANY_OWNED_IND AS COMPANY_OWNED,
								CACCT.ACCOUNT_NUMBER AS CUSTOMER_NUMBER,
								CACCT.CUST_ACCT_NAME AS CUSTOMER_NAME,
								(
								CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
									THEN 'Y'
									ELSE 'N'
								END) AS INTERNAL_EXTERNAL,
								TD3.FULL_DATE AS TRX_DATE,
								TO_CHAR(TD3.YEAR) AS TRX_YEAR,
								TO_CHAR(TD3.MONTH) AS TRX_MONTH,
								CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_TRX_TO_BASE,
								CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_SHIP_TO_BASE,
								TD2.FULL_DATE AS SHIP_DATE,
								(TD2.YEAR * 100 + TD2.MONTH) AS SHIP_YEAR_MONTH,
								CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1 AS INTMONTHS_SHIP_TO_TRX,
								TD.FULL_DATE AS START_DATE,
								((TD3.TIME_KEY - TD.TIME_KEY) / 30.42) AS INTMONTHS_START_TO_TRX,
								TD1.FULL_DATE AS FAIL_DATE,
								((TD3.TIME_KEY - TD1.TIME_KEY) / 30.42) AS INTMONTHS_FAIL_TO_TRX,
								(
								CASE WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL
									THEN 'NO'
									ELSE FCW.WA_POLICY_TYPE
								END) AS WARRANTY_TYPE,
								(
								CASE                                  WHEN FCW.WA_RANGE = '1'
									THEN '1st Year Standard Warranty'    WHEN FCW.WA_RANGE = '2'
									THEN '2nd-5th Year Standard Warranty'WHEN FCW.WA_RANGE = '5'
									THEN '> 5th Year Standard Warranty'
									ELSE 'Out of Standard Warranty'
								END) AS WARRANTY_DURATION,
								MLR.TRX_CURRENCY AS CURRENCY,
								-- -SS- NEW
								CASE WHEN GLA.R12_ENTITY IN('5773', '5588')
									THEN 'CAN'
									ELSE 'USA'
								END
								-- -SS- /NEW
								/* -SS-
								CASE
									WHEN ASX.NATION_CURR = 'USD' THEN 'USA'
									WHEN ASX.NATION_CURR = 'CAD' THEN 'CAN'
									ELSE 'CURRENCY: ' || ASX.NATION_CURR
								END
								*/
								AS COUNTRY_INDICATOR,
								MLR.RETRO_ID AS RETROFIT_ID,
								GLA.R12_COST_CENTER AS GL_DEPT,
								-- -SS- GLA.COST_CENTER AS GL_DEPT
								--, 10000*(CASE WHEN PCS.PROD_CODE='0061'  or FCW.WA_RANGE<>'1' THEN 0 ELSE RES_PCT.RESERVE_PCT  END) AS IN_RESERVE_PERCENT
								--10000* (CASE WHEN     rd.new_resolved_ind = 'R'AND rd.specific_reserve_ind = 'Y'OR rd.pct_100_recovery_ind = 'Y'THEN 0ELSE res_pct.reserve_pct END) AS in_reserve_percent,
								(
								CASE WHEN A.CLAIM_NUMBER IS NULL
									THEN 10000 *(
										CASE WHEN((PCS.PROD_CODE IN('0054', '0197')) OR(MLR.SIOP_PRODUCT_CODE IS NOT NULL)) OR(RD.NEW_RESOLVED_IND = 'R' AND RD.SPECIFIC_RESERVE_IND = 'Y' OR RD.PCT_100_RECOVERY_IND = 'Y')
											THEN 0
											ELSE RES_PCT.RESERVE_PCT
										END)
									ELSE RES_PCT.RESERVE_PCT
								END) AS IN_RESERVE_PERCENT,
								RD.NEW_RESOLVED_IND,
								ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42) AS TRX_LAG,
								100 * TD3.YEAR + TD3.MONTH AS TRXYEARMONTH,
								0 AS EXPENSE_AMT_IN_RES,
								0 AS EXPENSE_AMT_NOT_IN_RES
							FROM
								WC_MAT_LBR_ROLLUP MLR
								INNER JOIN
								EXPENSE_TYPE_SCD ET
								ON 1=1
								AND MLR.EXPENSE_TYPE_SCD_KEY = ET.EXPENSE_TYPE_SCD_KEY
								LEFT OUTER JOIN
								DM_FAL_CLAIMS_WARRANTY_XRF FCW
								ON 1=1
								AND MLR.CLAIM_NBR = FCW.CLAIM_NBR -- -SS- (+)
								AND MLR.DETAIL_NBR = FCW.DETAIL_NBR -- -SS- (+)
								AND MLR.STEP_NBR = FCW.STEP_NBR -- -SS- (+)
								INNER JOIN
								TIME_DAY TD3
								ON 1=1
								AND MLR.CCN_TRX_DATE_KEY = TD3.TIME_KEY
								INNER JOIN
								TIME_DAY TD2
								ON 1=1
								AND MLR.ORIGINAL_SHIP_DATE_KEY = TD2.TIME_KEY
								INNER JOIN
								TIME_DAY TD1
								ON 1=1
								AND MLR.FAIL_DATE_KEY = TD1.TIME_KEY
								INNER JOIN
								TIME_DAY TD
								ON 1=1
								AND MLR.START_DATE_KEY = TD.TIME_KEY
								INNER JOIN
								CLAIM_TASK_SCD CTASKS
								ON 1=1
								AND MLR.CLAIM_TASK_SCD_KEY = CTASKS.CLAIM_TASK_SCD_KEY
								INNER JOIN
								CLAIM_TYPE_SCD CTYPES
								ON 1=1
								AND MLR.CLAIM_TYPE_SCD_KEY = CTYPES.CLAIM_TYPE_SCD_KEY
								INNER JOIN
								R12_GL_ACCOUNT_SCD GLA
								-- -SS- GL_ACCOUNT_SCD GLA
								ON 1=1
								AND MLR.GL_ACCOUNT_SCD_KEY = GLA.GL_ACCOUNT_SCD_KEY
								INNER JOIN
								EXPENSE_TYPE_SCD ETS
								ON 1=1
								AND MLR.EXPENSE_TYPE_SCD_KEY = ETS.EXPENSE_TYPE_SCD_KEY
								INNER JOIN
								PROD_CODE_SCD PCS
								ON 1=1
								AND MLR.PROD_CODE_SCD_KEY = PCS.PROD_CODE_SCD_KEY
								INNER JOIN
								CUST_ACCOUNT_SCD CACCT
								ON 1=1
								AND MLR.CUST_ACCOUNT_SCD_KEY = CACCT.CUST_ACCOUNT_SCD_KEY
								INNER JOIN
								SUBMIT_OFFICE_SCD SOS
								ON 1=1
								AND MLR.SUBMIT_OFFICE_SCD_KEY = SOS.SUBMIT_OFFICE_SCD_KEY
								INNER JOIN
								PROD_CODE_XREF_RCPO_DR PRODGRP
								ON 1=1
								AND GLA.COMPANY = PRODGRP.GL_LEDGER -- -SS- issue 22
								AND PCS.PROD_CODE = PRODGRP.MANF_PROD_CODE
								/* -SS-
								LEFT OUTER JOIN
								--,OTR_PROD_CODE_XREF_RCPO@DR_INTFC_DW.LAX.TRANE.COM PRODGRP
								ACTUATE_SEC_XREF ASX
								ON 1=1
								AND GLA.COMPANY = ASX.PSGL -- -SS- (+)
								*/
								INNER JOIN
								UD_031_RETROFIT_RULES RES_PCT
								ON 1=1
								AND CTYPES.CLAIM_TYPE_DESCR = RES_PCT.CLAIM_TYPE
								AND ETS.EXPENSE_TYPE_DESCR = RES_PCT.EXPENSE_TYPE_DESCR
								AND SOS.COMPANY_OWNED_IND = RES_PCT.COMPANY_OWNED_IND
								INNER JOIN
								--, DM_WAR_CSN_RSV_PCT_REF RES_PCT
								UD_031_RETROFIT_ID RD
								ON 1=1
								/* NEW_RETROFIT_ID */
								AND MLR.RETRO_ID = RD.RETROFIT_ID
								/* NEW_RETROFIT_ID */
								LEFT OUTER JOIN
								UD_031_STDWTY_RSV_CLM_ADJ A
								ON 1=1
								AND MLR.CLAIM_NBR = A.CLAIM_NUMBER -- -SS- (+)      --TTP#12554
								LEFT OUTER JOIN
								DM_WAR_CSN_RSV_PCT_REF RS_RES_PCT --TTP#12554
								ON 1=1
								AND A.CLAIM_TYPE = RS_RES_PCT.CLAIM_TYPE -- -SS- (+) --TTP#12554
							WHERE
								1 = 1
								AND MLR.CLAIM_TYPE_SCD_KEY = 3
								AND(MLR.CCN_TRX_NBR IS NOT NULL)
								AND(
								CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
									THEN 'Y'
									ELSE 'N'
								END) = RES_PCT.CUST_CREDIT_CATG_CODE
								AND PRODGRP.PRODUCT_CATEGORY IS NOT NULL
								AND TD3.FULL_DATE >= TO_DATE('1/1/1890', 'MM/DD/YYYY')
								AND TD3.FULL_DATE <= TO_DATE('12/31/2050', 'MM/DD/YYYY')
								--AND (gla.ACCOUNT LIKE '8062%' OR gla.ACCOUNT LIKE '0620%')
							GROUP BY
								MLR.CLAIM_NBR,
								MLR.STEP_NBR,
								GLA.R12_ENTITY,
								-- -SS- GLA.COMPANY,
								PRODGRP.PRODUCT_CATEGORY,
								CTYPES.CLAIM_TYPE_DESCR,
								RES_PCT.EXPENSE_TYPE_CATG,
								GLA.R12_ACCOUNT,
								-- -SS- GLA.ACCOUNT,
								ETS.EXPENSE_TYPE_DESCR,
								SOS.SUBMIT_OFFICE_NAME,
								GLA.R12_PRODUCT,
								-- -SS- GLA.PROD_CODE,
								PCS.PROD_CODE,
								SOS.COMPANY_OWNED_IND,
								CACCT.ACCOUNT_NUMBER,
								CACCT.CUST_ACCT_NAME,
								(
								CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
									THEN 'Y'
									ELSE 'N'
								END),
								TD3.FULL_DATE,
								TO_CHAR(TD3.YEAR),
								TO_CHAR(TD3.MONTH),
								CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1,
								CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1,
								TD2.FULL_DATE,
								(TD2.YEAR * 100 + TD2.MONTH),
								CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1,
								TD.FULL_DATE,
								((TD3.TIME_KEY - TD.TIME_KEY) / 30.42),
								TD1.FULL_DATE,
								((TD3.TIME_KEY - TD1.TIME_KEY) / 30.42),
								(
								CASE WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL
									THEN 'NO'
									ELSE FCW.WA_POLICY_TYPE
								END),
								(
								CASE                                   WHEN FCW.WA_RANGE = '1'
									THEN '1st Year Standard Warranty'     WHEN FCW.WA_RANGE = '2'
									THEN '2nd-5th Year Standard Warranty' WHEN FCW.WA_RANGE = '5'
									THEN '> 5th Year Standard Warranty'
									ELSE 'Out of Standard Warranty'
								END),
								MLR.TRX_CURRENCY,
								-- -SS- NEW
								CASE WHEN GLA.R12_ENTITY IN('5773', '5588')
									THEN 'CAN'
									ELSE 'USA'
								END,
								-- -SS- /NEW
								/* -SS-
								CASE
									WHEN ASX.NATION_CURR = 'USD' THEN 'USA'
									WHEN ASX.NATION_CURR = 'CAD' THEN 'CAN'
									ELSE 'CURRENCY: ' || ASX.NATION_CURR
								END
								*/
								MLR.RETRO_ID,
								GLA.R12_COST_CENTER,
								-- -SS- GLA.COST_CENTER,
								--10000
								--* (CASE
								--WHEN     rd.new_resolved_ind = 'R'
								--AND rd.specific_reserve_ind = 'Y'
								--OR rd.pct_100_recovery_ind = 'Y'
								--THEN 0
								--ELSE res_pct.reserve_pct
								--END
								--),
								(
								CASE WHEN A.CLAIM_NUMBER IS NULL
									THEN 10000 *(
										CASE WHEN((PCS.PROD_CODE IN('0054', '0197')) OR(MLR.SIOP_PRODUCT_CODE IS NOT NULL)) OR(RD.NEW_RESOLVED_IND = 'R' AND RD.SPECIFIC_RESERVE_IND = 'Y' OR RD.PCT_100_RECOVERY_IND = 'Y')
											THEN 0
											ELSE RES_PCT.RESERVE_PCT
										END)
									ELSE RES_PCT.RESERVE_PCT
								END),
								RD.NEW_RESOLVED_IND,
								ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42),
								100 * TD3.YEAR + TD3.MONTH
						UNION ALL

						/* Retrofit Labor */
						SELECT
								/* NO_CPU_COSTING */
								CCN_DATA.CLAIM_NBR AS CLAIM_NUMBER,
								CCN_DATA.STEP_NBR AS STEP_NUMBER,
								GLA.R12_ENTITY AS BUSINESS_UNIT,
								-- -SS- GLA.COMPANY AS BUSINESS_UNIT,
								PRODGRP.PRODUCT_CATEGORY AS RESERVE_GROUP,
								CCN_DATA.CLAIM_TYPE AS CLAIM_TYPE,
								CCN_DATA.DOLLAR_AMOUNT AS EXPENSE_AMOUNT,
								100 *(CCN_DATA.DOLLAR_AMOUNT - TRUNC(CCN_DATA.DOLLAR_AMOUNT)) AS EXPENSE_AMOUNT_DEC,
								(CCN_DATA.EXPENSE_TYPE_CATG) AS MATERIAL_LABOR,
								GLA.R12_ACCOUNT AS GL_ACCOUNT,
								-- -SS- GLA.ACCOUNT AS GL_ACCOUNT,
								CCN_DATA.EXPENSE_TYPE_DESCR AS EXPENSE_TYPE_DESCR,
								SOS.SUBMIT_OFFICE_NAME AS OFFICE_NAME,
								-- -SS- NEW
								CASE
									WHEN GLA.R12_PRODUCT IS NULL OR GLA.R12_PRODUCT = '' THEN PCS.PROD_CODE
									ELSE GLA.R12_PRODUCT
									END AS GL_PROD_CODE,
								-- -SS- /NEW
								/* -SS-
								CASE
									WHEN GLA.PROD_CODE IS NULL OR GLA.PROD_CODE = '' THEN PCS.PROD_CODE
									ELSE GLA.PROD_CODE
									END AS GL_PROD_CODE,
								*/
								PCS.PROD_CODE AS MANF_PROD_CODE,
								SOS.COMPANY_OWNED_IND AS COMPANY_OWNED,
								CACCT.ACCOUNT_NUMBER AS CUSTOMER_NUMBER,
								CACCT.CUST_ACCT_NAME AS CUSTOMER_NAME,
								(
								CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
									THEN 'Y'
									ELSE 'N'
								END) AS INTERNAL_EXTERNAL,
								TD3.FULL_DATE AS TRX_DATE,
								TO_CHAR(TD3.YEAR) AS TRX_YEAR,
								TO_CHAR(TD3.MONTH) AS TRX_MONTH,
								CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_TRX_TO_BASE,
								CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_SHIP_TO_BASE,
								TD2.FULL_DATE AS SHIP_DATE,
								(TD2.YEAR * 100 + TD2.MONTH) AS SHIP_YEAR_MONTH,
								CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1 AS INTMONTHS_SHIP_TO_TRX,
								TD.FULL_DATE AS START_DATE,
								((TD3.TIME_KEY - TD.TIME_KEY) / 30.42) AS INTMONTHS_START_TO_TRX,
								TD1.FULL_DATE AS FAIL_DATE,
								((TD3.TIME_KEY - TD1.TIME_KEY) / 30.42) AS INTMONTHS_FAIL_TO_TRX,
								(
								CASE WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL
									THEN 'NO'
									ELSE FCW.WA_POLICY_TYPE
								END) AS WARRANTY_TYPE,
								(
								CASE WHEN CCN_DATA.CLAIM_TYPE = 'EXTD PURCHASED LABOR'
									THEN 'Out of Standard Warranty'
									ELSE(
										CASE                                   WHEN FCW.WA_RANGE = '1'
											THEN '1st Year Standard Warranty'     WHEN FCW.WA_RANGE = '2'
											THEN '2nd-5th Year Standard Warranty' WHEN FCW.WA_RANGE = '5'
											THEN '> 5th Year Standard Warranty'
											ELSE 'Out of Standard Warranty'
										END)
								END) AS WARRANTY_DURATION,
								CCN_DATA.TRX_CURRENCY AS CURRENCY,
								-- -SS- NEW
								CASE WHEN GLA.R12_ENTITY IN('5773', '5588')
									THEN 'CAN'
									ELSE 'USA'
								END
								-- -SS- /NEW
								/* -SS-
								CASE
									WHEN ASX.NATION_CURR = 'USD' THEN 'USA'
									WHEN ASX.NATION_CURR = 'CAD' THEN 'CAN'
									ELSE 'CURRENCY: ' || ASX.NATION_CURR
								END
								*/
								AS COUNTRY_INDICATOR,
								CCN_DATA.RETRO_ID AS RETROFIT_ID,
								GLA.R12_COST_CENTER AS GL_DEPT,
								-- -SS- GLA.COST_CENTER AS GL_DEPT,
								--10000
								--* (CASE
								--WHEN     rd.new_resolved_ind = 'R'
								--AND rd.specific_reserve_ind = 'Y'
								--OR rd.pct_100_recovery_ind = 'Y'
								--THEN 0
								--ELSE res_pct.reserve_pct
								--END
								--) AS in_reserve_percent,
								(
								CASE WHEN A.CLAIM_NUMBER IS NULL
									THEN 10000 *(
										CASE WHEN((PCS.PROD_CODE IN('0054', '0197')) OR(CCN_DATA.SIOP_PRODUCT_CODE IS NOT NULL)) OR(RD.NEW_RESOLVED_IND = 'R' AND RD.SPECIFIC_RESERVE_IND = 'Y' OR RD.PCT_100_RECOVERY_IND = 'Y')
											THEN 0
											ELSE RES_PCT.RESERVE_PCT
										END)
									ELSE RES_PCT.RESERVE_PCT
								END),
								RD.NEW_RESOLVED_IND,
								ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42) AS TRX_LAG,
								100 * TD3.YEAR + TD3.MONTH AS TRXYEARMONTH,
								0 AS EXPENSE_AMT_IN_RES,
								0 AS EXPENSE_AMT_NOT_IN_RES
							FROM
								(
									/* THIS IS THE CORE PORTION FOR  CLAIM TYPE TO RETRIEVE EXPENSE RELATED INFORMATION */
									SELECT
											'SPD/Retrofit Labor/Extended Purchased Labor' AS TYPE,
											LR.CLAIM_NBR,
											LR.RETRO_ID,
											CT.CLAIM_TYPE_CODE AS CLAIM_TYPE,
											(
											CASE WHEN EXPENSE_TYPE_SCD_KEY IN(58, 60, 61)
												THEN 'MATERIAL'
												ELSE 'LABOR'
											END) AS EXPENSE_TYPE_DESCR,
											(
											CASE WHEN EXPENSE_TYPE_SCD_KEY IN(58, 60, 61)
												THEN 'MATERIAL'
												ELSE 'LABOR'
											END) AS EXPENSE_TYPE_CATG,
											LR.CHARGE_COMM_PCT,
											LR.CHARGE_COMPANY_PCT,
											LR.ALLOCATED_EXP_TYPE_AMOUNT * - 1 AS DOLLAR_AMOUNT,
											LR.STEP_NBR,
											LR.CCN_TRX_DATE_KEY,
											LR.ORIGINAL_SHIP_DATE_KEY,
											LR.FAIL_DATE_KEY,
											LR.START_DATE_KEY,
											LR.GL_ACCOUNT_SCD_KEY,
											LR.PROD_CODE_SCD_KEY,
											LR.CUST_ACCOUNT_SCD_KEY,
											LR.SUBMIT_OFFICE_SCD_KEY,
											LR.TRX_CURRENCY,
											LR.SIOP_PRODUCT_CODE
										FROM
											WC_LABOR_ROLLUP LR
											INNER JOIN
											TIME_DAY TD
											ON 1=1
											AND TD.TIME_KEY = LR.CCN_TRX_DATE_KEY
											INNER JOIN
											CLAIM_TYPE_SCD CT
											ON 1=1
											AND LR.CLAIM_TYPE_SCD_KEY = CT.CLAIM_TYPE_SCD_KEY
											INNER JOIN
											R12_GL_ACCOUNT_SCD GLA
											-- -SS- GL_ACCOUNT_SCD GLA
											ON 1=1
											AND GLA.GL_ACCOUNT_SCD_KEY = LR.GL_ACCOUNT_SCD_KEY
										WHERE
											1 = 1
											/* for 'RETROFIT LABOR' */
											AND LR.CLAIM_TYPE_SCD_KEY = 2
											--AND TD.FULL_DATE>=TO_DATE('6/1/2006','MM/DD/YYYY') AND TD.FULL_DATE<TO_DATE('7/1/2007','MM/DD/YYYY')
											--AND MONTHS_BETWEEN(last_day(SYSDATE), last_day(TD.full_date))<=12
											--AND MONTHS_BETWEEN(last_day(SYSDATE), last_day(TD.full_date))>=1
											AND TD.FULL_DATE >= TO_DATE('1/1/1890', 'MM/DD/YYYY')
											AND TD.FULL_DATE <= TO_DATE('12/31/2050', 'MM/DD/YYYY')
											--AND (gla.ACCOUNT LIKE '8062%' OR gla.ACCOUNT LIKE '0620%')
											AND(LR.CCN_TRX_NBR IS NOT NULL)
								)
								CCN_DATA
								LEFT OUTER JOIN
								(
									SELECT
											/* NO_CPU_COSTING */
											DISTINCT CLAIM_NBR,
											STEP_NBR,
											WA_POLICY_TYPE,
											WA_RANGE
										FROM
											DM_FAL_CLAIMS_WARRANTY_XRF
								) FCW
								ON 1=1
								AND CCN_DATA.CLAIM_NBR = FCW.CLAIM_NBR -- -SS- (+)
								AND CCN_DATA.STEP_NBR = FCW.STEP_NBR -- -SS- (+)
								INNER JOIN
								TIME_DAY TD3
								ON 1=1
								AND CCN_DATA.CCN_TRX_DATE_KEY = TD3.TIME_KEY
								INNER JOIN
								TIME_DAY TD2
								ON 1=1
								AND CCN_DATA.ORIGINAL_SHIP_DATE_KEY = TD2.TIME_KEY
								INNER JOIN
								TIME_DAY TD1
								ON 1=1
								AND CCN_DATA.FAIL_DATE_KEY = TD1.TIME_KEY
								INNER JOIN
								TIME_DAY TD
								ON 1=1
								AND CCN_DATA.START_DATE_KEY = TD.TIME_KEY
								INNER JOIN
								R12_GL_ACCOUNT_SCD GLA
								-- -SS- GL_ACCOUNT_SCD GLA
								ON 1=1
								AND CCN_DATA.GL_ACCOUNT_SCD_KEY = GLA.GL_ACCOUNT_SCD_KEY
								INNER JOIN
								PROD_CODE_SCD PCS
								ON 1=1
								AND CCN_DATA.PROD_CODE_SCD_KEY = PCS.PROD_CODE_SCD_KEY
								INNER JOIN
								CUST_ACCOUNT_SCD CACCT
								ON 1=1
								AND CCN_DATA.CUST_ACCOUNT_SCD_KEY = CACCT.CUST_ACCOUNT_SCD_KEY
								INNER JOIN
								SUBMIT_OFFICE_SCD SOS
								ON 1=1
								AND CCN_DATA.SUBMIT_OFFICE_SCD_KEY = SOS.SUBMIT_OFFICE_SCD_KEY
								INNER JOIN
								PROD_CODE_XREF_RCPO_DR PRODGRP
								--,OTR_PROD_CODE_XREF_RCPO@DR_INTFC_DW.LAX.TRANE.COM PRODGRP
								ON 1=1
								AND GLA.COMPANY = PRODGRP.GL_LEDGER -- -SS- issue 22
								AND PCS.PROD_CODE = PRODGRP.MANF_PROD_CODE
								/* -SS-
								LEFT OUTER JOIN
								ACTUATE_SEC_XREF ASX
								ON 1=1
								AND GLA.COMPANY = ASX.PSGL -- -SS- (+)
								*/
								INNER JOIN
								UD_031_RETROFIT_RULES RES_PCT
								--, DM_WAR_CSN_RSV_PCT_REF RES_PCT
								ON 1=1
								AND CCN_DATA.EXPENSE_TYPE_DESCR = RES_PCT.EXPENSE_TYPE_DESCR
								AND CCN_DATA.EXPENSE_TYPE_CATG = UPPER(RES_PCT.EXPENSE_TYPE_CATG)
								AND SOS.COMPANY_OWNED_IND = RES_PCT.COMPANY_OWNED_IND
								INNER JOIN
								UD_031_RETROFIT_ID RD
								ON 1=1
								/* NEW_RETROFIT_ID */
								AND CCN_DATA.RETRO_ID = RD.RETROFIT_ID
								/* NEW_RETROFIT_ID */
								LEFT OUTER JOIN
								UD_031_STDWTY_RSV_CLM_ADJ A
								ON 1=1
								AND CCN_DATA.CLAIM_NBR = A.CLAIM_NUMBER -- -SS- (+) --TTP#12554
								LEFT OUTER JOIN
								DM_WAR_CSN_RSV_PCT_REF RS_RES_PCT --TTP#12554
								ON 1=1
								AND A.CLAIM_TYPE = RS_RES_PCT.CLAIM_TYPE -- -SS- (+) --TTP#12554
							WHERE
								1 = 1
								AND(
								CASE WHEN CCN_DATA.CLAIM_TYPE = 'EXTD PURCHASED LABOR'
									THEN 'EXTENDED PURCHASED LABOR'
									ELSE CCN_DATA.CLAIM_TYPE
								END) = RES_PCT.CLAIM_TYPE
								AND(
								CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
									THEN 'Y'
									ELSE 'N'
								END) = RES_PCT.CUST_CREDIT_CATG_CODE
								AND PRODGRP.PRODUCT_CATEGORY IS NOT NULL
					) A
					INNER JOIN
					FLN_RETROFIT_PROGRAM RP
					ON 1=1
					AND A.RETROFIT_ID = RP.RETRO_ID
				WHERE
					COUNTRY_INDICATOR IN('USA', 'CAN')
					--AND retrofit_id  in ('RTSVC010AEN','BCSVC02AEN')
					AND TRUNC(RP.RETRO_END_DATE) >=
					CASE WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
						THEN(LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 7)))
						ELSE TO_DATE(:PRMBRETROFIT_END_DATE, 'mm/dd/yyyy')
					END
					AND TRUNC(A.TRX_DATE) <
					CASE WHEN :SDO = 'Run for Retrofit End Date 6 Months Prior'
						THEN(LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE), - 1)) + 1)
						ELSE ADD_MONTHS(TO_DATE(:TRX_MONTH||'/1/'||:TRX_YEAR, 'MM/DD/YYYY'), 1)
					END
					AND(
					CASE        WHEN(A.BUSINESS_UNIT = 'CSD' OR A.BUSINESS_UNIT = 'CAN')
						THEN 'TCS' WHEN(A.BUSINESS_UNIT = 'GLUPG' OR A.BUSINESS_UNIT = 'RSCAN')
						THEN 'RS'
						ELSE NULL
					END) = :SYSTEM
				GROUP BY
					A.RETROFIT_ID
		) BB
		WHERE
		AA.RETROFIT_ID = BB.RETRO_ID
		--and  aa.RETROFIT_ID = cc.retro_id
	ORDER BY
		BB.RETROFIT_ID;
-- trx_year: 2015
-- trx_month: AUG
-- prmBRetrofitEndDate: 11/1/2010
-- system: TCS
-- sdo: "Use Entered Dates"
