SELECT DISTINCT
		CLAIM.CLAIM_NUMBER,
		SERIAL_NUMBER as STEP_NUMBER,
		EXPENSES.QUERY_SOURCE,
		EXPENSES.PART_NBR,
		EXPENSES.COST_CATEGORY,
		EXPENSES.GL_EXPENSE_STRING,
		EXPENSES.GL_EXPENSE_AMT,
		EXPENSES.GL_EXPENSE_CURR,
		CLAIM.TYPE as TAVANT_CLAIM_TYPE, -- used for claim_type
		CLAIM.COMMERCIAL_POLICY, -- used for claim_type
		CLAIMED_ITEM.ITEM_REF_INV_ITEM,
		CLAIM.FAILURE_DATE,
		INVENTORY_ITEM.SHIPMENT_DATE,
		INVENTORY_ITEM.DELIVERY_DATE AS START_DATE,
		SALES_ORDER.SALES_ORDER_NUMBER,
		SALES_ORDER.MFG,
		SALES_ORDER.ORIGINAL_SOURCE_ID,
		SIOP_SEGMENT1 as BUSINESS_UNIT, -- these don't look like r12 entities
		SIOP_SEGMENT2,
		SIOP_SEGMENT3,
		SIOP_SEGMENT4 as GL_ACCOUNT, -- these don't look like r12 accounts
		SIOP_SEGMENT5,
		SIOP_SEGMENT6 as MANF_PROD_CODE,
		LINE_ITEM_GROUP.APPLICABLE_POLICY,
		-- APPLICABLE_POLICY.POLICY_DEFINITION, -- *MULTIPLIER
		-- POLICY_DEFINITION.CODE, -- *MULTIPLIER
		-- POLICY_DEFINITION.DESCRIPTION, -- *MULTIPLIER
		-- POLICY_DEFINITION.PRIORITY, -- *MULTIPLIER
		--   policy.till_date, Policy till date is not showing correctly Mohit reviewed sql but needs to investigate further
		-- POLICY_DEFINITION.WARRANTY_TYPE, -- *MULTIPLIER (STANDARD/GOODWILL)
		-- POLICY_DEFINITION.MONTHS_FRM_DELIVERY, -- *MULTIPLIER
		-- POLICY_DEFINITION.MONTHS_FRM_SHIPMENT, -- *MULTIPLIER
		-- POLICY_DEFINITION.TRUE_COVERAGE_MONTHS, -- *MULTIPLIER
		COMP_OWN.COMP_OWN
	FROM
		CLAIM
	INNER JOIN CLAIMED_ITEM      ON CLAIM.ID = CLAIMED_ITEM.CLAIM
	INNER JOIN INVENTORY_ITEM    ON CLAIMED_ITEM.ITEM_REF_INV_ITEM = INVENTORY_ITEM.ID
	INNER JOIN ITEM              ON ITEM.ID = INVENTORY_ITEM.OF_TYPE
	INNER JOIN SALES_ORDER       ON INVENTORY_ITEM.FOR_SALES_ORDER = SALES_ORDER.ID
	INNER JOIN WARRANTY          ON WARRANTY.FOR_ITEM = INVENTORY_ITEM.ID
	INNER JOIN PAYMENT           ON CLAIM.PAYMENT = PAYMENT.ID
	INNER JOIN LINE_ITEM_GROUPS  ON PAYMENT.ID = LINE_ITEM_GROUPS.FOR_PAYMENT
	INNER JOIN LINE_ITEM_GROUP   ON LINE_ITEM_GROUPS.LINE_ITEM_GROUPS = LINE_ITEM_GROUP.ID
	-- INNER JOIN APPLICABLE_POLICY ON LINE_ITEM_GROUP.APPLICABLE_POLICY = APPLICABLE_POLICY.ID -- LINE_ITEM_GROUP.APPLICABLE_POLICY can be null
	INNER JOIN POLICY            ON WARRANTY.ID = POLICY.WARRANTY
	-- INNER JOIN POLICY_DEFINITION ON APPLICABLE_POLICY.POLICY_DEFINITION = POLICY_DEFINITION.ID
	LEFT OUTER JOIN 
		(SELECT DISTINCT DECODE(INSTR(UPPER(DG.NAME), 'INDEPENDENT'), 0, 'YES', 'NO') COMP_OWN, C.CLAIM_NUMBER FROM CLAIM C
				INNER JOIN SERVICE_PROVIDER SP  ON C.FOR_DEALER = SP.ID
				INNER JOIN DEALERS_IN_GROUP DIG ON DIG.DEALER = SP.ID
				INNER JOIN DEALER_GROUP DG      ON DIG.DEALER_GROUP = DG.ID
		)
		COMP_OWN ON COMP_OWN.CLAIM_NUMBER = CLAIM.CLAIM_NUMBER
	INNER JOIN (
		--Expense Query For Parts:
		--r12 GL String Parts: ENTITY.LOCATION.COSTCENTER.ACCOUNT.R12PRODUCTCODE.INTERCOMPANY
		SELECT
				C.CLAIM_NUMBER,
				'OEM' AS QUERY_SOURCE,
				I.ITEM_NUMBER AS PART_NBR,
				LIG.NAME AS COST_CATEGORY, --formerly expense type
				PPI.GL_CODE_COGS_REVERSAL AS GL_COGS_REVERSAL_STRING,
				PPI.GL_CODE_REVENUE_REVERSAL AS GL_REV_REVERSAL_STRING,
				PPI.GL_CODE_WNTY_EXPENSE_REV AS GL_EXPENSE_STRING,
				-- GL_ACCOUNT is Segment4 of the GL_EXPENSE_STRING
				PPI.GL_COGS_AMT,
				PPI.GL_COGS_CURR AS GL_COGS_CURRENCY,
				PPI.GL_REVENUE_AMT,
				PPI.GL_REVENUE_CURR,
				PPI.GL_EXPENSE_AMT,
				PPI.GL_EXPENSE_CURR
			FROM
				CLAIM C
			INNER JOIN PAYMENT P             ON C.PAYMENT = P.ID
			INNER JOIN LINE_ITEM_GROUPS LIGS ON P.ID = LIGS.FOR_PAYMENT
			INNER JOIN LINE_ITEM_GROUP LIG   ON LIGS.LINE_ITEM_GROUPS = LIG.ID
			INNER JOIN CURRENT_PART_INFO CPI ON LIG.ID = CPI.LINE_ITEM_GROUP
			INNER JOIN PART_PAYMENT_INFO PPI ON CPI.CURRENT_PART_PAYMENT_INFO = PPI.ID --NOTE: If modifier is not picked, PART_PAYMENT_INFO_MODIFIER table will be empty.
			INNER JOIN ITEM I                ON I.ID = PPI.ITEM 
		-- do we need an outer join here?
		
		UNION ALL
		
		--Expense Query  for Cost Categories labor, non oem parts, travel, etc, everything but OEM parts
		SELECT DISTINCT
				C.CLAIM_NUMBER,
				'NON-OEM' AS QUERY_SOURCE,
				NULL AS ITEM_NUMBER,
				LIG.NAME AS COST_CATEGORY, --formerly expense type
				NULL AS GL_COGS_REVERSAL_STRING,
				NULL AS GL_REV_REVERSAL_STRING,
				LIG.GL_CODE_WNTY_EXPENSE_REV AS GL_EXPENSE_STRING,
				-- GL_ACCOUNT is Segment4 of the GL_EXPENSE_STRING
				NULL AS GL_COGS_AMT,
				NULL AS GL_COGS_CURRENCY,
				NULL AS GL_REVENUE_AMT,
				NULL AS GL_REVENUE_CURR,
				LIG.GL_AMT AS EXPENSE_AMOUNT,
				LIG.GL_CURR AS EXPENSE_CURRENCY
			FROM
				CLAIM C
			INNER JOIN PAYMENT P             ON C.PAYMENT = P.ID
			INNER JOIN LINE_ITEM_GROUPS LIGS ON P.ID = LIGS.FOR_PAYMENT
			INNER JOIN LINE_ITEM_GROUP LIG   ON LIGS.LINE_ITEM_GROUPS = LIG.ID
			WHERE
				0 = 0
				AND LIG.NAME NOT IN('Oem Parts', 'Claim Amount')
				AND GL_CODE_WNTY_EXPENSE_REV IS NOT NULL 

	) EXPENSES
		ON EXPENSES.CLAIM_NUMBER = CLAIM.CLAIM_NUMBER
	WHERE
		0 = 0
		-- AND CLAIM.FILED_ON_DATE > '13-NOV-2016'
		--AND claim.business_unit_info = 'HVAC TCP' --Jean Skemp recommends using original source id insteal
		AND STATE = 'ACCEPTED_AND_CLOSED'
		AND ORIGINAL_SOURCE_ID IN('CS', 'GP')
		-- and claim.claim_number = 'C-10764292'
		--and inventory_item.serial_number like '11492KBA3R'
		--ORDER BY claim, serial_number, priority
AND CLAIM.CLAIM_NUMBER = 'C-10764198'
/*AND CLAIM.CLAIM_NUMBER IN (
'C-10763992',
'C-10764004',
'C-10764005',
'C-10764006',
'C-10764013',
'C-10764014',
'C-10764015',
'C-10764019',
'C-10764022',
'C-10764023',
'C-10764024',
'C-10764025',
'C-10764028',
'C-10764038',
'C-10764041',
'C-10764048',
'C-10764066',
'C-10764067',
'C-10764073',
'C-10764079',
'C-10764106',
'C-10764106_I',
'C-10764198',
'C-10764218',
'C-10764224',
'C-10764227',
'C-10764275',
'C-10764284',
'C-10764285',
'C-10764288',
'C-10764292',
'C-10764323_D',
'C-10764338',
'C-10764534') */
order by 1, 2, 3, 4, 5
;