/* YTD1 */
SELECT
  TRUNC(TO_DATE(TO_DATE('1-' ||:RunDate, 'dd-mon-yy')), 'YEAR') - 1 AS gl_BeginDate, 
  LAST_DAY(TO_DATE('1-' ||:RunDate, 'dd-mon-yy')) gl_End_Date,
  CASE
    WHEN sales.COUNTRY_INDICATOR IS NULL THEN begbalances.COUNTRY_INDICATOR
    ELSE sales.COUNTRY_INDICATOR
    END AS COUNTRY_INDICATOR, 
  CAST(begbalances.ACCOUNT AS NUMBER) ACCOUNT,
  CASE
    WHEN sales.DESCR IS NULL THEN begbalances.DESCR
    ELSE sales.DESCR
    END AS GL_ACC_DESCR, 
  (NVL(begbalances.begbal_base, 0)) * - 1 AS Begning_Balance, 
  (NVL(perioddata.EndBal_base, 0)) * - 1 AS END_Blance,
  CASE
    WHEN sales.REVENUE_AMOUNT IS NULL THEN 0
    ELSE sales.REVENUE_AMOUNT
    END AS REVENUE_AMOUNT, 
  NVL(rev.DEFERRED_REVENUE, 0) AS DEFERRED_REVENUE, 
  NVL(rev.SHORT_TERM_BALA, 0) AS SHORT_TERM_BALA, 
  NVL(rev.LONG_TERM_BALA, 0) AS LONG_TERM_BALA
FROM
-- BEGBALANCES
(
  SELECT
    AFU.R12_ACCOUNT AS ACCOUNT,
    GL_LEDGERS.LEDGER_ID AS LEDGER,
    GL_BALANCES.PERIOD_NAME AS FISCAL_YEAR,
    CASE
      WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
      WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
      END AS COUNTRY_INDICATOR,
    SUM(DECODE(GL_BALANCES.PERIOD_NAME, 'Jan' || SUBSTR(:RunDate, 4, 3), GL_BALANCES.BEGIN_BALANCE_DR - GL_BALANCES.BEGIN_BALANCE_CR, 0)) AS BEGBAL_BASE,
    AFU.DESCR || ' - (R12 A/C : ' || GL_CODE_COMBINATIONS.SEGMENT4 ||'-' || GL_LEDGERS.NAME || ')' AS DESCR
    
  FROM SY_120_GL_LEDGERS_EW GL_LEDGERS
  INNER JOIN SY_120_GL_BALANCES_EW GL_BALANCES
    ON GL_LEDGERS.LEDGER_ID = GL_BALANCES.LEDGER_ID
  INNER JOIN SY_120_GL_CODE_COMBO_EW GL_CODE_COMBINATIONS
    ON GL_CODE_COMBINATIONS.CODE_COMBINATION_ID = GL_BALANCES.CODE_COMBINATION_ID
  RIGHT OUTER JOIN R12_ACCOUNT_FILTER_UPD AFU
    ON AFU.R12_ACCOUNT = GL_CODE_COMBINATIONS.SEGMENT4
    
  WHERE GL_BALANCES.PERIOD_NAME = 'Jan' || SUBSTR(:RunDate, 4, 3)
  AND CASE
    WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
    ELSE 'CAN'
    END = UPPER(:COUNTRY)
  AND GL_LEDGERS.LEDGER_ID IN('2022', '2041')
  AND GL_BALANCES.ACTUAL_FLAG = 'A'
  AND AFU.LIKE_52_53_54 = 'Y' 
    
  GROUP BY
    AFU.R12_ACCOUNT, 
    GL_LEDGERS.LEDGER_ID, GL_BALANCES.PERIOD_NAME,
    CASE
      WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
      WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
      END,
    AFU.DESCR || ' - (R12 A/C : ' || GL_CODE_COMBINATIONS.SEGMENT4 ||'-' || GL_LEDGERS.NAME || ')'
    
) begbalances

LEFT OUTER JOIN
-- perioddata
(
  SELECT
    AFU.R12_ACCOUNT AS ACCOUNT, 
    gl_ledgers.ledger_id AS ledger, gl_balances.period_name AS fiscal_year,
    CASE
      WHEN gl_ledgers.ledger_id = '2022' THEN 'USA'
      WHEN gl_ledgers.ledger_id = '2041' THEN 'CAN'
      END AS COUNTRY_INDICATOR, 
    NVL(SUM(gl_balances.begin_balance_dr + gl_balances.period_net_dr - gl_balances.begin_balance_cr - gl_balances.period_net_cr), 0) AS EndBal_base,
    AFU.DESCR ||' - (R12 A/C : ' ||gl_code_combinations.segment4 ||'-' ||gl_ledgers.name ||')' AS DESCR
    
  FROM SY_120_GL_LEDGERS_EW gl_ledgers
  INNER JOIN SY_120_GL_BALANCES_EW gl_balances
    ON gl_balances.ledger_id = gl_ledgers.ledger_id
  INNER JOIN SY_120_GL_CODE_COMBO_EW gl_code_combinations
    ON gl_balances.code_combination_id = gl_code_combinations.code_combination_id
  RIGHT OUTER JOIN R12_ACCOUNT_FILTER_UPD AFU
    ON AFU.R12_ACCOUNT = GL_CODE_COMBINATIONS.SEGMENT4

  WHERE GL_BALANCES.PERIOD_NAME = :RunDate
  AND CASE
    WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
    ELSE 'CAN'
    END = UPPER(:COUNTRY)
  AND GL_LEDGERS.LEDGER_ID IN('2022', '2041')
  AND GL_BALANCES.ACTUAL_FLAG = 'A'
  AND AFU.LIKE_52_53_54 = 'Y' 
    
  GROUP BY 
    AFU.R12_ACCOUNT, 
    GL_LEDGERS.LEDGER_ID,
    GL_BALANCES.PERIOD_NAME,
    CASE
      WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
      WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
      END, 
    AFU.DESCR || ' - (R12 A/C : ' || GL_CODE_COMBINATIONS.SEGMENT4 ||'-' || GL_LEDGERS.NAME || ')'
    
) PERIODDATA
  ON BEGBALANCES.ACCOUNT = PERIODDATA.ACCOUNT
  AND BEGBALANCES.FISCAL_YEAR = PERIODDATA.FISCAL_YEAR
  AND BEGBALANCES.LEDGER = PERIODDATA.LEDGER

LEFT OUTER JOIN
-- sales
(
  SELECT
    CASE
      WHEN A.R12_ENTITY IN('5773', '5588') THEN 'CAN'
      ELSE 'USA'
      END AS COUNTRY_INDICATOR,
    A.R12_ACCOUNT Account, 
    AFU.DESCR, 
    SUM(A.MONETARY_AMOUNT * - 1) AS REVENUE_AMOUNT
    
  FROM R12_BI_ACCT_ENTRY_PSB A
  INNER JOIN R12_TRNBI_BI_HDR_PSB B
    ON A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.INVOICE = B.INVOICE AND A.CUSTOMER_TRX_ID = B.CUSTOMER_TRX_ID
  INNER JOIN R12_BI_HDR_PSB C
    ON B.BUSINESS_UNIT = C.PS_BUSINESS_UNIT
  AND B.INVOICE = C.INVOICE AND B.CUSTOMER_TRX_ID = C.CUSTOMER_TRX_ID
  INNER JOIN R12_ACCOUNT_FILTER_UPD AFU
    ON AFU.R12_ACCOUNT = A.R12_ACCOUNT
  
  WHERE A.JOURNAL_DATE >= TRUNC(TO_DATE(TO_DATE('1-'||:RunDate, 'dd-mon-yy')), 'YEAR')
  AND A.JOURNAL_DATE <= LAST_DAY(TO_DATE('1-'||:RunDate, 'dd-mon-yy'))
  AND A.R12_ENTITY IN ('5773', '5588', '5575', '5612', '5743', '9256', '9258', '9298', '9299', '9984')
  AND CASE
    WHEN A.R12_ENTITY IN('5773', '5588') THEN 'CAN'
    ELSE 'USA'
    END = UPPER(:COUNTRY)
  AND C.ENTRY_TYPE = 'IN'
  AND AFU.LIKE_5 = 'Y'
  GROUP BY A.R12_ACCOUNT, A.r12_entity, A.PS_ACCOUNT, 
  AFU.DESCR 
    
) SALES
  ON BEGBALANCES.ACCOUNT = SALES.ACCOUNT

LEFT OUTER JOIN
-- REV
(
  SELECT B.gl_account AS account,
    B.GL_ACCOUNT_DESCR AS DESCRIPTION,
    SUM(B.DEFERRED_REVENUE) AS DEFERRED_REVENUE,
    SUM(B.SHORT_TERM_REVENUE) AS SHORT_TERM_BALA,
    SUM(LONG_TERM_REVENUE) AS LONG_TERM_BALA

  FROM (
    SELECT A.GL_ACCOUNT,
      A.GL_ACCOUNT_DESCR,
      TO_DATE('1-'||:RunDate, 'dd-mon-yy'),
      CASE
        WHEN TRUNC(TO_DATE(TO_DATE('1-'||:RunDate, 'dd-mon-yy')), 'YEAR') = TO_DATE('1-'||:RunDate, 'dd-mon-yy') THEN CASE
          WHEN A.FORECAST_PERIOD = TO_DATE('1-'||:RunDate, 'dd-mon-yy') THEN MAX(A.DEFERRED_REVENUE)
          ELSE 0
          END
        ELSE(MAX(A.REC_REV_MNTHLY) + CASE
          WHEN A.FORECAST_PERIOD = TO_DATE('1-'||:RunDate, 'dd-mon-yy') THEN MAX(A.DEFERRED_REVENUE)
          ELSE 0
          END)
        END AS DEFERRED_REVENUE,
      MAX(a.SHORT_TERM_DR) AS SHORT_TERM_REVENUE,
      MAX(a.LONG_TERM_DR) AS LONG_TERM_REVENUE,
      A.FORECAST_PERIOD
      
    FROM DW_DM_030_REV_RELEASE a
    INNER JOIN R12_ACCOUNT_FILTER_UPD AFU
      ON AFU.R12_ACCOUNT = A.GL_ACCOUNT 

    WHERE 1=1
    AND A.COUNTRY_INDICATOR = UPPER(:COUNTRY)
    AND A.RUN_PERIOD >= TO_DATE('1-'||:RunDate, 'dd-mon-yy')
    AND A.RUN_PERIOD < ADD_MONTHS(TO_DATE('1-'||:RunDate, 'dd-mon-yy'), 1)
    AND AFU.LIKE_5 = 'Y'
    AND A.SHIP_PERIOD >= CASE
      WHEN TO_DATE('1-'||:RunDate, 'dd-mon-yy') = TRUNC(TO_DATE(TO_DATE('1-'||:RunDate, 'dd-mon-yy')), 'YEAR')
        THEN TRUNC(TRUNC(TO_DATE('1-'||:RunDate, 'dd-mon-yy'), 'YEAR') - 1) - 30
      ELSE TRUNC(TO_DATE(TO_DATE('1-'||:RunDate, 'dd-mon-yy')), 'YEAR')
      END
    AND A.SHIP_PERIOD <(TO_DATE('1-'||:RunDate, 'dd-mon-yy'))

    GROUP BY A.GL_ACCOUNT, 
      A.GL_ACCOUNT_DESCR, 
      A.FORECAST_PERIOD

  ) B

  GROUP BY B.GL_ACCOUNT,
    B.GL_ACCOUNT_DESCR

) REV 
  ON BEGBALANCES.ACCOUNT = REV.ACCOUNT

UNION

SELECT
  ADD_MONTHS(((LAST_DAY(TO_DATE('1-'||:RunDate, 'dd-mon-yy')))), - 1) AS gl_BeginDate,
  LAST_DAY(TO_DATE('1-'||:RunDate, 'dd-mon-yy')) gl_End_Date,
  '' AS COUNTRY_INDICATOR,
  CAST(AFU.R12_ACCOUNT AS NUMBER) AS ACCOUNT, 
  AFU.DESCR AS GL_ACCOUNT_DESCR, 
  0 AS BEGNING_BALANCE,
  0 AS END_BLANCE,
  0 AS REVENUE_AMOUNT,
  0 AS DEFERRED_REVENUE,
  0 AS SHORT_TERM_BALA,
  0 AS LONG_TERM_BALA
  
FROM
R12_ACCOUNT_FILTER_UPD AFU

WHERE 1=1
AND AFU.LIKE_5 = 'Y'
AND NOT EXISTS (
  SELECT 'x'
    
  FROM SY_120_GL_LEDGERS_EW GL_LEDGERS
  INNER JOIN SY_120_GL_BALANCES_EW GL_BALANCES
    ON GL_BALANCES.LEDGER_ID = GL_LEDGERS.LEDGER_ID
  INNER JOIN SY_120_GL_CODE_COMBO_EW GL_CODE_COMBINATIONS
    ON GL_BALANCES.CODE_COMBINATION_ID = GL_CODE_COMBINATIONS.CODE_COMBINATION_ID
    
  WHERE GL_BALANCES.PERIOD_NAME = :RunDate
  AND CASE
    WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
    ELSE 'CAN'
    END = UPPER(:COUNTRY)
  AND GL_LEDGERS.LEDGER_ID IN('2022', '2041')
  AND GL_BALANCES.ACTUAL_FLAG = 'A'
  AND GL_CODE_COMBINATIONS.SEGMENT2 IN('113602', '129003') -- R12_LOCATION (DEPT LIKE 'SL00%' AND BU IN ('CAN', 'CSD'))
  AND GL_CODE_COMBINATIONS.SEGMENT1 IN('5773', '5588', '5575', '5612', '5743', '9256', '9258', '9298', '9299', '9984') -- R12_ENTITY
  AND GL_CODE_COMBINATIONS.SEGMENT4 = AFU.R12_ACCOUNT 
    
  GROUP BY
  AFU.R12_ACCOUNT, 
  AFU.DESCR, 
  GL_BALANCES.PERIOD_NAME,
  GL_LEDGERS.LEDGER_ID,
  CASE
    WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
    WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
    END
  )