/* EXTENDED WARRANTY MTD QUERY  MTD2*/
SELECT
  /*+ FIRST_ROWS */
  ADD_MONTHS((LAST_DAY(to_date('1-'||:RunDate, 'dd-mon-yy'))), - 1) AS gl_BeginDate,
  LAST_DAY(to_date('1-'||:RunDate, 'dd-mon-yy')) GL_END_DATE,
  BEGBALANCES.COUNTRY_INDICATOR AS COUNTRY_INDICATOR,
  CAST(BEGBALANCES.ACCOUNT AS NUMBER) ACCOUNT,
  NVL(BEGBALANCES.BEGBAL_BASE, 0) AS BEGNING_BALANCE,
  NVL(ENDINGBALANCES.ENDBAL_BASE, 0) AS END_BLANCE

FROM (
  -- BEGBALANCES
  SELECT
    /*+ NO_CPU_COSTING */
    AFU.R12_ACCOUNT AS ACCOUNT, 
    GL_LEDGERS.LEDGER_ID AS LEDGER,
    GL_BALANCES.PERIOD_NAME AS FISCAL_YEAR,
    CASE
      WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
      WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
      END AS COUNTRY_INDICATOR,
    SUM(DECODE(GL_BALANCES.PERIOD_NAME, :RunDate, GL_BALANCES.BEGIN_BALANCE_DR - GL_BALANCES.BEGIN_BALANCE_CR, 0)) AS BEGBAL_BASE, 
    AFU.DESCR  || ' - (R12 A/C : ' || GL_CODE_COMBINATIONS.SEGMENT4 || '-' || GL_LEDGERS.NAME || ')' AS DESCR
    
  FROM SY_120_GL_LEDGERS_EW GL_LEDGERS
  INNER JOIN SY_120_GL_BALANCES_EW GL_BALANCES
    ON GL_BALANCES.LEDGER_ID = GL_LEDGERS.LEDGER_ID
  INNER JOIN SY_120_GL_CODE_COMBO_EW GL_CODE_COMBINATIONS
    ON GL_CODE_COMBINATIONS.CODE_COMBINATION_ID = GL_BALANCES.CODE_COMBINATION_ID
  RIGHT OUTER JOIN R12_ACCOUNT_FILTER_UPD AFU
    ON AFU.R12_ACCOUNT = GL_CODE_COMBINATIONS.SEGMENT4 

  WHERE GL_BALANCES.PERIOD_NAME = :RunDate
  AND GL_LEDGERS.LEDGER_ID IN('2022', '2041')
  AND CASE
    WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
    ELSE 'CAN'
    END = UPPER(:COUNTRY)
  AND GL_BALANCES.ACTUAL_FLAG = 'A'
  AND AFU.EQUAL_490650 = 'Y' 
  AND GL_CODE_COMBINATIONS.SEGMENT1 IN('5773', '9258') -- R12_ENTITY
  AND GL_CODE_COMBINATIONS.SEGMENT2 IN('119007', '129004') -- R12_LOCATION
  AND GL_CODE_COMBINATIONS.SEGMENT4 = '195462' -- R12_ACCOUNT (PS_ACCOUNT = '490650') 
    
  GROUP BY 
    AFU.R12_ACCOUNT, 
    GL_LEDGERS.LEDGER_ID,
    GL_BALANCES.PERIOD_NAME, 
    AFU.DESCR, 
    CASE
      WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
      WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
      END, 
    AFU.DESCR || ' - (R12 A/C : ' || GL_CODE_COMBINATIONS.SEGMENT4 || '-' || GL_LEDGERS.NAME || ')'

) BEGBALANCES

RIGHT OUTER JOIN (
  -- endingbalances
  SELECT
    /*+ NO_CPU_COSTING */
    AFU.R12_ACCOUNT AS ACCOUNT,
    GL_LEDGERS.LEDGER_ID AS LEDGER,
    GL_BALANCES.PERIOD_NAME AS FISCAL_YEAR,
    CASE
      WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
      WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
      END AS COUNTRY_INDICATOR,
    NVL(SUM(GL_BALANCES.BEGIN_BALANCE_DR + GL_BALANCES.PERIOD_NET_DR - GL_BALANCES.BEGIN_BALANCE_CR - GL_BALANCES.PERIOD_NET_CR), 0) AS ENDBAL_BASE, 
    AFU.DESCR || ' - (R12 A/C : ' || GL_CODE_COMBINATIONS.SEGMENT4 || '-' || GL_LEDGERS.NAME || ')' AS DESCR
    
  FROM SY_120_GL_LEDGERS_EW GL_LEDGERS
  INNER JOIN SY_120_GL_BALANCES_EW GL_BALANCES
    ON GL_BALANCES.LEDGER_ID = GL_LEDGERS.LEDGER_ID
  INNER JOIN SY_120_GL_CODE_COMBO_EW GL_CODE_COMBINATIONS
    ON GL_CODE_COMBINATIONS.CODE_COMBINATION_ID = GL_BALANCES.CODE_COMBINATION_ID
  RIGHT OUTER JOIN R12_ACCOUNT_FILTER_UPD AFU
    ON AFU.R12_ACCOUNT = GL_CODE_COMBINATIONS.SEGMENT4 

  WHERE GL_BALANCES.PERIOD_NAME = :RunDate
  AND CASE
    WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
    ELSE 'CAN'
    END = UPPER(:COUNTRY)
  AND GL_LEDGERS.LEDGER_ID IN('2022', '2041')
  AND GL_BALANCES.ACTUAL_FLAG = 'A'
  AND AFU.EQUAL_490650 = 'Y'
  AND GL_CODE_COMBINATIONS.SEGMENT1 IN('5773', '9258') -- R12_ENTITY
  AND GL_CODE_COMBINATIONS.SEGMENT2 IN('119007', '129004') -- R12_LOCATION
  AND GL_CODE_COMBINATIONS.SEGMENT4 = '195462' -- R12_ACCOUNT (PS_ACCOUNT = '490650')
    
  GROUP BY 
  AFU.R12_ACCOUNT, 
  GL_LEDGERS.LEDGER_ID,
  GL_BALANCES.PERIOD_NAME,
  CASE
    WHEN GL_LEDGERS.LEDGER_ID = '2022' THEN 'USA'
    WHEN GL_LEDGERS.LEDGER_ID = '2041' THEN 'CAN'
    END, 
    AFU.DESCR || ' - (R12 A/C : ' || GL_CODE_COMBINATIONS.SEGMENT4 || '-' || GL_LEDGERS.NAME || ')'

) ENDINGBALANCES
  ON BEGBALANCES.ACCOUNT = ENDINGBALANCES.ACCOUNT
  AND BEGBALANCES.FISCAL_YEAR = ENDINGBALANCES.FISCAL_YEAR
  AND BEGBALANCES.LEDGER = ENDINGBALANCES.LEDGER
  
GROUP BY
CAST(BEGBALANCES.ACCOUNT AS NUMBER),
BEGBALANCES.COUNTRY_INDICATOR,
BEGBALANCES.BEGBAL_BASE,
ENDINGBALANCES.ENDBAL_BASE
