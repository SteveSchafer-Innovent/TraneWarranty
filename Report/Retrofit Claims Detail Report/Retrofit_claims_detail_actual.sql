/* Retrofit Detail Claims Qry */
SELECT
		/*+  no_cpu_costing */
		CLAIM_NUMBER,
		STEP_NUMBER,
		BUSINESS_UNIT,
		CLAIM_TYPE,
		EXPENSE_AMOUNT,
		EXPENSE_AMOUNT * IN_RESERVE_PERCENT / 10000 AS EXPENSE_AMT_IN_RES,
		0 AS EXPENSE_AMOUNT_DEC,
		MATERIAL_LABOR,
		GL_ACCOUNT,
		EXPENSE_TYPE_DESCR,
		OFFICE_NAME,
		GL_PROD_CODE,
		MANF_PROD_CODE,
		COMPANY_OWNED,
		CUSTOMER_NUMBER,
		CUSTOMER_NAME,
		INTERNAL_EXTERNAL,
		TRX_DATE,
		TRX_YEAR,
		TRX_MONTH,
		INTMONTHS_TRX_TO_BASE,
		INTMONTHS_SHIP_TO_BASE,
		SHIP_DATE,
		SHIP_YEAR_MONTH,
		INTMONTHS_SHIP_TO_TRX,
		START_DATE,
		INTMONTHS_START_TO_TRX,
		FAIL_DATE,
		INTMONTHS_FAIL_TO_TRX,
		WARRANTY_TYPE,
		CURRENCY,
		COUNTRY_INDICATOR,
		RETROFIT_ID,
		NEW_RESOLVED_IND AS RETROFIT_NEW_RESOLVED_IND,
		GL_DEPT,
		IN_RESERVE_PERCENT / 10000 AS IN_RESERVE_PERCENT,
		NEW_RESOLVED_IND,
		TRX_LAG,
		TRXYEARMONTH,
		0 AS EXPENSE_AMT_NOT_IN_RES
	FROM
		(
			-- Retrofit Material - Falcon
			SELECT
					/*+  no_cpu_costing   no_expand cardinality ( MLR,500)  */
					'FM' AS QUERY_SOURCE,
					MLR.CLAIM_NBR AS CLAIM_NUMBER,
					MLR.STEP_NBR AS STEP_NUMBER,
					GLA.R12_ENTITY AS BUSINESS_UNIT,
					PRODGRP.PRODUCT_CATEGORY AS RESERVE_GROUP,
					CTYPES.CLAIM_TYPE_DESCR AS CLAIM_TYPE,
					SUM(MLR.EXP_TYPE_AMOUNT * - 1) AS EXPENSE_AMOUNT,
					SUM(100 *(MLR.EXP_TYPE_AMOUNT * - 1 - TRUNC(MLR.EXP_TYPE_AMOUNT * - 1))) AS EXPENSE_AMOUNT_DEC,
					RES_PCT.EXPENSE_TYPE_CATG AS MATERIAL_LABOR,
					GLA.R12_ACCOUNT AS GL_ACCOUNT,
					ETS.EXPENSE_TYPE_DESCR AS EXPENSE_TYPE_DESCR,
					SOS.SUBMIT_OFFICE_NAME AS OFFICE_NAME,
					CASE
						WHEN GLA.R12_PRODUCT IS NULL OR GLA.R12_PRODUCT = '' THEN PCS.PROD_CODE
						ELSE GLA.R12_PRODUCT
						END AS GL_PROD_CODE,
					PCS.PROD_CODE AS MANF_PROD_CODE,
					SOS.COMPANY_OWNED_IND AS COMPANY_OWNED,
					CACCT.ACCOUNT_NUMBER AS CUSTOMER_NUMBER,
					CACCT.CUST_ACCT_NAME AS CUSTOMER_NAME,
					CASE
						WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1' THEN 'Y'
						ELSE 'N'
						END AS INTERNAL_EXTERNAL,
					TD3.FULL_DATE AS TRX_DATE,
					TO_CHAR(TD3.YEAR) AS TRX_YEAR,
					TO_CHAR(TD3.MONTH) AS TRX_MONTH,
					CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_TRX_TO_BASE,
					CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_SHIP_TO_BASE,
					TD2.FULL_DATE AS SHIP_DATE,
					TD2.YEAR * 100 + TD2.MONTH AS SHIP_YEAR_MONTH,
					CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1 AS INTMONTHS_SHIP_TO_TRX,
					TD.FULL_DATE AS START_DATE,
					(TD3.TIME_KEY - TD.TIME_KEY) / 30.42 AS INTMONTHS_START_TO_TRX,
					TD1.FULL_DATE AS FAIL_DATE,
					(TD3.TIME_KEY - TD1.TIME_KEY) / 30.42 AS INTMONTHS_FAIL_TO_TRX,
					CASE
						WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL THEN 'NO'
						ELSE FCW.WA_POLICY_TYPE
						END AS WARRANTY_TYPE,
					CASE
						WHEN FCW.WA_RANGE = '1' THEN '1st Year Standard Warranty'
						WHEN FCW.WA_RANGE = '2' THEN '2nd-5th Year Standard Warranty'
						WHEN FCW.WA_RANGE = '5' THEN '> 5th Year Standard Warranty'
						ELSE 'Out of Standard Warranty'
						END AS WARRANTY_DURATION,
					MLR.TRX_CURRENCY AS CURRENCY,
					CASE
						WHEN GLA.R12_ENTITY IN('5773', '5588') THEN 'CAN'
						ELSE 'USA'
						END AS COUNTRY_INDICATOR,
					MLR.RETRO_ID AS RETROFIT_ID,
					GLA.R12_COST_CENTER AS GL_DEPT,
					CASE
						WHEN A.CLAIM_NUMBER IS NULL THEN 10000 *
							( CASE
								WHEN (PCS.PROD_CODE IN('0054', '0197')) OR (RD.NEW_RESOLVED_IND = 'R' AND RD.SPECIFIC_RESERVE_IND = 'Y' OR RD.PCT_100_RECOVERY_IND = 'Y') 
									THEN 0
								ELSE RES_PCT.RESERVE_PCT
								END
							)
						ELSE RES_PCT1.RESERVE_PCT
					END AS IN_RESERVE_PERCENT,
					RD.NEW_RESOLVED_IND,
					ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42) AS TRX_LAG,
					100 * TD3.YEAR + TD3.MONTH AS TRXYEARMONTH,
					0 AS EXPENSE_AMT_IN_RES,
					0 AS EXPENSE_AMT_NOT_IN_RES
				FROM
					WC_MAT_LBR_ROLLUP MLR
				INNER JOIN EXPENSE_TYPE_SCD ET                 ON MLR.EXPENSE_TYPE_SCD_KEY = ET.EXPENSE_TYPE_SCD_KEY
				LEFT OUTER JOIN DM_FAL_CLAIMS_WARRANTY_XRF FCW ON MLR.CLAIM_NBR = FCW.CLAIM_NBR AND MLR.DETAIL_NBR = FCW.DETAIL_NBR AND MLR.STEP_NBR = FCW.STEP_NBR
				INNER JOIN TIME_DAY TD3                        ON MLR.CCN_TRX_DATE_KEY = TD3.TIME_KEY
				INNER JOIN TIME_DAY TD2                        ON MLR.ORIGINAL_SHIP_DATE_KEY = TD2.TIME_KEY
				INNER JOIN TIME_DAY TD1                        ON MLR.FAIL_DATE_KEY = TD1.TIME_KEY
				INNER JOIN TIME_DAY TD                         ON MLR.START_DATE_KEY = TD.TIME_KEY
				INNER JOIN CLAIM_TASK_SCD CTASKS               ON MLR.CLAIM_TASK_SCD_KEY = CTASKS.CLAIM_TASK_SCD_KEY
				INNER JOIN CLAIM_TYPE_SCD CTYPES               ON MLR.CLAIM_TYPE_SCD_KEY = CTYPES.CLAIM_TYPE_SCD_KEY
				INNER JOIN R12_GL_ACCOUNT_SCD GLA              ON MLR.GL_ACCOUNT_SCD_KEY = GLA.GL_ACCOUNT_SCD_KEY
				INNER JOIN EXPENSE_TYPE_SCD ETS                ON MLR.EXPENSE_TYPE_SCD_KEY = ETS.EXPENSE_TYPE_SCD_KEY
				INNER JOIN PROD_CODE_SCD PCS                   ON MLR.PROD_CODE_SCD_KEY = PCS.PROD_CODE_SCD_KEY
				INNER JOIN CUST_ACCOUNT_SCD CACCT              ON MLR.CUST_ACCOUNT_SCD_KEY = CACCT.CUST_ACCOUNT_SCD_KEY
				INNER JOIN SUBMIT_OFFICE_SCD SOS               ON MLR.SUBMIT_OFFICE_SCD_KEY = SOS.SUBMIT_OFFICE_SCD_KEY
				INNER JOIN PROD_CODE_XREF_RCPO_DR PRODGRP      ON 1 = 1
					AND GLA.PS_COMPANY = PRODGRP.GL_LEDGER
					AND PCS.PROD_CODE = PRODGRP.MANF_PROD_CODE
					AND PRODGRP.PRODUCT_CATEGORY IS NOT NULL
				INNER JOIN UD_031_RETROFIT_RULES RES_PCT       ON CTYPES.CLAIM_TYPE_DESCR = RES_PCT.CLAIM_TYPE AND ETS.EXPENSE_TYPE_DESCR = RES_PCT.EXPENSE_TYPE_DESCR AND SOS.COMPANY_OWNED_IND = RES_PCT.COMPANY_OWNED_IND
				INNER JOIN UD_031_RETROFIT_ID RD               ON MLR.RETRO_ID = RD.RETROFIT_ID
				LEFT OUTER JOIN R12_ACCOUNT_FILTER_UPD AFU     ON AFU.R12_ACCOUNT = GLA.R12_ACCOUNT
				LEFT OUTER JOIN UD_031_STDWTY_RSV_CLM_ADJ A    ON MLR.CLAIM_NBR = A.CLAIM_NUMBER
				LEFT OUTER JOIN UD_031_RETROFIT_RULES RES_PCT1 ON A.CLAIM_TYPE = RES_PCT1.CLAIM_TYPE
				WHERE
					MLR.CLAIM_TYPE_SCD_KEY = 3
					AND CASE
						WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1' THEN 'Y'
						ELSE 'N'
						END = RES_PCT.CUST_CREDIT_CATG_CODE
					AND ((GLA.PS_ACCOUNT = 'NA' AND AFU.STANDARD_WARRANTY_EXPENSE = 'Y')
					OR GLA.PS_ACCOUNT LIKE '0620%'
					OR GLA.PS_ACCOUNT LIKE '8062%')
					AND TD3.FULL_DATE >= TO_DATE('1/1/2001', 'MM/DD/YYYY')
					AND TD3.FULL_DATE <= TO_DATE('12/31/2050', 'MM/DD/YYYY')
					-- AND MLR.CLAIM_NBR IN('4410816', '4496418')
				GROUP BY
					MLR.CLAIM_NBR,
					MLR.STEP_NBR,
					GLA.R12_ENTITY,
					PRODGRP.PRODUCT_CATEGORY,
					CTYPES.CLAIM_TYPE_DESCR,
					RES_PCT.EXPENSE_TYPE_CATG,
					GLA.R12_ACCOUNT,
					ETS.EXPENSE_TYPE_DESCR,
					SOS.SUBMIT_OFFICE_NAME,
					GLA.R12_PRODUCT,
					PCS.PROD_CODE,
					SOS.COMPANY_OWNED_IND,
					CACCT.ACCOUNT_NUMBER,
					CACCT.CUST_ACCT_NAME,
					CASE
						WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1' THEN 'Y'
						ELSE 'N'
						END,
					TD3.FULL_DATE,
					TO_CHAR(TD3.YEAR),
					TO_CHAR(TD3.MONTH),
					CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1,
					CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1,
					TD2.FULL_DATE,
					TD2.YEAR * 100 + TD2.MONTH,
					CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1,
					TD.FULL_DATE,
					(TD3.TIME_KEY - TD.TIME_KEY) / 30.42,
					TD1.FULL_DATE,
					(TD3.TIME_KEY - TD1.TIME_KEY) / 30.42,
					CASE
						WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL THEN 'NO'
						ELSE FCW.WA_POLICY_TYPE
						END,
					CASE
						WHEN FCW.WA_RANGE = '1' THEN '1st Year Standard Warranty'
						WHEN FCW.WA_RANGE = '2' THEN '2nd-5th Year Standard Warranty'
						WHEN FCW.WA_RANGE = '5' THEN '> 5th Year Standard Warranty'
						ELSE 'Out of Standard Warranty'
						END,
					MLR.TRX_CURRENCY,
					CASE
						WHEN GLA.R12_ENTITY IN('5773', '5588') THEN 'CAN'
						ELSE 'USA'
						END,
					MLR.RETRO_ID,
					GLA.R12_COST_CENTER,
					CASE
						WHEN A.CLAIM_NUMBER IS NULL THEN 10000 *( CASE
							WHEN (PCS.PROD_CODE IN('0054', '0197')) OR (RD.NEW_RESOLVED_IND = 'R' AND RD.SPECIFIC_RESERVE_IND = 'Y' OR RD.PCT_100_RECOVERY_IND = 'Y') THEN 0
							ELSE RES_PCT.RESERVE_PCT
							END)
						ELSE RES_PCT1.RESERVE_PCT
						END,
					RD.NEW_RESOLVED_IND,
					ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42),
					100 * TD3.YEAR + TD3.MONTH
			UNION ALL
			-- Retrofit Material - Tavant
			SELECT
					'TM' AS QUERY_SOURCE,
					SUBSTR(STG.CLAIM_NUMBER, 3) * -1,
					0 AS STEP_NUMBER,
					STG.BUSINESS_UNIT,
					STG.RESERVE_GROUP,
					STG.CLAIM_TYPE,
					STG.EXPENSE_AMOUNT,
					STG.EXPENSE_AMOUNT_DEC,
					STG.MATERIAL_LABOR,
					STG.GL_ACCOUNT,
					STG.EXPENSE_TYPE_DESCR,
					STG.OFFICE_NAME,
					STG.GL_PROD_CODE,
					STG.MANF_PROD_CODE,
					STG.COMPANY_OWNED,
					STG.CUSTOMER_NUMBER,
					STG.CUSTOMER_NAME,
					STG.INTERNAL_EXTERNAL,
					STG.TRX_DATE,
					STG.TRX_YEAR,
					STG.TRX_MONTH,
					STG.INTMONTHS_TRX_TO_BASE,
					STG.INTMONTHS_SHIP_TO_BASE,
					STG.SHIP_DATE,
					STG.SHIP_YEAR_MONTH,
					STG.INTMONTHS_SHIP_TO_TRX,
					STG.START_DATE,
					STG.INTMONTHS_START_TO_TRX,
					STG.FAIL_DATE,
					STG.INTMONTHS_FAIL_TO_TRX,
					STG.WARRANTY_TYPE,
					STG.WARRANTY_DURATION,
					STG.CURRENCY,
					STG.COUNTRY_INDICATOR,
					STG.RETROFIT_ID,
					STG.GL_LOCATION AS GL_DEPT,
					STG.IN_RESERVE_PERCENT,
					RD.NEW_RESOLVED_IND,
					STG.TRX_LAG,
					STG.TRXYEARMONTH,
					STG.EXPENSE_AMT_IN_RES,
					STG.EXPENSE_AMT_NOT_IN_RES
				FROM TAV_STG STG
				INNER JOIN UD_031_RETROFIT_ID RD ON RD.RETROFIT_ID = STG.RETROFIT_ID
				INNER JOIN R12_ACCOUNT_FILTER_UPD AFU ON STG.GL_ACCOUNT = AFU.R12_ACCOUNT
				WHERE 0 = 0
					AND AFU.STANDARD_WARRANTY_EXPENSE = 'Y'
					AND Upper(CLAIM_TYPE) = 'RETROFIT MATERIAL'
			UNION ALL
			-- Retrofit Labor - Falcon
			SELECT
					/*+  no_cpu_costing   no_expand cardinality ( CCN_DATA,500)  */
					'FL' AS QUERY_SOURCE,
					CCN_DATA.CLAIM_NBR AS CLAIM_NUMBER,
					CCN_DATA.STEP_NBR AS STEP_NUMBER,
					GLA.R12_ENTITY AS BUSINESS_UNIT,
					PRODGRP.PRODUCT_CATEGORY AS RESERVE_GROUP,
					CCN_DATA.CLAIM_TYPE AS CLAIM_TYPE,
					CCN_DATA.DOLLAR_AMOUNT AS EXPENSE_AMOUNT,
					100 *(CCN_DATA.DOLLAR_AMOUNT - TRUNC(CCN_DATA.DOLLAR_AMOUNT)) AS EXPENSE_AMOUNT_DEC,
					CCN_DATA.EXPENSE_TYPE_CATG AS MATERIAL_LABOR,
					GLA.R12_ACCOUNT AS GL_ACCOUNT,
					CCN_DATA.EXPENSE_TYPE_DESCR AS EXPENSE_TYPE_DESCR,
					SOS.SUBMIT_OFFICE_NAME AS OFFICE_NAME,
					CASE
						WHEN GLA.R12_PRODUCT IS NULL OR GLA.R12_PRODUCT = '' THEN PCS.PROD_CODE
						ELSE GLA.R12_PRODUCT
						END AS GL_PROD_CODE,
					PCS.PROD_CODE AS MANF_PROD_CODE,
					SOS.COMPANY_OWNED_IND AS COMPANY_OWNED,
					CACCT.ACCOUNT_NUMBER AS CUSTOMER_NUMBER,
					CACCT.CUST_ACCT_NAME AS CUSTOMER_NAME,
					CASE
						WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1' THEN 'Y'
						ELSE 'N'
						END AS INTERNAL_EXTERNAL,
					TD3.FULL_DATE AS TRX_DATE,
					TO_CHAR(TD3.YEAR) AS TRX_YEAR,
					TO_CHAR(TD3.MONTH) AS TRX_MONTH,
					CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_TRX_TO_BASE,
					CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_SHIP_TO_BASE,
					TD2.FULL_DATE AS SHIP_DATE,
					TD2.YEAR * 100 + TD2.MONTH AS SHIP_YEAR_MONTH,
					CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1 AS INTMONTHS_SHIP_TO_TRX,
					TD.FULL_DATE AS START_DATE,
					(TD3.TIME_KEY - TD.TIME_KEY) / 30.42 AS INTMONTHS_START_TO_TRX,
					TD1.FULL_DATE AS FAIL_DATE,
					(TD3.TIME_KEY - TD1.TIME_KEY) / 30.42 AS INTMONTHS_FAIL_TO_TRX,
					CASE
						WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL THEN 'NO'
						ELSE FCW.WA_POLICY_TYPE
						END AS WARRANTY_TYPE,
					CASE
						WHEN CCN_DATA.CLAIM_TYPE = 'EXTD PURCHASED LABOR' THEN 'Out of Standard Warranty'
						ELSE CASE
							WHEN FCW.WA_RANGE = '1' THEN '1st Year Standard Warranty'
							WHEN FCW.WA_RANGE = '2' THEN '2nd-5th Year Standard Warranty'
							WHEN FCW.WA_RANGE = '5' THEN '> 5th Year Standard Warranty'
							ELSE 'Out of Standard Warranty'
							END
						END AS WARRANTY_DURATION,
					CCN_DATA.TRX_CURRENCY AS CURRENCY,
					CASE
						WHEN GLA.R12_ENTITY IN('5773', '5588') THEN 'CAN'
						ELSE 'USA'
						END AS COUNTRY_INDICATOR,
					CCN_DATA.RETRO_ID AS RETROFIT_ID,
					GLA.R12_COST_CENTER AS GL_DEPT,
					CASE
						WHEN A.CLAIM_NUMBER IS NULL THEN 10000 *( CASE
							WHEN (PCS.PROD_CODE IN('0054', '0197')) OR (RD.NEW_RESOLVED_IND = 'R' AND RD.SPECIFIC_RESERVE_IND = 'Y' OR RD.PCT_100_RECOVERY_IND = 'Y') THEN 0
							ELSE RES_PCT.RESERVE_PCT
							END)
						ELSE RES_PCT1.RESERVE_PCT
						END AS IN_RESERVE_PERCENT,
					RD.NEW_RESOLVED_IND,
					ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42) AS TRX_LAG,
					100 * TD3.YEAR + TD3.MONTH AS TRXYEARMONTH,
					0 AS EXPENSE_AMT_IN_RES,
					0 AS EXPENSE_AMT_NOT_IN_RES
				FROM
					(
						-- THIS IS THE CORE PORTION FOR  CLAIM TYPE TO RETRIEVE EXPENSE RELATED INFORMATION
						SELECT
								'SPD/Retrofit Labor/Extended Purchased Labor' AS TYPE,
								LR.CLAIM_NBR,
								LR.RETRO_ID,
								CT.CLAIM_TYPE_CODE AS CLAIM_TYPE,
								CASE
									WHEN EXPENSE_TYPE_SCD_KEY IN(58, 60, 61) THEN 'MATERIAL'
									ELSE 'LABOR'
									END AS EXPENSE_TYPE_DESCR,
								CASE
									WHEN EXPENSE_TYPE_SCD_KEY IN(58, 60, 61) THEN 'MATERIAL'
									ELSE 'LABOR'
									END AS EXPENSE_TYPE_CATG,
								LR.CHARGE_COMM_PCT,
								LR.CHARGE_COMPANY_PCT,
								LR.ALLOCATED_EXP_TYPE_AMOUNT * - 1 AS DOLLAR_AMOUNT,
								LR.STEP_NBR,
								LR.CCN_TRX_DATE_KEY,
								LR.ORIGINAL_SHIP_DATE_KEY,
								LR.FAIL_DATE_KEY,
								LR.START_DATE_KEY,
								LR.GL_ACCOUNT_SCD_KEY,
								LR.PROD_CODE_SCD_KEY,
								LR.CUST_ACCOUNT_SCD_KEY,
								LR.SUBMIT_OFFICE_SCD_KEY,
								LR.TRX_CURRENCY
							FROM
								WC_LABOR_ROLLUP LR
							INNER JOIN TIME_DAY TD                     ON TD.TIME_KEY = LR.CCN_TRX_DATE_KEY
							INNER JOIN CLAIM_TYPE_SCD CT               ON LR.CLAIM_TYPE_SCD_KEY = CT.CLAIM_TYPE_SCD_KEY
							INNER JOIN R12_GL_ACCOUNT_SCD GLA          ON GLA.GL_ACCOUNT_SCD_KEY = LR.GL_ACCOUNT_SCD_KEY
							LEFT OUTER JOIN R12_ACCOUNT_FILTER_UPD AFU ON AFU.R12_ACCOUNT = GLA.R12_ACCOUNT
							WHERE
								1 = 1
								-- for 'RETROFIT LABOR'
								AND LR.CLAIM_TYPE_SCD_KEY = 2
								AND TD.FULL_DATE >= TO_DATE('1/1/2001', 'MM/DD/YYYY')
								AND TD.FULL_DATE <= TO_DATE('12/31/2050', 'MM/DD/YYYY')
								AND((GLA.PS_ACCOUNT = 'NA' AND AFU.STANDARD_WARRANTY_EXPENSE = 'Y')
								OR GLA.PS_ACCOUNT LIKE '0620%'
								OR GLA.PS_ACCOUNT LIKE '8062%')
					) CCN_DATA
				LEFT OUTER JOIN (
					SELECT DISTINCT
					CLAIM_NBR, STEP_NBR, WA_POLICY_TYPE, WA_RANGE
					FROM DM_FAL_CLAIMS_WARRANTY_XRF
					) FCW ON CCN_DATA.CLAIM_NBR = FCW.CLAIM_NBR AND CCN_DATA.STEP_NBR = FCW.STEP_NBR
				INNER JOIN TIME_DAY TD3                        ON CCN_DATA.CCN_TRX_DATE_KEY = TD3.TIME_KEY
				INNER JOIN TIME_DAY TD2                        ON CCN_DATA.ORIGINAL_SHIP_DATE_KEY = TD2.TIME_KEY
				INNER JOIN TIME_DAY TD1                        ON CCN_DATA.FAIL_DATE_KEY = TD1.TIME_KEY
				INNER JOIN TIME_DAY TD                         ON CCN_DATA.START_DATE_KEY = TD.TIME_KEY
				INNER JOIN R12_GL_ACCOUNT_SCD GLA              ON CCN_DATA.GL_ACCOUNT_SCD_KEY = GLA.GL_ACCOUNT_SCD_KEY
				INNER JOIN PROD_CODE_SCD PCS                   ON CCN_DATA.PROD_CODE_SCD_KEY = PCS.PROD_CODE_SCD_KEY
				INNER JOIN CUST_ACCOUNT_SCD CACCT              ON CCN_DATA.CUST_ACCOUNT_SCD_KEY = CACCT.CUST_ACCOUNT_SCD_KEY
				INNER JOIN SUBMIT_OFFICE_SCD SOS               ON CCN_DATA.SUBMIT_OFFICE_SCD_KEY = SOS.SUBMIT_OFFICE_SCD_KEY
				INNER JOIN PROD_CODE_XREF_RCPO_DR PRODGRP      ON PCS.PROD_CODE = PRODGRP.MANF_PROD_CODE AND GLA.PS_COMPANY = PRODGRP.GL_LEDGER
				INNER JOIN UD_031_RETROFIT_RULES RES_PCT       ON CASE
						WHEN CCN_DATA.CLAIM_TYPE = 'EXTD PURCHASED LABOR' THEN 'EXTENDED PURCHASED LABOR'
						ELSE CCN_DATA.CLAIM_TYPE
						END = RES_PCT.CLAIM_TYPE
					AND CCN_DATA.EXPENSE_TYPE_DESCR = RES_PCT.EXPENSE_TYPE_DESCR
					AND CCN_DATA.EXPENSE_TYPE_CATG = UPPER(RES_PCT.EXPENSE_TYPE_CATG)
					AND SOS.COMPANY_OWNED_IND = RES_PCT.COMPANY_OWNED_IND
					AND CASE
						WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1' THEN 'Y'
						ELSE 'N'
						END = RES_PCT.CUST_CREDIT_CATG_CODE
				INNER JOIN UD_031_RETROFIT_ID RD               ON CCN_DATA.RETRO_ID = RD.RETROFIT_ID
				LEFT OUTER JOIN UD_031_STDWTY_RSV_CLM_ADJ A    ON CCN_DATA.CLAIM_NBR = A.CLAIM_NUMBER
				LEFT OUTER JOIN UD_031_RETROFIT_RULES RES_PCT1 ON A.CLAIM_TYPE = RES_PCT1.CLAIM_TYPE

				WHERE
					1 = 1
					AND PRODGRP.PRODUCT_CATEGORY IS NOT NULL
					-- AND CCN_DATA.CLAIM_NBR IN('4410816', '4496418')
			UNION ALL
			-- Retrofit Labor - Tavant
			SELECT
					'TL' AS QUERY_SOURCE,
					SUBSTR(STG.CLAIM_NUMBER, 3) * -1,
					0 AS STEP_NUMBER,
					STG.BUSINESS_UNIT,
					STG.RESERVE_GROUP,
					STG.CLAIM_TYPE,
					STG.EXPENSE_AMOUNT,
					STG.EXPENSE_AMOUNT_DEC,
					STG.MATERIAL_LABOR,
					STG.GL_ACCOUNT,
					STG.EXPENSE_TYPE_DESCR,
					STG.OFFICE_NAME,
					STG.GL_PROD_CODE,
					STG.MANF_PROD_CODE,
					STG.COMPANY_OWNED,
					STG.CUSTOMER_NUMBER,
					STG.CUSTOMER_NAME,
					STG.INTERNAL_EXTERNAL,
					STG.TRX_DATE,
					STG.TRX_YEAR,
					STG.TRX_MONTH,
					STG.INTMONTHS_TRX_TO_BASE,
					STG.INTMONTHS_SHIP_TO_BASE,
					STG.SHIP_DATE,
					STG.SHIP_YEAR_MONTH,
					STG.INTMONTHS_SHIP_TO_TRX,
					STG.START_DATE,
					STG.INTMONTHS_START_TO_TRX,
					STG.FAIL_DATE,
					STG.INTMONTHS_FAIL_TO_TRX,
					STG.WARRANTY_TYPE,
					STG.WARRANTY_DURATION,
					STG.CURRENCY,
					STG.COUNTRY_INDICATOR,
					STG.RETROFIT_ID,
					GL_LOCATION AS GL_DEPT,
					STG.IN_RESERVE_PERCENT,
					RD.NEW_RESOLVED_IND,
					STG.TRX_LAG,
					STG.TRXYEARMONTH,
					STG.EXPENSE_AMT_IN_RES,
					STG.EXPENSE_AMT_NOT_IN_RES
				FROM TAV_STG STG
				INNER JOIN UD_031_RETROFIT_ID RD ON RD.RETROFIT_ID = STG.RETROFIT_ID
				INNER JOIN R12_ACCOUNT_FILTER_UPD AFU
					ON STG.GL_ACCOUNT = AFU.R12_ACCOUNT
				WHERE 0 = 0
					AND AFU.STANDARD_WARRANTY_EXPENSE = 'Y'
					AND Upper(CLAIM_TYPE) = 'RETROFIT LABOR'
		)
		WHERE :?prmCountry
		/*x*/
		/*system*/
	ORDER BY
		COUNTRY_INDICATOR,
		TRXYEARMONTH,
		GL_ACCOUNT