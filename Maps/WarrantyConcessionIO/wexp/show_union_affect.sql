/* 1st Year Warranty*/
SELECT distinct
		CCN_DATA.CLAIM_NBR AS CLAIM_NUMBER,
		CCN_DATA.STEP_NBR AS STEP_NUMBER,
		GLA.COMPANY AS BUSINESS_UNIT,
		PRODGRP.PRODUCT_CATEGORY AS RESERVE_GROUP,
		CCN_DATA.CLAIM_TYPE AS CLAIM_TYPE,
		CCN_DATA.DOLLAR_AMOUNT AS EXPENSE_AMOUNT,
		100 *(CCN_DATA.DOLLAR_AMOUNT - TRUNC(CCN_DATA.DOLLAR_AMOUNT)) AS EXPENSE_AMOUNT_DEC,
		CCN_DATA.EXPENSE_TYPE_CATG AS MATERIAL_LABOR,
		GLA.ACCOUNT AS GL_ACCOUNT,
		CCN_DATA.EXPENSE_TYPE_DESCR AS EXPENSE_TYPE_DESCR,
		SOS.SUBMIT_OFFICE_NAME AS OFFICE_NAME,
		CASE WHEN GLA.PROD_CODE IS NULL OR GLA.PROD_CODE = ''
			THEN PCS.PROD_CODE
			ELSE GLA.PROD_CODE
		END AS GL_PROD_CODE,
		PCS.PROD_CODE AS MANF_PROD_CODE,
		SOS.COMPANY_OWNED_IND AS COMPANY_OWNED,
		CACCT.ACCOUNT_NUMBER AS CUSTOMER_NUMBER,
		CACCT.CUST_ACCT_NAME AS CUSTOMER_NAME,
		(
		CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
			THEN 'Y'
			ELSE 'N'
		END) AS INTERNAL_EXTERNAL,
		TD3.FULL_DATE AS TRX_DATE,
		TO_CHAR(TD3.YEAR) AS TRX_YEAR,
		TO_CHAR(TD3.MONTH) AS TRX_MONTH,
		CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_TRX_TO_BASE,
		CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_SHIP_TO_BASE,
		TD2.FULL_DATE AS SHIP_DATE,
		(TD2.YEAR * 100 + TD2.MONTH) AS SHIP_YEAR_MONTH,
		CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1 AS INTMONTHS_SHIP_TO_TRX,
		TD.FULL_DATE AS START_DATE,
		((TD3.TIME_KEY - TD.TIME_KEY) / 30.42) AS INTMONTHS_START_TO_TRX,
		TD1.FULL_DATE AS FAIL_DATE,
		((TD3.TIME_KEY - TD1.TIME_KEY) / 30.42) AS INTMONTHS_FAIL_TO_TRX,
		/* PER JACKIE'S REQUEST ON 5/24/07 IF FAIL DATE = 1/1/1900 OR NULL THEN SET WARRANTY TYPE TO NO. */
		(
		CASE WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL
			THEN 'NO'
			ELSE FCW.WA_POLICY_TYPE
		END) AS WARRANTY_TYPE,
		(
		CASE WHEN CCN_DATA.CLAIM_TYPE = 'EXTD PURCHASED LABOR'
			THEN 'Out of Standard Warranty'
			ELSE(
				CASE                                   WHEN FCW.WA_RANGE = '1'
					THEN '1st Year Standard Warranty'     WHEN FCW.WA_RANGE = '2'
					THEN '2nd-5th Year Standard Warranty' WHEN FCW.WA_RANGE = '5'
					THEN '> 5th Year Standard Warranty'
					ELSE 'Out of Standard Warranty'
				END)
		END) AS WARRANTY_DURATION,
		CCN_DATA.TRX_CURRENCY AS CURRENCY,
		(
		CASE       WHEN ASX.NATION_CURR = 'USD'
			THEN 'USA'WHEN ASX.NATION_CURR = 'CAD'
			THEN 'CAN'
			ELSE 'CURRENCY: ' ||ASX.NATION_CURR
		END) AS COUNTRY_INDICATOR,
		CCN_DATA.RETRO_ID AS RETROFIT_ID,
		GLA.COST_CENTER AS GL_DEPT,
		CASE WHEN A.CLAIM_NUMBER IS NULL
			THEN 10000 *(RES_PCT.RESERVE_PCT)
			ELSE RES_PCT1.RESERVE_PCT
		END AS IN_RESERVE_PERCENT,
		ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42) AS TRX_LAG,
		100 * TD3.YEAR + TD3.MONTH AS TRXYEARMONTH,
		0 AS EXPENSE_AMT_IN_RES,
		0 AS EXPENSE_AMT_NOT_IN_RES
	FROM
		(
			SELECT
					'TRANE_LABOR' AS TYPE,
					MLR.CLAIM_NBR,
					MLR.RETRO_ID,
					'CONCESSION' AS CLAIM_TYPE,
					'TRANE COMPANY' AS EXPENSE_TYPE_DESCR,
					'LABOR' AS EXPENSE_TYPE_CATG,
					LR.CHARGE_COMM_PCT,
					LR.CHARGE_COMPANY_PCT,
					((SUM((LR2.APPR_AMT)) + MAX((LR.APPR_DIAGNOSTIC_AMT + LR.APPR_TRAVEL_AMT) /
					(
						SELECT COUNT(DISTINCT LRS.STEP_NBR) FROM WC_LABOR_ROLLUP LRS WHERE LRS.CLAIM_NBR = LR.CLAIM_NBR
					)
					)) * LR.CHARGE_COMPANY_PCT) AS DOLLAR_AMOUNT,
					MLR.STEP_NBR,
					MLR.CCN_TRX_DATE_KEY,
					MLR.ORIGINAL_SHIP_DATE_KEY,
					MLR.FAIL_DATE_KEY,
					MLR.START_DATE_KEY,
					MLR.GL_ACCOUNT_SCD_KEY,
					MLR.PROD_CODE_SCD_KEY,
					MLR.CUST_ACCOUNT_SCD_KEY,
					MLR.SUBMIT_OFFICE_SCD_KEY,
					MLR.TRX_CURRENCY
				FROM
					WC_MAT_LBR_ROLLUP MLR
				INNER JOIN WC_LABOR_ROLLUP LR ON 1 = 1 AND MLR.CCN_TRX_DATE_KEY = LR.CCN_TRX_DATE_KEY AND MLR.DETAIL_NBR = LR.DETAIL_NBR AND MLR.CLAIM_NBR = LR.CLAIM_NBR AND MLR.STEP_NBR = LR.STEP_NBR
				INNER JOIN TIME_DAY TD        ON 1 = 1 AND TD.TIME_KEY = MLR.CCN_TRX_DATE_KEY AND TD.TIME_KEY = LR.CCN_TRX_DATE_KEY
				INNER JOIN GL_ACCOUNT_SCD GLA ON 1 = 1 AND GLA.GL_ACCOUNT_SCD_KEY = MLR.GL_ACCOUNT_SCD_KEY AND GLA.GL_ACCOUNT_SCD_KEY = LR.GL_ACCOUNT_SCD_KEY
				INNER JOIN
					(SELECT DISTINCT CLAIM_NBR, DETAIL_NBR, STEP_NBR, APPR_AMT, CCN_TRX_DATE_KEY FROM WC_LABOR_ROLLUP LR1 WHERE CLAIM_TYPE_SCD_KEY = 11 AND EXISTS
								(SELECT 'X' FROM GL_ACCOUNT_SCD WHERE LR1.GL_ACCOUNT_SCD_KEY = GL_ACCOUNT_SCD_KEY AND(ACCOUNT LIKE '0620%' OR ACCOUNT LIKE '8062%')
								)
					) LR2 ON 1 = 1 AND TD.TIME_KEY = LR2.CCN_TRX_DATE_KEY AND MLR.CCN_TRX_DATE_KEY = LR2.CCN_TRX_DATE_KEY AND MLR.DETAIL_NBR = LR2.DETAIL_NBR AND MLR.CLAIM_NBR = LR2.CLAIM_NBR AND MLR.STEP_NBR = LR2.STEP_NBR
				WHERE
					1 = 1
					AND MLR.CLAIM_NBR IN(6127696, 6127696, 6170454)
					AND MLR.CLAIM_TYPE_SCD_KEY = 11
					AND TD.FULL_DATE >= TO_DATE('1/1/2001', 'MM/DD/YYYY')
					AND(GLA.ACCOUNT LIKE '0620%'
					OR GLA.ACCOUNT LIKE '8062%')
				GROUP BY
					MLR.CLAIM_NBR,
					LR.CHARGE_COMM_PCT,
					LR.CHARGE_COMPANY_PCT,
					MLR.CCN_TRX_DATE_KEY,
					MLR.ORIGINAL_SHIP_DATE_KEY,
					MLR.FAIL_DATE_KEY,
					MLR.START_DATE_KEY,
					MLR.STEP_NBR,
					MLR.GL_ACCOUNT_SCD_KEY,
					MLR.PROD_CODE_SCD_KEY,
					MLR.CUST_ACCOUNT_SCD_KEY,
					MLR.SUBMIT_OFFICE_SCD_KEY,
					MLR.TRX_CURRENCY,
					MLR.RETRO_ID
		)
		CCN_DATA
	LEFT OUTER JOIN DM_FAL_CLAIMS_WARRANTY_XRF FCW  ON 1 = 1 AND CCN_DATA.CLAIM_NBR = FCW.CLAIM_NBR AND CCN_DATA.STEP_NBR = FCW.STEP_NBR
	INNER JOIN TIME_DAY TD3                         ON 1 = 1 AND CCN_DATA.CCN_TRX_DATE_KEY = TD3.TIME_KEY
	INNER JOIN TIME_DAY TD2                         ON 1 = 1 AND CCN_DATA.ORIGINAL_SHIP_DATE_KEY = TD2.TIME_KEY
	INNER JOIN TIME_DAY TD1                         ON 1 = 1 AND CCN_DATA.FAIL_DATE_KEY = TD1.TIME_KEY
	INNER JOIN TIME_DAY TD                          ON 1 = 1 AND CCN_DATA.START_DATE_KEY = TD.TIME_KEY
	INNER JOIN GL_ACCOUNT_SCD GLA                   ON 1 = 1 AND CCN_DATA.GL_ACCOUNT_SCD_KEY = GLA.GL_ACCOUNT_SCD_KEY
	INNER JOIN PROD_CODE_SCD PCS                    ON 1 = 1 AND CCN_DATA.PROD_CODE_SCD_KEY = PCS.PROD_CODE_SCD_KEY
	INNER JOIN CUST_ACCOUNT_SCD CACCT               ON 1 = 1 AND CCN_DATA.CUST_ACCOUNT_SCD_KEY = CACCT.CUST_ACCOUNT_SCD_KEY
	INNER JOIN SUBMIT_OFFICE_SCD SOS                ON 1 = 1 AND CCN_DATA.SUBMIT_OFFICE_SCD_KEY = SOS.SUBMIT_OFFICE_SCD_KEY
	INNER JOIN PROD_CODE_XREF_RCPO_DR PRODGRP       ON 1 = 1 AND GLA.COMPANY = PRODGRP.GL_LEDGER AND PCS.PROD_CODE = PRODGRP.MANF_PROD_CODE
	LEFT OUTER JOIN ACTUATE_SEC_XREF ASX            ON 1 = 1 AND GLA.COMPANY = ASX.PSGL
	INNER JOIN DM_WAR_CSN_RSV_PCT_REF RES_PCT       ON 1 = 1 AND CCN_DATA.EXPENSE_TYPE_DESCR = RES_PCT.EXPENSE_TYPE_DESCR AND CCN_DATA.EXPENSE_TYPE_CATG = UPPER(RES_PCT.EXPENSE_TYPE_CATG) AND SOS.COMPANY_OWNED_IND = RES_PCT.COMPANY_OWNED_IND
	LEFT OUTER JOIN UD_031_STDWTY_RSV_CLM_ADJ A     ON 1 = 1 AND CCN_DATA.CLAIM_NBR = A.CLAIM_NUMBER
	LEFT OUTER JOIN DM_WAR_CSN_RSV_PCT_REF RES_PCT1 ON 1 = 1 AND A.CLAIM_TYPE = RES_PCT1.CLAIM_TYPE
	WHERE
		1 = 1
		AND(
		CASE WHEN CCN_DATA.CLAIM_TYPE = 'EXTD PURCHASED LABOR'
			THEN 'EXTENDED PURCHASED LABOR'
			ELSE CCN_DATA.CLAIM_TYPE
		END) = RES_PCT.CLAIM_TYPE
		AND(
		CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
			THEN 'Y'
			ELSE 'N'
		END) = RES_PCT.CUST_CREDIT_CATG_CODE
		AND PRODGRP.PRODUCT_CATEGORY IS NOT NULL
UNION
		(
			SELECT
					MLR.CLAIM_NBR AS CLAIM_NUMBER,
					MLR.STEP_NBR AS STEP_NUMBER,
					GLA.COMPANY AS BUSINESS_UNIT,
					PRODGRP.PRODUCT_CATEGORY AS RESERVE_GROUP,
					CTYPES.CLAIM_TYPE_DESCR AS CLAIM_TYPE,
					SUM(MLR.EXP_TYPE_AMOUNT * - 1) AS EXPENSE_AMOUNT,
					SUM(100 *(MLR.EXP_TYPE_AMOUNT * - 1 - TRUNC(MLR.EXP_TYPE_AMOUNT * - 1))) AS EXPENSE_AMOUNT_DEC,
					RES_PCT.EXPENSE_TYPE_CATG AS MATERIAL_LABOR,
					GLA.ACCOUNT AS GL_ACCOUNT,
					ETS.EXPENSE_TYPE_DESCR AS EXPENSE_TYPE_DESCR,
					SOS.SUBMIT_OFFICE_NAME AS OFFICE_NAME,
					CASE WHEN GLA.PROD_CODE IS NULL OR GLA.PROD_CODE = ''
						THEN PCS.PROD_CODE
						ELSE GLA.PROD_CODE
					END AS GL_PROD_CODE,
					PCS.PROD_CODE AS MANF_PROD_CODE,
					SOS.COMPANY_OWNED_IND AS COMPANY_OWNED,
					CACCT.ACCOUNT_NUMBER AS CUSTOMER_NUMBER,
					CACCT.CUST_ACCT_NAME AS CUSTOMER_NAME,
					(
					CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
						THEN 'Y'
						ELSE 'N'
					END) AS INTERNAL_EXTERNAL,
					TD3.FULL_DATE AS TRX_DATE,
					TO_CHAR(TD3.YEAR) AS TRX_YEAR,
					TO_CHAR(TD3.MONTH) AS TRX_MONTH,
					CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_TRX_TO_BASE,
					CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1 AS INTMONTHS_SHIP_TO_BASE,
					TD2.FULL_DATE AS SHIP_DATE,
					(TD2.YEAR * 100 + TD2.MONTH) AS SHIP_YEAR_MONTH,
					CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1 AS INTMONTHS_SHIP_TO_TRX,
					TD.FULL_DATE AS START_DATE,
					((TD3.TIME_KEY - TD.TIME_KEY) / 30.42) AS INTMONTHS_START_TO_TRX,
					TD1.FULL_DATE AS FAIL_DATE,
					((TD3.TIME_KEY - TD1.TIME_KEY) / 30.42) AS INTMONTHS_FAIL_TO_TRX,
					(
					CASE WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL
						THEN 'NO'
						ELSE FCW.WA_POLICY_TYPE
					END) AS WARRANTY_TYPE,
					(
					CASE                                   WHEN FCW.WA_RANGE = '1'
						THEN '1st Year Standard Warranty'     WHEN FCW.WA_RANGE = '2'
						THEN '2nd-5th Year Standard Warranty' WHEN FCW.WA_RANGE = '5'
						THEN '> 5th Year Standard Warranty'
						ELSE 'Out of Standard Warranty'
					END) AS WARRANTY_DURATION,
					MLR.TRX_CURRENCY AS CURRENCY,
					(
					CASE       WHEN ASX.NATION_CURR = 'USD'
						THEN 'USA'WHEN ASX.NATION_CURR = 'CAD'
						THEN 'CAN'
						ELSE 'CURRENCY: ' ||ASX.NATION_CURR
					END) AS COUNTRY_INDICATOR,
					MLR.RETRO_ID AS RETROFIT_ID,
					GLA.COST_CENTER AS GL_DEPT,
					CASE WHEN A.CLAIM_NUMBER IS NULL
						THEN 10000 *(RES_PCT.RESERVE_PCT)
						ELSE RES_PCT1.RESERVE_PCT
					END AS IN_RESERVE_PERCENT,
					ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42) AS TRX_LAG,
					100 * TD3.YEAR + TD3.MONTH AS TRXYEARMONTH,
					0 AS EXPENSE_AMT_IN_RES,
					0 AS EXPENSE_AMT_NOT_IN_RES
				FROM
					WC_MAT_LBR_ROLLUP MLR
				INNER JOIN EXPENSE_TYPE_SCD ET                  ON 1 = 1 AND MLR.EXPENSE_TYPE_SCD_KEY = ET.EXPENSE_TYPE_SCD_KEY
				LEFT OUTER JOIN DM_FAL_CLAIMS_WARRANTY_XRF FCW  ON 1 = 1 AND MLR.CLAIM_NBR = FCW.CLAIM_NBR AND MLR.DETAIL_NBR = FCW.DETAIL_NBR AND MLR.STEP_NBR = FCW.STEP_NBR
				INNER JOIN TIME_DAY TD3                         ON 1 = 1 AND MLR.CCN_TRX_DATE_KEY = TD3.TIME_KEY
				INNER JOIN TIME_DAY TD2                         ON 1 = 1 AND MLR.ORIGINAL_SHIP_DATE_KEY = TD2.TIME_KEY
				INNER JOIN TIME_DAY TD1                         ON 1 = 1 AND MLR.FAIL_DATE_KEY = TD1.TIME_KEY
				INNER JOIN TIME_DAY TD                          ON 1 = 1 AND MLR.START_DATE_KEY = TD.TIME_KEY
				INNER JOIN CLAIM_TASK_SCD CTASKS                ON 1 = 1 AND MLR.CLAIM_TASK_SCD_KEY = CTASKS.CLAIM_TASK_SCD_KEY
				INNER JOIN CLAIM_TYPE_SCD CTYPES                ON 1 = 1 AND MLR.CLAIM_TYPE_SCD_KEY = CTYPES.CLAIM_TYPE_SCD_KEY
				INNER JOIN GL_ACCOUNT_SCD GLA                   ON 1 = 1 AND MLR.GL_ACCOUNT_SCD_KEY = GLA.GL_ACCOUNT_SCD_KEY
				INNER JOIN EXPENSE_TYPE_SCD ETS                 ON 1 = 1 AND MLR.EXPENSE_TYPE_SCD_KEY = ETS.EXPENSE_TYPE_SCD_KEY
				INNER JOIN PROD_CODE_SCD PCS                    ON 1 = 1 AND MLR.PROD_CODE_SCD_KEY = PCS.PROD_CODE_SCD_KEY
				INNER JOIN CUST_ACCOUNT_SCD CACCT               ON 1 = 1 AND MLR.CUST_ACCOUNT_SCD_KEY = CACCT.CUST_ACCOUNT_SCD_KEY
				INNER JOIN SUBMIT_OFFICE_SCD SOS                ON 1 = 1 AND MLR.SUBMIT_OFFICE_SCD_KEY = SOS.SUBMIT_OFFICE_SCD_KEY
				INNER JOIN PROD_CODE_XREF_RCPO_DR PRODGRP       ON 1 = 1 AND GLA.COMPANY = PRODGRP.GL_LEDGER AND PCS.PROD_CODE = PRODGRP.MANF_PROD_CODE
				LEFT OUTER JOIN ACTUATE_SEC_XREF ASX            ON 1 = 1 AND GLA.COMPANY = ASX.PSGL
				INNER JOIN DM_WAR_CSN_RSV_PCT_REF RES_PCT       ON 1 = 1 AND CTYPES.CLAIM_TYPE_DESCR = RES_PCT.CLAIM_TYPE AND ETS.EXPENSE_TYPE_DESCR = RES_PCT.EXPENSE_TYPE_DESCR AND SOS.COMPANY_OWNED_IND = RES_PCT.COMPANY_OWNED_IND
				LEFT OUTER JOIN UD_031_STDWTY_RSV_CLM_ADJ A     ON 1 = 1 AND MLR.CLAIM_NBR = A.CLAIM_NUMBER
				LEFT OUTER JOIN DM_WAR_CSN_RSV_PCT_REF RES_PCT1 ON 1 = 1 AND A.CLAIM_TYPE = RES_PCT1.CLAIM_TYPE
				WHERE
					1 = 1
					AND MLR.CLAIM_NBR IN(6127696, 6127696, 6170454)
					AND(MLR.CLAIM_TYPE_SCD_KEY = 3
					OR MLR.CLAIM_TYPE_SCD_KEY = 10)
					AND(
					CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
						THEN 'Y'
						ELSE 'N'
					END) = RES_PCT.CUST_CREDIT_CATG_CODE
					AND PRODGRP.PRODUCT_CATEGORY IS NOT NULL
					AND TD3.FULL_DATE >= TO_DATE('1/1/2001', 'MM/DD/YYYY')
					AND(GLA.ACCOUNT LIKE '8062%'
					OR GLA.ACCOUNT LIKE '0620%')
				GROUP BY
					MLR.CLAIM_NBR,
					MLR.STEP_NBR,
					GLA.COMPANY,
					PRODGRP.PRODUCT_CATEGORY,
					CTYPES.CLAIM_TYPE_DESCR,
					RES_PCT.EXPENSE_TYPE_CATG,
					GLA.ACCOUNT,
					ETS.EXPENSE_TYPE_DESCR,
					SOS.SUBMIT_OFFICE_NAME,
					GLA.PROD_CODE,
					PCS.PROD_CODE,
					SOS.COMPANY_OWNED_IND,
					CACCT.ACCOUNT_NUMBER,
					CACCT.CUST_ACCT_NAME,
					(
					CASE WHEN CACCT.CUST_CREDIT_CATG_CODE = 'Z1'
						THEN 'Y'
						ELSE 'N'
					END),
					TD3.FULL_DATE,
					TO_CHAR(TD3.YEAR),
					TO_CHAR(TD3.MONTH),
					CEIL(ABS(MONTHS_BETWEEN(TD3.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1,
					CEIL(ABS(MONTHS_BETWEEN(TD2.FULL_DATE, ADD_MONTHS(TRUNC(SYSDATE, 'MM'), - 1)))) + 1,
					TD2.FULL_DATE,
					(TD2.YEAR * 100 + TD2.MONTH),
					CEIL(((TD3.TIME_KEY - TD2.TIME_KEY) / 30.42)) + 1,
					TD.FULL_DATE,
					((TD3.TIME_KEY - TD.TIME_KEY) / 30.42),
					TD1.FULL_DATE,
					((TD3.TIME_KEY - TD1.TIME_KEY) / 30.42),
					(
					CASE WHEN TD1.FULL_DATE = TO_DATE('1/1/1900', 'MM/DD/YYYY') OR TD1.FULL_DATE IS NULL
						THEN 'NO'
						ELSE FCW.WA_POLICY_TYPE
					END),
					(
					CASE                                   WHEN FCW.WA_RANGE = '1'
						THEN '1st Year Standard Warranty'     WHEN FCW.WA_RANGE = '2'
						THEN '2nd-5th Year Standard Warranty' WHEN FCW.WA_RANGE = '5'
						THEN '> 5th Year Standard Warranty'
						ELSE 'Out of Standard Warranty'
					END),
					MLR.TRX_CURRENCY,
					(
					CASE       WHEN ASX.NATION_CURR = 'USD'
						THEN 'USA'WHEN ASX.NATION_CURR = 'CAD'
						THEN 'CAN'
						ELSE 'CURRENCY: ' ||ASX.NATION_CURR
					END),
					MLR.RETRO_ID,
					GLA.COST_CENTER
					--, case when  a.CLAIM_NUMBER is null   then 10000*(CASE WHEN PCS.PROD_CODE='0061' or FCW.WA_RANGE<>'1' THEN 0 ELSE RES_PCT.RESERVE_PCT  END)  else  res_PCT1.RESERVE_PCT end
					,
					CASE WHEN A.CLAIM_NUMBER IS NULL
						THEN 10000 *(RES_PCT.RESERVE_PCT)
						ELSE RES_PCT1.RESERVE_PCT
					END,
					ROUND((TD3.FULL_DATE - TD2.FULL_DATE) / 30.42),
					100 * TD3.YEAR + TD3.MONTH
		)
		/**/
		;